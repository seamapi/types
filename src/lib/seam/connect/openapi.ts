export default {
  components: {
    schemas: {
      access_code: {
        description:
          'Represents a smart lock [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nAn access code is a code used for a keypad or pinpad device. Unlike physical keys, which can easily be lost or duplicated, PIN codes can be customized, tracked, and altered on the fly. Using the Seam Access Code API, you can easily generate access codes on the hundreds of door lock models with which we integrate.\n\nSeam supports programming two types of access codes: [ongoing](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#ongoing-access-codes) and [time-bound](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#time-bound-access-codes). To differentiate between the two, refer to the `type` property of the access code. Ongoing codes display as `ongoing`, whereas time-bound codes are labeled `time_bound`. An ongoing access code is active, until it has been removed from the device. To specify an ongoing access code, leave both `starts_at` and `ends_at` empty. A time-bound access code will be programmed at the `starts_at` time and removed at the `ends_at` time.\n\nIn addition, for certain devices, Seam also supports [offline access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#offline-access-codes). Offline access (PIN) codes are designed for door locks that might not always maintain an internet connection. For this type of access code, the device manufacturer uses encryption keys (tokens) to create server-based registries of algorithmically-generated offline PIN codes. Because the tokens remain synchronized with the managed devices, the locks do not require an active internet connection—and you do not need to be near the locks—to create an offline access code. Then, owners or managers can share these offline codes with users through a variety of mechanisms, such as messaging applications. That is, lock users do not need to install a smartphone application to receive an offline access code.',
        properties: {
          access_code_id: {
            description: 'Unique identifier for the access code.',
            format: 'uuid',
            type: 'string',
          },
          code: {
            description:
              'Code used for access. Typically, a numeric or alphanumeric string.',
            nullable: true,
            type: 'string',
          },
          common_code_key: {
            description:
              'Unique identifier for a group of access codes that share the same code.',
            nullable: true,
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the access code was created.',
            format: 'date-time',
            type: 'string',
          },
          device_id: {
            description:
              'Unique identifier for the device associated with the access code.',
            format: 'uuid',
            type: 'string',
          },
          ends_at: {
            description:
              'Date and time after which the time-bound access code becomes inactive.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
            items: {
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description: 'Failed to set code on SmartThings device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_failed_to_set_access_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to set code after multiple retries.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: [
                        'smartthings_failed_to_set_after_multiple_retries',
                      ],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No free slots available on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_no_free_slots_available'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to set code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['failed_to_set_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to remove code from device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['failed_to_remove_from_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code detected on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['duplicate_code_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'An attempt to modify this access code was prevented.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['duplicate_code_attempt_prevented'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No space for access code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['no_space_for_access_code_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Igloohome bridge has too many pending jobs in the queue.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['igloohome_bridge_too_many_pending_jobs'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Igloohome bridge is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['igloohome_bridge_offline'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Lock has reached maximum amount of codes.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: [
                        'igloohome_offline_access_code_no_variance_available',
                      ],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm that the access code is set on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm the deletion of the access code on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_deletion'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Code was modified or removed externally after Seam successfully set it on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['code_modified_external_to_seam'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Invalid code length for August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_invalid_code_length'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_programming_delay'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'All access code slots on the device are full.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_slots_full'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is missing a keypad.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_keypad'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is temporarily offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_temporarily_offline'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Salto site user is not subscribed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_user_not_subscribed'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hubitat_device_programming_delay'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No free positions available on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hubitat_no_free_positions_available'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code name detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_duplicate_code_name'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Potential duplicate access code detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_potential_duplicate_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No valid user level for Oracode.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['dormakaba_oracode_no_valid_user_level'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Indicates that the account is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto site user limit has been reached.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_offline'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device has been removed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_removed'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the hub is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hub_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [backup access code pool](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes) is empty.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['empty_backup_access_code_pool'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the user is not authorized to use the August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_not_authorized'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not connected to a bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not paired with a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_not_paired_to_gateway'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that device credentials are missing.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['missing_device_credentials'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the auxiliary heat is running.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['auxiliary_heat_running'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a subscription is required to connect.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['subscription_required'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Lockly lock is not connected to a Wi-Fi bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_missing_wifi_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the credentials provided were invalid.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['invalid_credentials'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if the Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline. See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          is_backup: {
            description: 'Indicates whether the access code is a backup code.',
            type: 'boolean',
          },
          is_backup_access_code_available: {
            description:
              'Indicates whether a backup access code is available for use if the primary access code is lost or compromised.',
            type: 'boolean',
          },
          is_external_modification_allowed: {
            description:
              'Indicates whether changes to the access code from external sources are permitted.',
            type: 'boolean',
          },
          is_managed: {
            description: 'Indicates whether Seam manages the access code.',
            enum: [true],
            type: 'boolean',
          },
          is_offline_access_code: {
            description:
              'Indicates whether the access code is intended for use in offline scenarios. If `true`, this code can be created on a device without a network connection.',
            type: 'boolean',
          },
          is_one_time_use: {
            description:
              'Indicates whether the access code can only be used once. If `true`, the code becomes invalid after the first use.',
            type: 'boolean',
          },
          is_scheduled_on_device: {
            description:
              'Indicates whether the code is set on the device according to a preconfigured schedule.',
            type: 'boolean',
          },
          is_waiting_for_code_assignment: {
            description:
              'Indicates whether the access code is waiting for a code assignment.',
            type: 'boolean',
          },
          name: {
            description:
              "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
            nullable: true,
            type: 'string',
          },
          pulled_backup_access_code_id: {
            description:
              'Identifier of the pulled backup access code. Used to associate the pulled backup access code with the original access code.',
            format: 'uuid',
            nullable: true,
            type: 'string',
          },
          starts_at: {
            description:
              'Date and time at which the time-bound access code becomes active.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          status: {
            description:
              'Current status of the access code within the operational lifecycle. Values are `setting`, a transitional phase that indicates that the code is being configured or activated; `set`, which indicates that the code is active and operational; `unset`, which indicates a deactivated or unused state, either before activation or after deliberate deactivation; `removing`, which indicates a transitional period in which the code is being deleted or made inactive; and `unknown`, which indicates an indeterminate state, due to reasons such as system errors or incomplete data, that highlights a potential need for system review or troubleshooting. See also [Lifecycle of Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/lifecycle-of-access-codes).',
            enum: ['setting', 'set', 'unset', 'removing', 'unknown'],
            type: 'string',
          },
          type: {
            description:
              'Type of the access code. `ongoing` access codes are active continuously until deactivated manually. `time_bound` access codes have a specific duration.',
            enum: ['time_bound', 'ongoing'],
            type: 'string',
          },
          warnings: {
            description:
              'Warnings associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
            items: {
              description:
                'Warnings associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description: 'Failed to set code on SmartThings device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_failed_to_set_access_code'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schlage_detected_duplicate'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Received an error when attempting to create this code.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schlage_creation_outage'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Code was modified or removed externally after Seam successfully set it on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['code_modified_external_to_seam'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Delay in setting code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['delay_in_setting_on_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Delay in removing code from device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['delay_in_removing_from_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Third-party integration detected that may cause access codes to fail.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['third_party_integration_detected'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_programming_delay'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is temporarily offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_temporarily_offline'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Algopins must be used within 24 hours.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['igloo_algopin_must_be_used_within_24_hours'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Management was transferred to another workspace.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['management_transferred'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm that the access code is set on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_code'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
        },
        required: [
          'common_code_key',
          'type',
          'access_code_id',
          'device_id',
          'name',
          'code',
          'created_at',
          'errors',
          'warnings',
          'is_managed',
          'status',
          'is_backup_access_code_available',
          'is_external_modification_allowed',
          'is_one_time_use',
          'is_offline_access_code',
        ],
        type: 'object',
        'x-route-path': '/access_codes',
      },
      access_grant: {
        description:
          'Represents an access grant. Access grants enable you to grant a user identity access to spaces, entrances, and devices through one or more access methods, such as mobile keys, plastic cards, and PIN codes. You can create an access grant for an existing user identity, or you can create a new user identity *while* creating the new access grant.',
        properties: {
          access_grant_id: {
            description: 'ID of the access grant.',
            format: 'uuid',
            type: 'string',
          },
          access_method_ids: {
            description:
              'IDs of the access methods created for the access grant.',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
          },
          created_at: {
            description: 'Date and time at which the access grant was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description: 'Display name of the access grant.',
            type: 'string',
          },
          location_ids: {
            deprecated: true,
            items: { format: 'uuid', type: 'string' },
            type: 'array',
            'x-deprecated': 'Use `space_ids`.',
          },
          requested_access_methods: {
            description:
              'Access methods that the user requested for the access grant.',
            items: {
              properties: {
                created_access_method_ids: {
                  description:
                    'IDs of the access methods created for the requested access method.',
                  items: { format: 'uuid', type: 'string' },
                  type: 'array',
                },
                created_at: {
                  description:
                    'Date and time at which the requested access method was added to the access grant.',
                  format: 'date-time',
                  type: 'string',
                },
                display_name: {
                  description: 'Display name of the access method.',
                  type: 'string',
                },
                mode: {
                  description:
                    'Access method mode. Supported values: `code`, `card`, `mobile_key`.',
                  enum: ['code', 'card', 'mobile_key'],
                  type: 'string',
                },
              },
              required: [
                'display_name',
                'mode',
                'created_at',
                'created_access_method_ids',
              ],
              type: 'object',
            },
            type: 'array',
          },
          space_ids: {
            description:
              'IDs of the spaces to which the access grant gives access.',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
          },
          user_identity_id: {
            description:
              'ID of user identity to which the access grant gives access.',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the Seam workspace associated with the access grant.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'workspace_id',
          'access_grant_id',
          'user_identity_id',
          'location_ids',
          'space_ids',
          'requested_access_methods',
          'access_method_ids',
          'display_name',
          'created_at',
        ],
        type: 'object',
        'x-draft': 'Early access.',
        'x-route-path': '/access_grants',
      },
      access_method: {
        description:
          'Represents an access method for an access grant. Access methods describe the modes of access, such as PIN codes, plastic cards, and mobile keys. For a mobile key, the access method also stores the URL for the associated Instant Key.',
        properties: {
          access_method_id: {
            description: 'ID of the access method.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the access method was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description: 'Display name of the access method.',
            type: 'string',
          },
          instant_key_url: {
            description:
              'URL of the Instant Key for mobile key access methods.',
            type: 'string',
          },
          is_card_encoding_required: {
            description:
              'Indicates whether card encoding is required for plastic card access methods.',
            type: 'boolean',
          },
          issued_at: {
            description: 'Date and time at which the access method was issued.',
            format: 'date-time',
            type: 'string',
          },
          mode: {
            description:
              'Access method mode. Supported values: `code`, `card`, `mobile_key`.',
            enum: ['code', 'card', 'mobile_key'],
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the Seam workspace associated with the access method.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'workspace_id',
          'access_method_id',
          'display_name',
          'mode',
          'created_at',
        ],
        type: 'object',
        'x-draft': 'Early access.',
        'x-route-path': '/access_methods',
      },
      acs_access_group: {
        description:
          'Group that defines the entrances to which a set of users has access and, in some cases, the access schedule for these entrances and users.\n\nSome access control systems use [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups), which are sets of users, combined with sets of permissions. These permissions include both the set of areas or assets that the users can access and the schedule during which the users can access these areas or assets. Instead of assigning access rights individually to each access control system user, which can be time-consuming and error-prone, administrators can assign users to an access group, thereby ensuring that the users inherit all the permissions associated with the access group. Using access groups streamlines the process of managing large numbers of access control system users, especially in bigger organizations or complexes.\n\nTo learn whether your access control system supports access groups, see the corresponding [system integration guide](https://docs.seam.co/latest/device-and-system-integration-guides/overview#access-control-systems).',
        properties: {
          access_group_type: {
            deprecated: true,
            enum: [
              'pti_unit',
              'pti_access_level',
              'salto_ks_access_group',
              'brivo_group',
              'salto_space_group',
              'dormakaba_community_access_group',
            ],
            type: 'string',
            'x-deprecated': 'Use `external_type`.',
          },
          access_group_type_display_name: {
            deprecated: true,
            type: 'string',
            'x-deprecated': 'Use `external_type_display_name`.',
          },
          acs_access_group_id: {
            description: 'ID of the access group.',
            format: 'uuid',
            type: 'string',
          },
          acs_system_id: {
            description:
              'ID of the access control system that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the access group was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: { type: 'string' },
          external_type: {
            description:
              'Brand-specific terminology for the access group type.',
            enum: [
              'pti_unit',
              'pti_access_level',
              'salto_ks_access_group',
              'brivo_group',
              'salto_space_group',
              'dormakaba_community_access_group',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the access group type.',
            type: 'string',
          },
          is_managed: { enum: [true], type: 'boolean' },
          name: { description: 'Name of the access group.', type: 'string' },
          warnings: {
            description: 'Warnings associated with the `acs_access_group`.',
            items: {
              description: 'Warning associated with the `acs_access_group`.',
              properties: {
                created_at: {
                  description:
                    'Date and time at which Seam created the warning.',
                  format: 'date-time',
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
                warning_code: {
                  description:
                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                  enum: ['unknown_issue_with_acs_access_group'],
                  type: 'string',
                },
              },
              required: ['created_at', 'message', 'warning_code'],
              type: 'object',
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_access_group_id',
          'acs_system_id',
          'workspace_id',
          'connected_account_id',
          'name',
          'access_group_type',
          'access_group_type_display_name',
          'display_name',
          'external_type',
          'external_type_display_name',
          'created_at',
          'warnings',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/access_groups',
      },
      acs_credential: {
        description:
          'Means by which an [access control system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `acs_credential` object represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nAn access control system generally uses digital means of access to authorize a user trying to get through a specific entrance. Examples of credentials include plastic key cards, mobile keys, biometric identifiers, and PIN codes. The electronic nature of these credentials, as well as the fact that access is centralized, enables both the rapid provisioning and rescinding of access and the ability to compile access audit logs.\n\nFor each `acs_credential`, you define the access method. You can also specify additional properties, such as a PIN code, depending on the credential type.',
        properties: {
          access_method: {
            description:
              'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
            enum: ['code', 'card', 'mobile_key'],
            type: 'string',
          },
          acs_credential_id: {
            description:
              'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          acs_credential_pool_id: { format: 'uuid', type: 'string' },
          acs_system_id: {
            description:
              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          acs_user_id: {
            description:
              'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
            format: 'uuid',
            type: 'string',
          },
          assa_abloy_vostio_metadata: {
            description:
              'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            properties: {
              auto_join: {
                description:
                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                type: 'boolean',
              },
              door_names: {
                description:
                  'Names of the doors to which to grant access in the Vostio access system.',
                items: { type: 'string' },
                type: 'array',
              },
              endpoint_id: {
                description: 'Endpoint ID in the Vostio access system.',
                type: 'string',
              },
              key_id: {
                description: 'Key ID in the Vostio access system.',
                type: 'string',
              },
              key_issuing_request_id: {
                description:
                  'Key issuing request ID in the Vostio access system.',
                type: 'string',
              },
              override_guest_acs_entrance_ids: {
                description:
                  'IDs of the guest entrances to override in the Vostio access system.',
                items: { type: 'string' },
                type: 'array',
              },
            },
            type: 'object',
          },
          card_number: {
            description:
              'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            nullable: true,
            type: 'string',
          },
          code: {
            description:
              'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            nullable: true,
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
            minLength: 1,
            type: 'string',
          },
          ends_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            items: {
              properties: {
                error_code: { type: 'string' },
                message: { type: 'string' },
              },
              required: ['error_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          external_type: {
            description:
              'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
            enum: [
              'pti_card',
              'brivo_credential',
              'hid_credential',
              'visionline_card',
              'salto_ks_credential',
              'assa_abloy_vostio_key',
              'salto_space_key',
              'latch_access',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
            type: 'string',
          },
          is_issued: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
            type: 'boolean',
          },
          is_latest_desired_state_synced_with_provider: {
            description:
              'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
            nullable: true,
            type: 'boolean',
          },
          is_managed: { enum: [true], type: 'boolean' },
          is_multi_phone_sync_credential: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
            type: 'boolean',
          },
          is_one_time_use: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
            type: 'boolean',
          },
          issued_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          latest_desired_state_synced_with_provider_at: {
            description:
              'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          parent_acs_credential_id: {
            description:
              'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          starts_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
            type: 'string',
          },
          visionline_metadata: {
            description:
              'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            properties: {
              auto_join: {
                description:
                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                type: 'boolean',
              },
              card_function_type: {
                description:
                  'Card function type in the Visionline access system.',
                enum: ['guest', 'staff'],
                type: 'string',
              },
              card_id: {
                description: 'ID of the card in the Visionline access system.',
                type: 'string',
              },
              common_acs_entrance_ids: {
                description:
                  'Common entrance IDs in the Visionline access system.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
              credential_id: {
                description:
                  'ID of the credential in the Visionline access system.',
                type: 'string',
              },
              guest_acs_entrance_ids: {
                description:
                  'Guest entrance IDs in the Visionline access system.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
              is_valid: {
                description: 'Indicates whether the credential is valid.',
                type: 'boolean',
              },
              joiner_acs_credential_ids: {
                description:
                  'IDs of the credentials to which you want to join.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
            },
            required: ['card_function_type'],
            type: 'object',
          },
          warnings: {
            description:
              'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            items: {
              description:
                'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['waiting_to_be_issued'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schedule_externally_modified'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schedule_modified'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['being_deleted'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['unknown_issue_with_acs_credential'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['needs_to_be_reissued'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_credential_id',
          'acs_system_id',
          'display_name',
          'access_method',
          'created_at',
          'workspace_id',
          'errors',
          'warnings',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/credentials',
      },
      acs_credential_pool: {
        deprecated: true,
        properties: {
          acs_credential_pool_id: { format: 'uuid', type: 'string' },
          acs_system_id: { format: 'uuid', type: 'string' },
          created_at: { format: 'date-time', type: 'string' },
          display_name: { minLength: 1, type: 'string' },
          external_type: { enum: ['hid_part_number'], type: 'string' },
          external_type_display_name: { type: 'string' },
          workspace_id: { format: 'uuid', type: 'string' },
        },
        required: [
          'acs_credential_pool_id',
          'acs_system_id',
          'display_name',
          'external_type',
          'external_type_display_name',
          'created_at',
          'workspace_id',
        ],
        type: 'object',
        'x-deprecated': 'Not used.',
        'x-route-path': '/acs/credential_pools',
        'x-undocumented': 'Deprecated. Will be removed.',
      },
      acs_credential_provisioning_automation: {
        deprecated: true,
        properties: {
          acs_credential_provisioning_automation_id: {
            format: 'uuid',
            type: 'string',
          },
          created_at: { format: 'date-time', type: 'string' },
          credential_manager_acs_system_id: { format: 'uuid', type: 'string' },
          user_identity_id: { format: 'uuid', type: 'string' },
          workspace_id: { format: 'uuid', type: 'string' },
        },
        required: [
          'acs_credential_provisioning_automation_id',
          'credential_manager_acs_system_id',
          'user_identity_id',
          'created_at',
          'workspace_id',
        ],
        type: 'object',
        'x-deprecated': 'Not used.',
        'x-route-path': '/acs/credential_provisioning_automations',
        'x-undocumented': 'Deprecated. Will be removed.',
      },
      acs_encoder: {
        description:
          'Represents a hardware device that encodes [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) data onto physical cards within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nSome access control systems require credentials to be encoded onto plastic key cards using a card encoder. This process involves the following two key steps:\n\n1. Credential creation\n   Configure the access parameters for the credential.\n2. Card encoding\n   Write the credential data onto the card using a compatible card encoder.\n\nSeparately, the Seam API also supports card scanning, which enables you to scan and read the encoded data on a card. You can use this action to confirm consistency with access control system records or diagnose discrepancies if needed.\n\n See [Working with Card Encoders and Scanners](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).\n\nTo verify if your access control system requires a card encoder, see the corresponding [system integration guide](https://docs.seam.co/latest/device-and-system-integration-guides/overview#access-control-systems).',
        properties: {
          acs_encoder_id: {
            description:
              'ID of the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners.',
            format: 'uuid',
            type: 'string',
          },
          acs_system_id: {
            description:
              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) that contains the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name for the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
            items: {
              description:
                'Error associated with the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
              properties: {
                created_at: {
                  description: 'Date and time at which Seam created the error.',
                  format: 'date-time',
                  type: 'string',
                },
                error_code: {
                  description:
                    'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                  enum: ['acs_encoder_removed'],
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
              },
              required: ['created_at', 'message', 'error_code'],
              type: 'object',
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_encoder_id',
          'acs_system_id',
          'connected_account_id',
          'workspace_id',
          'errors',
          'created_at',
          'display_name',
        ],
        type: 'object',
        'x-route-path': '/acs/encoders',
      },
      acs_entrance: {
        description:
          'Represents an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nIn an access control system, an entrance is a secured door, gate, zone, or other method of entry. You can list details for all the `acs_entrance` resources in your workspace or get these details for a specific `acs_entrance`. You can also list all entrances associated with a specific credential, and you can list all credentials associated with a specific entrance.',
        properties: {
          acs_entrance_id: {
            description:
              'ID of the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            format: 'uuid',
            type: 'string',
          },
          acs_system_id: {
            description:
              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            format: 'uuid',
            type: 'string',
          },
          assa_abloy_vostio_metadata: {
            description:
              'ASSA ABLOY Vostio-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              door_name: {
                description: 'Name of the door in the Vostio access system.',
                type: 'string',
              },
              door_number: {
                description: 'Number of the door in the Vostio access system.',
                format: 'float',
                type: 'number',
              },
              door_type: {
                description: 'Type of the door in the Vostio access system.',
                enum: ['CommonDoor', 'EntranceDoor', 'GuestDoor', 'Elevator'],
                type: 'string',
              },
              pms_id: {
                description: 'PMS ID of the door in the Vostio access system.',
                type: 'string',
              },
              stand_open: {
                description:
                  'Indicates whether keys are allowed to set the door in stand open mode in the Vostio access system.',
                type: 'boolean',
              },
            },
            required: ['door_type', 'door_name'],
            type: 'object',
          },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name for the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            type: 'string',
          },
          dormakaba_community_metadata: {
            description:
              'dormakaba Community-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              access_point_name: {
                description:
                  'Name of the access point in the dormakaba Community access system.',
                type: 'string',
              },
            },
            required: ['access_point_name'],
            type: 'object',
          },
          errors: {
            description:
              'Errors associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            items: {
              properties: {
                error_code: {
                  description:
                    'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
              },
              required: ['error_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          latch_metadata: {
            description:
              'Latch-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              accessibility_type: {
                description: 'Accessibility type in the Latch access system.',
                type: 'string',
              },
              door_name: {
                description: 'Name of the door in the Latch access system.',
                type: 'string',
              },
              door_type: {
                description: 'Type of the door in the Latch access system.',
                type: 'string',
              },
              is_connected: {
                description: 'Indicates whether the entrance is connected.',
                type: 'boolean',
              },
            },
            required: [
              'accessibility_type',
              'door_name',
              'door_type',
              'is_connected',
            ],
            type: 'object',
          },
          salto_ks_metadata: {
            description:
              'Salto KS-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              battery_level: {
                description: 'Battery level of the door access device.',
                type: 'string',
              },
              door_name: {
                description: 'Name of the door in the Salto KS access system.',
                type: 'string',
              },
              intrusion_alarm: {
                description:
                  'Indicates whether an intrusion alarm is active on the door.',
                type: 'boolean',
              },
              left_open_alarm: {
                description: 'Indicates whether the door is left open.',
                type: 'boolean',
              },
              lock_type: {
                description: 'Type of the lock in the Salto KS access system.',
                type: 'string',
              },
              locked_state: {
                description:
                  'Locked state of the door in the Salto KS access system.',
                type: 'string',
              },
              online: {
                description:
                  'Indicates whether the door access device is online.',
                type: 'boolean',
              },
              privacy_mode: {
                description:
                  'Indicates whether privacy mode is enabled for the lock.',
                type: 'boolean',
              },
            },
            required: [
              'door_name',
              'locked_state',
              'lock_type',
              'battery_level',
            ],
            type: 'object',
          },
          salto_space_metadata: {
            description:
              'Salto Space-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              door_description: {
                description:
                  'Description of the door in the Salto Space access system.',
                type: 'string',
              },
              door_name: {
                description:
                  'Name of the door in the Salto Space access system.',
                type: 'string',
              },
              ext_door_id: {
                description:
                  'External door ID in the Salto Space access system.',
                type: 'string',
              },
            },
            required: ['door_name', 'ext_door_id'],
            type: 'object',
          },
          visionline_metadata: {
            description:
              'Visionline-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
            properties: {
              door_category: {
                description:
                  'Category of the door in the Visionline access system.',
                enum: [
                  'entrance',
                  'guest',
                  'elevator reader',
                  'common',
                  'common (PMS)',
                ],
                type: 'string',
              },
              door_name: {
                description:
                  'Name of the door in the Visionline access system.',
                type: 'string',
              },
              profiles: {
                description:
                  'Profile for the door in the Visionline access system.',
                items: {
                  properties: {
                    visionline_door_profile_id: {
                      description:
                        'Door profile ID in the Visionline access system.',
                      type: 'string',
                    },
                    visionline_door_profile_type: {
                      description:
                        'Door profile type in the Visionline access system.',
                      enum: ['BLE', 'commonDoor', 'touch'],
                      type: 'string',
                    },
                  },
                  required: [
                    'visionline_door_profile_id',
                    'visionline_door_profile_type',
                  ],
                  type: 'object',
                },
                type: 'array',
              },
            },
            required: ['door_name', 'door_category'],
            type: 'object',
          },
        },
        required: [
          'acs_system_id',
          'acs_entrance_id',
          'created_at',
          'display_name',
          'connected_account_id',
          'errors',
        ],
        type: 'object',
        'x-route-path': '/acs/entrances',
      },
      acs_system: {
        description:
          'Represents an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nWithin an `acs_system`, create [`acs_user`s](https://docs.seam.co/latest/api/acs/users#acs_user) and [`acs_credential`s](https://docs.seam.co/latest/api/acs/credentials#acs_credential) to grant access to the `acs_user`s.\n\nFor details about the resources associated with an access control system, see the [access control systems namespace](https://docs.seam.co/latest/api/acs).',
        properties: {
          acs_access_group_count: { format: 'float', type: 'number' },
          acs_system_id: {
            description:
              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            format: 'uuid',
            type: 'string',
          },
          acs_user_count: { format: 'float', type: 'number' },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            format: 'uuid',
            type: 'string',
          },
          connected_account_ids: {
            deprecated: true,
            description:
              'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
            'x-deprecated': 'Use `connected_account_id`.',
          },
          created_at: {
            description:
              'Date and time at which the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) was created.',
            format: 'date-time',
            type: 'string',
          },
          default_credential_manager_acs_system_id: {
            description:
              'ID of the default credential manager `acs_system` for this [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            format: 'uuid',
            nullable: true,
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            items: {
              description:
                'Error associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline.\n  This error might also occur if Seam Bridge is connected to the wrong [workspace](https://docs.seam.co/latest/core-concepts/workspaces).\n  See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['seam_bridge_disconnected'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline.\n    See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: { type: 'boolean' },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) is functioning correctly and the Seam API can communicate with Seam Bridge, but the Seam API cannot connect to the on-premises [Visionline access control system](https://docs.seam.co/latest/device-and-system-integration-guides/assa-abloy-visionline-access-control-system).\n  For example, the IP address of the on-premises access control system may be set incorrectly within the Seam [workspace](https://docs.seam.co/latest/core-concepts/workspaces).\n  See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.visionline_instance_unreachable).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['visionline_instance_unreachable'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the maximum number of users allowed for the site has been reached. This means that new access codes cannot be created. Contact Salto support to increase the user limit.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) has been disconnected. See [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system) to resolve the issue.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['acs_system_disconnected'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the login credentials are invalid. Reconnect the account using a [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews) to restore access.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) has lost its Salto KS certification. Contact [support](mailto:support@seam.co) to regain access.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_certification_expired'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          external_type: {
            description:
              'Brand-specific terminology for the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) type.',
            enum: [
              'pti_site',
              'alta_org',
              'salto_ks_site',
              'salto_space_system',
              'brivo_account',
              'hid_credential_manager_organization',
              'visionline_system',
              'assa_abloy_credential_service',
              'latch_building',
              'dormakaba_community_site',
              'legic_connect_credential_service',
              'assa_abloy_vostio',
              'assa_abloy_vostio_credential_service',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) type.',
            type: 'string',
          },
          image_alt_text: {
            description:
              'Alternative text for the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) image.',
            type: 'string',
          },
          image_url: {
            description:
              'URL for the image that represents the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            type: 'string',
          },
          is_credential_manager: {
            description:
              'Indicates whether the `acs_system` is a credential manager.',
            type: 'boolean',
          },
          location: {
            properties: {
              time_zone: {
                description:
                  'Time zone in which the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) is located.',
                nullable: true,
                type: 'string',
              },
            },
            required: ['time_zone'],
            type: 'object',
          },
          name: {
            description:
              'Name of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            type: 'string',
          },
          system_type: {
            deprecated: true,
            enum: [
              'pti_site',
              'alta_org',
              'salto_ks_site',
              'salto_space_system',
              'brivo_account',
              'hid_credential_manager_organization',
              'visionline_system',
              'assa_abloy_credential_service',
              'latch_building',
              'dormakaba_community_site',
              'legic_connect_credential_service',
              'assa_abloy_vostio',
              'assa_abloy_vostio_credential_service',
            ],
            type: 'string',
            'x-deprecated': 'Use `external_type`.',
          },
          system_type_display_name: {
            deprecated: true,
            type: 'string',
            'x-deprecated': 'Use `external_type_display_name`.',
          },
          visionline_metadata: {
            properties: {
              lan_address: {
                description:
                  'IP address or hostname of the main Visionline server relative to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) on the local network.',
                type: 'string',
              },
              mobile_access_uuid: {
                description:
                  'Keyset loaded into a reader. Mobile keys and reader administration tools securely authenticate only with readers programmed with a matching keyset.',
                type: 'string',
              },
              system_id: {
                description:
                  'Unique ID assigned by the ASSA ABLOY licensing team that identifies each hotel in your credential manager.',
                type: 'string',
              },
            },
            required: ['mobile_access_uuid', 'system_id', 'lan_address'],
            type: 'object',
          },
          warnings: {
            description:
              'Warnings associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            items: {
              description:
                'Warning associated with the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the Salto KS site has exceeded 80% of the maximum number of allowed users. Increase your subscription limit or delete some users from your site to rectify the issue.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_almost_reached'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) time zone could not be determined because the reported physical location does not match the time zone configured on the physical [ACS entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    misconfigured_acs_entrance_ids: {
                      deprecated: true,
                      items: { format: 'uuid', type: 'string' },
                      type: 'array',
                      'x-deprecated': 'this field is deprecated.',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['time_zone_does_not_match_location'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [access control system](https://docs.seam.co/latest/capability-guides/access-systems).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_system_id',
          'is_credential_manager',
          'location',
          'name',
          'created_at',
          'workspace_id',
          'connected_account_ids',
          'connected_account_id',
          'image_url',
          'image_alt_text',
          'errors',
          'warnings',
        ],
        type: 'object',
        'x-route-path': '/acs/systems',
      },
      acs_user: {
        description:
          'Represents a [user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in an [access system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nAn access system user typically refers to an individual who requires access, like an employee or resident. Each user can possess multiple credentials that serve as their keys or identifiers for access. The type of credential can vary widely. For example, in the Salto system, a user can have a PIN code, a mobile app account, and a fob. In other platforms, it is not uncommon for a user to have more than one of the same credential type, such as multiple key cards. Additionally, these credentials can have a schedule or validity period.\n\nFor details about how to configure users in your access system, see the corresponding [system integration guide](https://docs.seam.co/latest/device-and-system-integration-guides/overview#access-control-systems).',
        properties: {
          access_schedule: {
            description:
              "`starts_at` and `ends_at` timestamps for the [access system user's](https://docs.seam.co/latest/capability-guides/access-systems/user-management) access.",
            properties: {
              ends_at: {
                description:
                  "Date and time at which the user's access ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
                format: 'date-time',
                nullable: true,
                type: 'string',
              },
              starts_at: {
                description:
                  "Date and time at which the user's access starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
                format: 'date-time',
                type: 'string',
              },
            },
            required: ['starts_at', 'ends_at'],
            type: 'object',
          },
          acs_system_id: {
            description:
              'ID of the [access system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
          acs_user_id: {
            description:
              'ID of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              '\n      The ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) that is associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).\n    ',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            type: 'string',
          },
          email: {
            deprecated: true,
            format: 'email',
            type: 'string',
            'x-deprecated': 'use email_address.',
          },
          email_address: {
            description:
              'Email address of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'email',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            items: {
              description:
                'Errors associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was deleted from the [access system](https://docs.seam.co/latest/capability-guides/access-systems) outside of Seam.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['deleted_externally'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) could not be subscribed on Salto KS because the subscription limit has been exceeded.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not created on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_create_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not updated on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_update_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not deleted on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_delete_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created from the Seam API but also exists on Mission Control. This is unsupported. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['latch_conflict_with_resident_user'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          external_type: {
            description:
              'Brand-specific terminology for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) type.',
            enum: [
              'pti_user',
              'brivo_user',
              'hid_credential_manager_user',
              'salto_site_user',
              'latch_user',
              'dormakaba_community_user',
              'salto_space_user',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) type.',
            type: 'string',
          },
          full_name: {
            description:
              'Full name of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            minLength: 1,
            type: 'string',
          },
          hid_acs_system_id: { format: 'uuid', type: 'string' },
          is_managed: { enum: [true], type: 'boolean' },
          is_suspended: {
            description:
              'Indicates whether the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is currently [suspended](https://docs.seam.co/latest/capability-guides/access-systems/user-management/suspending-and-unsuspending-users).',
            type: 'boolean',
          },
          last_successful_sync_at: {
            description:
              'The last time an internal sync job completed for this access system user.',
            format: 'date-time',
            nullable: true,
            type: 'string',
            'x-undocumented': 'Only used internally.',
          },
          pending_mutations: {
            description:
              'Pending mutations associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management). Seam is in the process of pushing these mutations to the integrated access system.',
            items: {
              discriminator: { propertyName: 'mutation_code' },
              oneOf: [
                {
                  description:
                    'Seam is in the process of pushing a user creation to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing a user creation to the integrated access system.',
                      enum: ['creating'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'mutation_code'],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing a user deletion to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing a user deletion to the integrated access system.',
                      enum: ['deleting'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'mutation_code'],
                  type: 'object',
                },
                {
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access system user information.',
                      properties: {
                        email_address: {
                          description:
                            'Email address of the access system user.',
                          format: 'email',
                          nullable: true,
                          type: 'string',
                        },
                        full_name: {
                          description: 'Full name of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                        phone_number: {
                          description:
                            'Phone number of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated user information to the integrated access system.',
                      enum: ['updating_user_information'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access system user information.',
                      properties: {
                        email_address: {
                          description:
                            'Email address of the access system user.',
                          format: 'email',
                          nullable: true,
                          type: 'string',
                        },
                        full_name: {
                          description: 'Full name of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                        phone_number: {
                          description:
                            'Phone number of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing an access schedule update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access schedule information.',
                      properties: {
                        ends_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                        starts_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['starts_at', 'ends_at'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated access schedule information to the integrated access system.',
                      enum: ['updating_access_schedule'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access schedule information.',
                      properties: {
                        ends_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                        starts_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['starts_at', 'ends_at'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing a suspension state update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old user suspension state information.',
                      properties: { is_suspended: { type: 'boolean' } },
                      required: ['is_suspended'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated user suspension state information to the integrated access system.',
                      enum: ['updating_suspension_state'],
                      type: 'string',
                    },
                    to: {
                      description: 'New user suspension state information.',
                      properties: { is_suspended: { type: 'boolean' } },
                      required: ['is_suspended'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing an access group membership update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access group membership.',
                      properties: {
                        acs_access_group_id: {
                          description: 'Old access group ID.',
                          format: 'uuid',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['acs_access_group_id'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated access group membership information to the integrated access system.',
                      enum: ['updating_group_membership'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access group membership.',
                      properties: {
                        acs_access_group_id: {
                          description: 'New access group ID.',
                          format: 'uuid',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['acs_access_group_id'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          phone_number: {
            description:
              'Phone number of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
            type: 'string',
          },
          user_identity_email_address: {
            description:
              'Email address of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            nullable: true,
            type: 'string',
          },
          user_identity_full_name: {
            description:
              'Full name of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            nullable: true,
            type: 'string',
          },
          user_identity_id: {
            description:
              'ID of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            type: 'string',
          },
          user_identity_phone_number: {
            description:
              'Phone number of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
            nullable: true,
            type: 'string',
          },
          warnings: {
            description:
              'Warnings associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            items: {
              description:
                'Warnings associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is being deleted from the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is a temporary state, and the access system user will be deleted shortly.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: { enum: ['being_deleted'], type: 'string' },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is not subscribed on Salto KS, so they cannot unlock doors or perform any actions. This occurs when the their access schedule hasn’t started yet, if their access schedule has ended, if the site has reached its limit for active users (subscription slots), or if they have been manually unsubscribed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['salto_ks_user_not_subscribed'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'An unknown issue occurred while syncing the state of this [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) with the provider. This issue may affect the proper functioning of this user.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['unknown_issue_with_acs_user'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created on Latch Mission Control. Please use the Latch Mission Control to manage this user.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['latch_resident_user'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_user_id',
          'acs_system_id',
          'workspace_id',
          'created_at',
          'display_name',
          'warnings',
          'errors',
          'last_successful_sync_at',
          'connected_account_id',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/users',
      },
      action_attempt: {
        description:
          'Represents an action attempt that enables you to keep track of the progress of your action that affects a physical device or system.actions against a device. Action attempts are useful because the physical world is intrinsically asynchronous.\n\nWhen you request for a device to perform an action, the Seam API immediately returns an action attempt object. In the background, the Seam API performs the action.\n\nSee also [Action Attempts](https://docs.seam.co/latest/core-concepts/action-attempts).',
        oneOf: [
          {
            description: 'Locking a door is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of locking a door.',
                enum: ['LOCK_DOOR'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Locking a door succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of locking a door.',
                enum: ['LOCK_DOOR'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Locking a door failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of locking a door.',
                enum: ['LOCK_DOOR'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Unlocking a door is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of unlocking a door.',
                enum: ['UNLOCK_DOOR'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Unlocking a door succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of unlocking a door.',
                enum: ['UNLOCK_DOOR'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Unlocking a door failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of unlocking a door.',
                enum: ['UNLOCK_DOOR'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description:
              'Reading credential data from the physical encoder is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of scanning a credential.',
                enum: ['SCAN_CREDENTIAL'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description:
              'Reading credential data from physical encoder succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of scanning a credential.',
                enum: ['SCAN_CREDENTIAL'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of scanning a card. If the attempt was successful, includes a snapshot of credential data read from the physical encoder, the corresponding data stored on Seam and the access system, and any associated warnings.',
                properties: {
                  acs_credential_on_encoder: {
                    description:
                      'Snapshot of credential data read from the physical encoder.',
                    nullable: true,
                    properties: {
                      card_number: {
                        description:
                          'A number or string that physically identifies the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      created_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) will stop being usable.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      is_issued: { nullable: true, type: 'boolean' },
                      starts_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) becomes usable.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      visionline_metadata: {
                        description:
                          'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          cancelled: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is cancelled.',
                            type: 'boolean',
                          },
                          card_format: {
                            description:
                              'Format of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            enum: ['TLCode', 'rfid48'],
                            type: 'string',
                          },
                          card_holder: {
                            description:
                              'Holden of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            type: 'string',
                          },
                          card_id: {
                            description:
                              'Card ID for the Visionline card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            type: 'string',
                          },
                          common_acs_entrance_ids: {
                            description:
                              'IDs of the common [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          discarded: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is discarded.',
                            type: 'boolean',
                          },
                          expired: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is expired.',
                            type: 'boolean',
                          },
                          guest_acs_entrance_ids: {
                            description:
                              'IDs of the guest [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          number_of_issued_cards: {
                            description:
                              'Number of issued cards associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'float',
                            type: 'number',
                          },
                          overridden: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is overridden.',
                            type: 'boolean',
                          },
                          overwritten: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is overwritten.',
                            type: 'boolean',
                          },
                          pending_auto_update: {
                            description:
                              'Indicates whether the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is pending auto-update.',
                            type: 'boolean',
                          },
                        },
                        required: [
                          'card_id',
                          'cancelled',
                          'discarded',
                          'expired',
                          'overwritten',
                          'pending_auto_update',
                          'card_format',
                          'number_of_issued_cards',
                        ],
                        type: 'object',
                      },
                    },
                    required: [
                      'created_at',
                      'is_issued',
                      'starts_at',
                      'ends_at',
                      'card_number',
                    ],
                    type: 'object',
                  },
                  acs_credential_on_seam: {
                    description:
                      'Corresponding credential data as stored on Seam and the access system.',
                    nullable: true,
                    oneOf: [
                      {
                        description:
                          'Means by which an [access control system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `acs_credential` object represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nAn access control system generally uses digital means of access to authorize a user trying to get through a specific entrance. Examples of credentials include plastic key cards, mobile keys, biometric identifiers, and PIN codes. The electronic nature of these credentials, as well as the fact that access is centralized, enables both the rapid provisioning and rescinding of access and the ability to compile access audit logs.\n\nFor each `acs_credential`, you define the access method. You can also specify additional properties, such as a PIN code, depending on the credential type.',
                        properties: {
                          access_method: {
                            description:
                              'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
                            enum: ['code', 'card', 'mobile_key'],
                            type: 'string',
                          },
                          acs_credential_id: {
                            description:
                              'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_credential_pool_id: {
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_system_id: {
                            description:
                              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_user_id: {
                            description:
                              'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
                            format: 'uuid',
                            type: 'string',
                          },
                          assa_abloy_vostio_metadata: {
                            description:
                              'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            properties: {
                              auto_join: {
                                description:
                                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                                type: 'boolean',
                              },
                              door_names: {
                                description:
                                  'Names of the doors to which to grant access in the Vostio access system.',
                                items: { type: 'string' },
                                type: 'array',
                              },
                              endpoint_id: {
                                description:
                                  'Endpoint ID in the Vostio access system.',
                                type: 'string',
                              },
                              key_id: {
                                description:
                                  'Key ID in the Vostio access system.',
                                type: 'string',
                              },
                              key_issuing_request_id: {
                                description:
                                  'Key issuing request ID in the Vostio access system.',
                                type: 'string',
                              },
                              override_guest_acs_entrance_ids: {
                                description:
                                  'IDs of the guest entrances to override in the Vostio access system.',
                                items: { type: 'string' },
                                type: 'array',
                              },
                            },
                            type: 'object',
                          },
                          card_number: {
                            description:
                              'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            nullable: true,
                            type: 'string',
                          },
                          code: {
                            description:
                              'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            nullable: true,
                            type: 'string',
                          },
                          created_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                            format: 'date-time',
                            type: 'string',
                          },
                          display_name: {
                            description:
                              'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                            minLength: 1,
                            type: 'string',
                          },
                          ends_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                            type: 'string',
                          },
                          errors: {
                            description:
                              'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: {
                              properties: {
                                error_code: { type: 'string' },
                                message: { type: 'string' },
                              },
                              required: ['error_code', 'message'],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          external_type: {
                            description:
                              'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
                            enum: [
                              'pti_card',
                              'brivo_credential',
                              'hid_credential',
                              'visionline_card',
                              'salto_ks_credential',
                              'assa_abloy_vostio_key',
                              'salto_space_key',
                              'latch_access',
                            ],
                            type: 'string',
                          },
                          external_type_display_name: {
                            description:
                              'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                            type: 'string',
                          },
                          is_issued: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
                            type: 'boolean',
                          },
                          is_latest_desired_state_synced_with_provider: {
                            description:
                              'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
                            nullable: true,
                            type: 'boolean',
                          },
                          is_managed: { enum: [true], type: 'boolean' },
                          is_multi_phone_sync_credential: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                            type: 'boolean',
                          },
                          is_one_time_use: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
                            type: 'boolean',
                          },
                          issued_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
                            format: 'date-time',
                            nullable: true,
                            type: 'string',
                          },
                          latest_desired_state_synced_with_provider_at: {
                            description:
                              'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
                            format: 'date-time',
                            nullable: true,
                            type: 'string',
                          },
                          parent_acs_credential_id: {
                            description:
                              'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          starts_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                            type: 'string',
                          },
                          visionline_metadata: {
                            description:
                              'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            properties: {
                              auto_join: {
                                description:
                                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                                type: 'boolean',
                              },
                              card_function_type: {
                                description:
                                  'Card function type in the Visionline access system.',
                                enum: ['guest', 'staff'],
                                type: 'string',
                              },
                              card_id: {
                                description:
                                  'ID of the card in the Visionline access system.',
                                type: 'string',
                              },
                              common_acs_entrance_ids: {
                                description:
                                  'Common entrance IDs in the Visionline access system.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                              credential_id: {
                                description:
                                  'ID of the credential in the Visionline access system.',
                                type: 'string',
                              },
                              guest_acs_entrance_ids: {
                                description:
                                  'Guest entrance IDs in the Visionline access system.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                              is_valid: {
                                description:
                                  'Indicates whether the credential is valid.',
                                type: 'boolean',
                              },
                              joiner_acs_credential_ids: {
                                description:
                                  'IDs of the credentials to which you want to join.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                            },
                            required: ['card_function_type'],
                            type: 'object',
                          },
                          warnings: {
                            description:
                              'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: {
                              description:
                                'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                              discriminator: { propertyName: 'warning_code' },
                              oneOf: [
                                {
                                  description:
                                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['waiting_to_be_issued'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['schedule_externally_modified'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['schedule_modified'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['being_deleted'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: [
                                        'unknown_issue_with_acs_credential',
                                      ],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['needs_to_be_reissued'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                              ],
                            },
                            type: 'array',
                          },
                          workspace_id: {
                            description:
                              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: [
                          'acs_credential_id',
                          'acs_system_id',
                          'display_name',
                          'access_method',
                          'created_at',
                          'workspace_id',
                          'errors',
                          'warnings',
                          'is_managed',
                        ],
                        type: 'object',
                        'x-route-path': '/acs/credentials',
                      },
                      {
                        description:
                          'Means by which an [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `unmanaged_acs_credential` object, which is not managed by Seam, represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems). For each `acs_credential` object, you define the access method. You can also specify additional properties, such as a PIN code.',
                        properties: {
                          access_method: {
                            description:
                              'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
                            enum: ['code', 'card', 'mobile_key'],
                            type: 'string',
                          },
                          acs_credential_id: {
                            description:
                              'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_credential_pool_id: {
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_system_id: {
                            description:
                              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_user_id: {
                            description:
                              'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
                            format: 'uuid',
                            type: 'string',
                          },
                          assa_abloy_vostio_metadata: {
                            description:
                              'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            properties: {
                              auto_join: {
                                description:
                                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                                type: 'boolean',
                              },
                              door_names: {
                                description:
                                  'Names of the doors to which to grant access in the Vostio access system.',
                                items: { type: 'string' },
                                type: 'array',
                              },
                              endpoint_id: {
                                description:
                                  'Endpoint ID in the Vostio access system.',
                                type: 'string',
                              },
                              key_id: {
                                description:
                                  'Key ID in the Vostio access system.',
                                type: 'string',
                              },
                              key_issuing_request_id: {
                                description:
                                  'Key issuing request ID in the Vostio access system.',
                                type: 'string',
                              },
                              override_guest_acs_entrance_ids: {
                                description:
                                  'IDs of the guest entrances to override in the Vostio access system.',
                                items: { type: 'string' },
                                type: 'array',
                              },
                            },
                            type: 'object',
                          },
                          card_number: {
                            description:
                              'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            nullable: true,
                            type: 'string',
                          },
                          code: {
                            description:
                              'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            nullable: true,
                            type: 'string',
                          },
                          created_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                            format: 'date-time',
                            type: 'string',
                          },
                          display_name: {
                            description:
                              'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                            minLength: 1,
                            type: 'string',
                          },
                          ends_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                            type: 'string',
                          },
                          errors: {
                            description:
                              'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: {
                              properties: {
                                error_code: { type: 'string' },
                                message: { type: 'string' },
                              },
                              required: ['error_code', 'message'],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          external_type: {
                            description:
                              'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
                            enum: [
                              'pti_card',
                              'brivo_credential',
                              'hid_credential',
                              'visionline_card',
                              'salto_ks_credential',
                              'assa_abloy_vostio_key',
                              'salto_space_key',
                              'latch_access',
                            ],
                            type: 'string',
                          },
                          external_type_display_name: {
                            description:
                              'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                            type: 'string',
                          },
                          is_issued: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
                            type: 'boolean',
                          },
                          is_latest_desired_state_synced_with_provider: {
                            description:
                              'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
                            nullable: true,
                            type: 'boolean',
                          },
                          is_managed: { enum: [false], type: 'boolean' },
                          is_multi_phone_sync_credential: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                            type: 'boolean',
                          },
                          is_one_time_use: {
                            description:
                              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
                            type: 'boolean',
                          },
                          issued_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
                            format: 'date-time',
                            nullable: true,
                            type: 'string',
                          },
                          latest_desired_state_synced_with_provider_at: {
                            description:
                              'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
                            format: 'date-time',
                            nullable: true,
                            type: 'string',
                          },
                          parent_acs_credential_id: {
                            description:
                              'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                          starts_at: {
                            description:
                              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                            type: 'string',
                          },
                          visionline_metadata: {
                            description:
                              'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            properties: {
                              auto_join: {
                                description:
                                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                                type: 'boolean',
                              },
                              card_function_type: {
                                description:
                                  'Card function type in the Visionline access system.',
                                enum: ['guest', 'staff'],
                                type: 'string',
                              },
                              card_id: {
                                description:
                                  'ID of the card in the Visionline access system.',
                                type: 'string',
                              },
                              common_acs_entrance_ids: {
                                description:
                                  'Common entrance IDs in the Visionline access system.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                              credential_id: {
                                description:
                                  'ID of the credential in the Visionline access system.',
                                type: 'string',
                              },
                              guest_acs_entrance_ids: {
                                description:
                                  'Guest entrance IDs in the Visionline access system.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                              is_valid: {
                                description:
                                  'Indicates whether the credential is valid.',
                                type: 'boolean',
                              },
                              joiner_acs_credential_ids: {
                                description:
                                  'IDs of the credentials to which you want to join.',
                                items: { format: 'uuid', type: 'string' },
                                type: 'array',
                              },
                            },
                            required: ['card_function_type'],
                            type: 'object',
                          },
                          warnings: {
                            description:
                              'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            items: {
                              description:
                                'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                              discriminator: { propertyName: 'warning_code' },
                              oneOf: [
                                {
                                  description:
                                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['waiting_to_be_issued'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['schedule_externally_modified'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['schedule_modified'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['being_deleted'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: [
                                        'unknown_issue_with_acs_credential',
                                      ],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                                {
                                  description:
                                    'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                                  properties: {
                                    created_at: {
                                      description:
                                        'Date and time at which Seam created the warning.',
                                      format: 'date-time',
                                      type: 'string',
                                    },
                                    message: {
                                      description:
                                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                      type: 'string',
                                    },
                                    warning_code: {
                                      description:
                                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                      enum: ['needs_to_be_reissued'],
                                      type: 'string',
                                    },
                                  },
                                  required: [
                                    'created_at',
                                    'message',
                                    'warning_code',
                                  ],
                                  type: 'object',
                                },
                              ],
                            },
                            type: 'array',
                          },
                          workspace_id: {
                            description:
                              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: [
                          'acs_credential_id',
                          'acs_system_id',
                          'display_name',
                          'access_method',
                          'created_at',
                          'workspace_id',
                          'errors',
                          'warnings',
                          'is_managed',
                        ],
                        type: 'object',
                        'x-route-path': '/acs/credentials/unmanaged',
                        'x-undocumented': 'Unreleased.',
                      },
                    ],
                    'x-route-path': '/acs/credentials',
                  },
                  warnings: {
                    description:
                      'Warnings related to scanning the credential, such as mismatches between the credential data currently encoded on the card and the corresponding data stored on Seam and the access system.',
                    items: {
                      description: 'Warning related to scanning a credential.',
                      properties: {
                        warning_code: {
                          description:
                            'Indicates a warning related to scanning a credential.',
                          enum: [
                            'acs_credential_on_encoder_out_of_sync',
                            'acs_credential_on_seam_not_found',
                          ],
                          type: 'string',
                        },
                        warning_message: {
                          description:
                            'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                          type: 'string',
                        },
                      },
                      required: ['warning_code', 'warning_message'],
                      type: 'object',
                    },
                    type: 'array',
                  },
                },
                required: [
                  'acs_credential_on_encoder',
                  'acs_credential_on_seam',
                  'warnings',
                ],
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description:
              'Reading credential data from physical encoder failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of scanning a credential.',
                enum: ['SCAN_CREDENTIAL'],
                type: 'string',
              },
              error: {
                oneOf: [
                  {
                    description:
                      "Error that doesn't fit into other specific error categories.",
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['uncategorized_error'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description: 'Error to indicate an expired action attempt.',
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['action_attempt_expired'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate that there is no credential on the encoder.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate that there is no credential on the encoder.',
                        enum: ['no_credential_on_encoder'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                ],
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding access method data from the physical encoder onto a card is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding an access method from the physical encoder onto a card.',
                enum: ['ENCODE_ACCESS_METHOD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding access method data from the physical encoder onto a card succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding an access method from the physical encoder onto a card.',
                enum: ['ENCODE_ACCESS_METHOD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of an encoding attempt. If the attempt was successful, includes the access method data that was encoded onto the card.',
                properties: {
                  access_method_id: {
                    description: 'ID of the access method.',
                    format: 'uuid',
                    type: 'string',
                  },
                  created_at: {
                    description:
                      'Date and time at which the access method was created.',
                    format: 'date-time',
                    type: 'string',
                  },
                  display_name: {
                    description: 'Display name of the access method.',
                    type: 'string',
                  },
                  instant_key_url: {
                    description:
                      'URL of the Instant Key for mobile key access methods.',
                    type: 'string',
                  },
                  is_card_encoding_required: {
                    description:
                      'Indicates whether card encoding is required for plastic card access methods.',
                    type: 'boolean',
                  },
                  issued_at: {
                    description:
                      'Date and time at which the access method was issued.',
                    format: 'date-time',
                    type: 'string',
                  },
                  mode: {
                    description:
                      'Access method mode. Supported values: `code`, `card`, `mobile_key`.',
                    enum: ['code', 'card', 'mobile_key'],
                    type: 'string',
                  },
                  workspace_id: {
                    description:
                      'ID of the Seam workspace associated with the access method.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: [
                  'workspace_id',
                  'access_method_id',
                  'display_name',
                  'mode',
                  'created_at',
                ],
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding access method data from the physical encoder onto a card failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding an access method from the physical encoder onto a card.',
                enum: ['ENCODE_ACCESS_METHOD'],
                type: 'string',
              },
              error: {
                oneOf: [
                  {
                    description:
                      "Error that doesn't fit into other specific error categories.",
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['uncategorized_error'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description: 'Error to indicate an expired action attempt.',
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['action_attempt_expired'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate that there is no credential on the encoder.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate that there is no credential on the encoder.',
                        enum: ['no_credential_on_encoder'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate an incompatible card format.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate an incompatible card format.',
                        enum: ['incompatible_card_format'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate that the affected credential cannot be reissued.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate that the affected credential cannot be reissued.',
                        enum: ['credential_cannot_be_reissued'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                ],
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding credential data from the physical encoder onto a card is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding credential data from the physical encoder onto a card.',
                enum: ['ENCODE_CREDENTIAL'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding credential data from the physical encoder onto a card succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding credential data from the physical encoder onto a card.',
                enum: ['ENCODE_CREDENTIAL'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of an encoding attempt. If the attempt was successful, includes the credential data that was encoded onto the card.',
                oneOf: [
                  {
                    description:
                      'Means by which an [access control system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `acs_credential` object represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nAn access control system generally uses digital means of access to authorize a user trying to get through a specific entrance. Examples of credentials include plastic key cards, mobile keys, biometric identifiers, and PIN codes. The electronic nature of these credentials, as well as the fact that access is centralized, enables both the rapid provisioning and rescinding of access and the ability to compile access audit logs.\n\nFor each `acs_credential`, you define the access method. You can also specify additional properties, such as a PIN code, depending on the credential type.',
                    properties: {
                      access_method: {
                        description:
                          'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
                        enum: ['code', 'card', 'mobile_key'],
                        type: 'string',
                      },
                      acs_credential_id: {
                        description:
                          'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_credential_pool_id: {
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_system_id: {
                        description:
                          'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_user_id: {
                        description:
                          'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
                        format: 'uuid',
                        type: 'string',
                      },
                      assa_abloy_vostio_metadata: {
                        description:
                          'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          door_names: {
                            description:
                              'Names of the doors to which to grant access in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                          endpoint_id: {
                            description:
                              'Endpoint ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_id: {
                            description: 'Key ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_issuing_request_id: {
                            description:
                              'Key issuing request ID in the Vostio access system.',
                            type: 'string',
                          },
                          override_guest_acs_entrance_ids: {
                            description:
                              'IDs of the guest entrances to override in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                        },
                        type: 'object',
                      },
                      card_number: {
                        description:
                          'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      code: {
                        description:
                          'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      created_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                        format: 'date-time',
                        type: 'string',
                      },
                      display_name: {
                        description:
                          'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        minLength: 1,
                        type: 'string',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                        type: 'string',
                      },
                      errors: {
                        description:
                          'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          properties: {
                            error_code: { type: 'string' },
                            message: { type: 'string' },
                          },
                          required: ['error_code', 'message'],
                          type: 'object',
                        },
                        type: 'array',
                      },
                      external_type: {
                        description:
                          'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
                        enum: [
                          'pti_card',
                          'brivo_credential',
                          'hid_credential',
                          'visionline_card',
                          'salto_ks_credential',
                          'assa_abloy_vostio_key',
                          'salto_space_key',
                          'latch_access',
                        ],
                        type: 'string',
                      },
                      external_type_display_name: {
                        description:
                          'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        type: 'string',
                      },
                      is_issued: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
                        type: 'boolean',
                      },
                      is_latest_desired_state_synced_with_provider: {
                        description:
                          'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
                        nullable: true,
                        type: 'boolean',
                      },
                      is_managed: { enum: [true], type: 'boolean' },
                      is_multi_phone_sync_credential: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                        type: 'boolean',
                      },
                      is_one_time_use: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
                        type: 'boolean',
                      },
                      issued_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      latest_desired_state_synced_with_provider_at: {
                        description:
                          'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      parent_acs_credential_id: {
                        description:
                          'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                        type: 'string',
                      },
                      visionline_metadata: {
                        description:
                          'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          card_function_type: {
                            description:
                              'Card function type in the Visionline access system.',
                            enum: ['guest', 'staff'],
                            type: 'string',
                          },
                          card_id: {
                            description:
                              'ID of the card in the Visionline access system.',
                            type: 'string',
                          },
                          common_acs_entrance_ids: {
                            description:
                              'Common entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          credential_id: {
                            description:
                              'ID of the credential in the Visionline access system.',
                            type: 'string',
                          },
                          guest_acs_entrance_ids: {
                            description:
                              'Guest entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          is_valid: {
                            description:
                              'Indicates whether the credential is valid.',
                            type: 'boolean',
                          },
                          joiner_acs_credential_ids: {
                            description:
                              'IDs of the credentials to which you want to join.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                        },
                        required: ['card_function_type'],
                        type: 'object',
                      },
                      warnings: {
                        description:
                          'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          description:
                            'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                          discriminator: { propertyName: 'warning_code' },
                          oneOf: [
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['waiting_to_be_issued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_externally_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['being_deleted'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['unknown_issue_with_acs_credential'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['needs_to_be_reissued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                          ],
                        },
                        type: 'array',
                      },
                      workspace_id: {
                        description:
                          'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: [
                      'acs_credential_id',
                      'acs_system_id',
                      'display_name',
                      'access_method',
                      'created_at',
                      'workspace_id',
                      'errors',
                      'warnings',
                      'is_managed',
                    ],
                    type: 'object',
                    'x-route-path': '/acs/credentials',
                  },
                  {
                    description:
                      'Means by which an [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `unmanaged_acs_credential` object, which is not managed by Seam, represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems). For each `acs_credential` object, you define the access method. You can also specify additional properties, such as a PIN code.',
                    properties: {
                      access_method: {
                        description:
                          'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
                        enum: ['code', 'card', 'mobile_key'],
                        type: 'string',
                      },
                      acs_credential_id: {
                        description:
                          'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_credential_pool_id: {
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_system_id: {
                        description:
                          'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_user_id: {
                        description:
                          'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
                        format: 'uuid',
                        type: 'string',
                      },
                      assa_abloy_vostio_metadata: {
                        description:
                          'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          door_names: {
                            description:
                              'Names of the doors to which to grant access in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                          endpoint_id: {
                            description:
                              'Endpoint ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_id: {
                            description: 'Key ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_issuing_request_id: {
                            description:
                              'Key issuing request ID in the Vostio access system.',
                            type: 'string',
                          },
                          override_guest_acs_entrance_ids: {
                            description:
                              'IDs of the guest entrances to override in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                        },
                        type: 'object',
                      },
                      card_number: {
                        description:
                          'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      code: {
                        description:
                          'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      created_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                        format: 'date-time',
                        type: 'string',
                      },
                      display_name: {
                        description:
                          'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        minLength: 1,
                        type: 'string',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                        type: 'string',
                      },
                      errors: {
                        description:
                          'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          properties: {
                            error_code: { type: 'string' },
                            message: { type: 'string' },
                          },
                          required: ['error_code', 'message'],
                          type: 'object',
                        },
                        type: 'array',
                      },
                      external_type: {
                        description:
                          'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
                        enum: [
                          'pti_card',
                          'brivo_credential',
                          'hid_credential',
                          'visionline_card',
                          'salto_ks_credential',
                          'assa_abloy_vostio_key',
                          'salto_space_key',
                          'latch_access',
                        ],
                        type: 'string',
                      },
                      external_type_display_name: {
                        description:
                          'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        type: 'string',
                      },
                      is_issued: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
                        type: 'boolean',
                      },
                      is_latest_desired_state_synced_with_provider: {
                        description:
                          'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
                        nullable: true,
                        type: 'boolean',
                      },
                      is_managed: { enum: [false], type: 'boolean' },
                      is_multi_phone_sync_credential: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                        type: 'boolean',
                      },
                      is_one_time_use: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
                        type: 'boolean',
                      },
                      issued_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      latest_desired_state_synced_with_provider_at: {
                        description:
                          'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      parent_acs_credential_id: {
                        description:
                          'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                        type: 'string',
                      },
                      visionline_metadata: {
                        description:
                          'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          card_function_type: {
                            description:
                              'Card function type in the Visionline access system.',
                            enum: ['guest', 'staff'],
                            type: 'string',
                          },
                          card_id: {
                            description:
                              'ID of the card in the Visionline access system.',
                            type: 'string',
                          },
                          common_acs_entrance_ids: {
                            description:
                              'Common entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          credential_id: {
                            description:
                              'ID of the credential in the Visionline access system.',
                            type: 'string',
                          },
                          guest_acs_entrance_ids: {
                            description:
                              'Guest entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          is_valid: {
                            description:
                              'Indicates whether the credential is valid.',
                            type: 'boolean',
                          },
                          joiner_acs_credential_ids: {
                            description:
                              'IDs of the credentials to which you want to join.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                        },
                        required: ['card_function_type'],
                        type: 'object',
                      },
                      warnings: {
                        description:
                          'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          description:
                            'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                          discriminator: { propertyName: 'warning_code' },
                          oneOf: [
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['waiting_to_be_issued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_externally_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['being_deleted'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['unknown_issue_with_acs_credential'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['needs_to_be_reissued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                          ],
                        },
                        type: 'array',
                      },
                      workspace_id: {
                        description:
                          'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: [
                      'acs_credential_id',
                      'acs_system_id',
                      'display_name',
                      'access_method',
                      'created_at',
                      'workspace_id',
                      'errors',
                      'warnings',
                      'is_managed',
                    ],
                    type: 'object',
                    'x-route-path': '/acs/credentials/unmanaged',
                    'x-undocumented': 'Unreleased.',
                  },
                ],
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description:
              'Encoding credential data from the physical encoder onto a card failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of encoding credential data from the physical encoder onto a card.',
                enum: ['ENCODE_CREDENTIAL'],
                type: 'string',
              },
              error: {
                oneOf: [
                  {
                    description:
                      "Error that doesn't fit into other specific error categories.",
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['uncategorized_error'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description: 'Error to indicate an expired action attempt.',
                    properties: {
                      message: {
                        description:
                          'Message for the error associated with the action attempt.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Type of the error associated with the action attempt.',
                        enum: ['action_attempt_expired'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate that there is no credential on the encoder.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate that there is no credential on the encoder.',
                        enum: ['no_credential_on_encoder'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate an incompatible card format.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate an incompatible card format.',
                        enum: ['incompatible_card_format'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                  {
                    description:
                      'Error to indicate that the affected credential cannot be reissued.',
                    properties: {
                      message: {
                        description:
                          'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                        type: 'string',
                      },
                      type: {
                        description:
                          'Error type to indicate that the affected credential cannot be reissued.',
                        enum: ['credential_cannot_be_reissued'],
                        type: 'string',
                      },
                    },
                    required: ['type', 'message'],
                    type: 'object',
                  },
                ],
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Resetting a sandbox workspace is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of resetting a sandbox workspace.',
                enum: ['RESET_SANDBOX_WORKSPACE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Resetting a sandbox workspace succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of resetting a sandbox workspace.',
                enum: ['RESET_SANDBOX_WORKSPACE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Resetting a sandbox workspace failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of resetting a sandbox workspace.',
                enum: ['RESET_SANDBOX_WORKSPACE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Setting the fan mode is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the fan mode on a thermostat.',
                enum: ['SET_FAN_MODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Setting the fan mode succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the fan mode on a thermostat.',
                enum: ['SET_FAN_MODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Setting the fan mode failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the fan mode on a thermostat.',
                enum: ['SET_FAN_MODE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Setting the HVAC mode is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the HVAC mode on a thermostat.',
                enum: ['SET_HVAC_MODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Setting the HVAC mode succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the HVAC mode on a thermostat.',
                enum: ['SET_HVAC_MODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Setting the HVAC mode failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of setting the HVAC mode on a thermostat.',
                enum: ['SET_HVAC_MODE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Activating a climate preset is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of a climate preset activation.',
                enum: ['ACTIVATE_CLIMATE_PRESET'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Activating a climate preset succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of a climate preset activation.',
                enum: ['ACTIVATE_CLIMATE_PRESET'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Activating a climate preset failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of a climate preset activation.',
                enum: ['ACTIVATE_CLIMATE_PRESET'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Simulating a keypad code entry is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a keypad code entry.',
                enum: ['SIMULATE_KEYPAD_CODE_ENTRY'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Simulating a keypad code entry succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a keypad code entry.',
                enum: ['SIMULATE_KEYPAD_CODE_ENTRY'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Simulating a keypad code entry failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a keypad code entry.',
                enum: ['SIMULATE_KEYPAD_CODE_ENTRY'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description:
              'Simulating a manual lock action using a keypad is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a manual lock action using a keypad.',
                enum: ['SIMULATE_MANUAL_LOCK_VIA_KEYPAD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description:
              'Simulating a manual lock action using a keypad succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a manual lock action using a keypad.',
                enum: ['SIMULATE_MANUAL_LOCK_VIA_KEYPAD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description:
              'Simulating a manual lock action using a keypad failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of simulating a manual lock action using a keypad.',
                enum: ['SIMULATE_MANUAL_LOCK_VIA_KEYPAD'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            description: 'Pushing thermostat weekly programs is pending.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of pushing thermostat programs.',
                enum: ['PUSH_THERMOSTAT_PROGRAMS'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            description: 'Pushing thermostat weekly programs succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of pushing thermostat programs.',
                enum: ['PUSH_THERMOSTAT_PROGRAMS'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            description: 'Pushing thermostat weekly programs failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description:
                  'Action attempt to track the status of pushing thermostat programs.',
                enum: ['PUSH_THERMOSTAT_PROGRAMS'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Syncing access codes is pending.',
                enum: ['SYNC_ACCESS_CODES'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Syncing access codes succeeded.',
                enum: ['SYNC_ACCESS_CODES'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Syncing access codes failed.',
                enum: ['SYNC_ACCESS_CODES'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating an access code is pending.',
                enum: ['CREATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating an access code succeeded.',
                enum: ['CREATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {
                  access_code: { description: 'Created access code.' },
                },
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating an access code failed.',
                enum: ['CREATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting an access code is pending.',
                enum: ['DELETE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting an access code succeeded.',
                enum: ['DELETE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting an access code failed.',
                enum: ['DELETE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating an access code is pending.',
                enum: ['UPDATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating an access code succeeded.',
                enum: ['UPDATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {
                  access_code: { description: 'Updated access code.' },
                },
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating an access code failed.',
                enum: ['UPDATE_ACCESS_CODE'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating a noise threshold is pending.',
                enum: ['CREATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating a noise threshold succeeded.',
                enum: ['CREATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {
                  noise_threshold: { description: 'Created noise threshold.' },
                },
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Creating a noise threshold failed.',
                enum: ['CREATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting a noise threshold is pending.',
                enum: ['DELETE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting a noise threshold succeeded.',
                enum: ['DELETE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {},
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Deleting a noise threshold failed.',
                enum: ['DELETE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating a noise threshold is pending.',
                enum: ['UPDATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              result: {
                description:
                  'Result of the action attempt. Null for pending action attempts.',
                nullable: true,
              },
              status: { enum: ['pending'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'error',
              'action_type',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating a noise threshold succeeded.',
                enum: ['UPDATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description:
                  'Errors associated with the action attempt. Null for successful action attempts.',
                nullable: true,
              },
              result: {
                description: 'Result of the action.',
                properties: {
                  noise_threshold: { description: 'Updated noise threshold.' },
                },
                type: 'object',
              },
              status: { enum: ['success'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'error',
              'action_type',
              'result',
            ],
            type: 'object',
          },
          {
            properties: {
              action_attempt_id: {
                description: 'ID of the action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Updating a noise threshold failed.',
                enum: ['UPDATE_NOISE_THRESHOLD'],
                type: 'string',
              },
              error: {
                description: 'Error associated with the action.',
                properties: {
                  message: {
                    description:
                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                    type: 'string',
                  },
                  type: { description: 'Type of the error.', type: 'string' },
                },
                required: ['type', 'message'],
                type: 'object',
              },
              result: {
                description:
                  'Result of the action attempt. Null for failed action attempts.',
                nullable: true,
              },
              status: { enum: ['error'], type: 'string' },
            },
            required: [
              'action_attempt_id',
              'status',
              'result',
              'action_type',
              'error',
            ],
            type: 'object',
          },
        ],
        'x-route-path': '/action_attempts',
      },
      bridge_client_session: {
        description:
          'Represents a [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session.',
        properties: {
          bridge_client_machine_identifier_key: {
            description:
              'Identifier key of the client machine for the Seam Bridge client.',
            type: 'string',
          },
          bridge_client_name: {
            description: 'Name of the Seam Bridge client.',
            type: 'string',
          },
          bridge_client_session_id: {
            description: 'ID of the Seam Bridge client session.',
            format: 'uuid',
            type: 'string',
          },
          bridge_client_session_token: {
            description:
              'Client session token associated with the Seam Bridge client session.',
            type: 'string',
          },
          bridge_client_time_zone: {
            description: 'Time zone for the Seam Bridge client.',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the Seam Bridge client session was created.',
            format: 'date-time',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the Seam Bridge client session.',
            items: {
              description:
                'Indicates an error associated with the Seam Bridge client session.',
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description:
                    "Indicates that Seam cannot reach Seam Bridge's LAN.",
                  properties: {
                    can_tailscale_proxy_reach_bridge: {
                      description:
                        'Indicates whether the Tailscale proxy can reach Seam Bridge.',
                      nullable: true,
                      type: 'boolean',
                    },
                    can_tailscale_proxy_reach_tailscale_network: {
                      description:
                        'Indicates whether the Tailscale proxy can reach the Tailscale network.',
                      nullable: true,
                      type: 'boolean',
                    },
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_lan_unreachable'],
                      type: 'string',
                    },
                    is_bridge_socks_server_healthy: {
                      description:
                        "Indicates whether Seam Bridge's SOCKS server is healthy.",
                      nullable: true,
                      type: 'boolean',
                    },
                    is_tailscale_proxy_reachable: {
                      description:
                        'Indicates whether Seam can reach the Tailscale proxy.',
                      nullable: true,
                      type: 'boolean',
                    },
                    is_tailscale_proxy_socks_server_healthy: {
                      description:
                        "Indicates whether the Tailscale proxy's SOCKS server is healthy.",
                      nullable: true,
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'created_at',
                    'error_code',
                    'is_tailscale_proxy_reachable',
                    'is_tailscale_proxy_socks_server_healthy',
                    'can_tailscale_proxy_reach_tailscale_network',
                    'can_tailscale_proxy_reach_bridge',
                    'is_bridge_socks_server_healthy',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that Seam Bridge has stopped communicating with Seam.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['no_communication_from_bridge'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          pairing_code: {
            description:
              'Pairing code for Seam Bridge. Use this code to pair Seam Bridge with your workspace.',
            maxLength: 6,
            minLength: 6,
            type: 'string',
          },
          pairing_code_expires_at: {
            description: 'Date and time at which the pairing code expires.',
            format: 'date-time',
            type: 'string',
          },
          tailscale_auth_key: {
            description: 'Tailscale authorization key for Seam Bridge.',
            nullable: true,
            type: 'string',
          },
          tailscale_hostname: {
            description: 'Tailscale hostname for Seam Bridge.',
            type: 'string',
          },
          telemetry_token: {
            description: 'Telemetry token for the Seam Bridge client session.',
            nullable: true,
            type: 'string',
          },
          telemetry_token_expires_at: {
            description:
              'Date and time at which the telemetry token for the Seam Bridge client session expires.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          telemetry_url: {
            description: 'Telemetry URL for the Seam Bridge client session.',
            nullable: true,
            type: 'string',
          },
        },
        required: [
          'created_at',
          'bridge_client_session_id',
          'bridge_client_session_token',
          'pairing_code',
          'pairing_code_expires_at',
          'tailscale_hostname',
          'tailscale_auth_key',
          'bridge_client_name',
          'bridge_client_time_zone',
          'bridge_client_machine_identifier_key',
          'errors',
          'telemetry_token',
          'telemetry_token_expires_at',
          'telemetry_url',
        ],
        type: 'object',
        'x-route-path': '/seam/bridge/v1/bridge_client_sessions',
        'x-undocumented': 'Seam Bridge client only.',
      },
      bridge_connected_systems: {
        description:
          'Represents an access system connected to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
        properties: {
          acs_system_display_name: {
            description:
              'Display name for the [access system](https://docs.seam.co/latest/capability-guides/access-systems) associated with Seam Bridge.',
            type: 'string',
          },
          acs_system_id: {
            description:
              'ID of the [access system](https://docs.seam.co/latest/capability-guides/access-systems) associated with Seam Bridge.',
            format: 'uuid',
            type: 'string',
          },
          bridge_created_at: {
            description: 'Date and time at which Seam Bridge was created.',
            format: 'date-time',
            type: 'string',
          },
          bridge_id: {
            description: 'ID of Seam Bridge connected to the access system.',
            format: 'uuid',
            type: 'string',
          },
          connected_account_created_at: {
            description:
              'Date and time at which the connected account associated with Seam Bridge was created.',
            format: 'date-time',
            type: 'string',
          },
          connected_account_id: {
            description:
              'ID of the connected account associated with Seam Bridge.',
            format: 'uuid',
            type: 'string',
          },
          workspace_display_name: {
            description:
              'Display name for the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) with which Seam Bridge is paired.',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) with which Seam Bridge is paired.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'bridge_id',
          'bridge_created_at',
          'connected_account_id',
          'connected_account_created_at',
          'acs_system_id',
          'acs_system_display_name',
          'workspace_id',
          'workspace_display_name',
        ],
        type: 'object',
        'x-route-path': '/seam/bridge/v1/bridge_connected_systems',
        'x-undocumented': 'Seam Bridge client only.',
      },
      client_session: {
        description:
          "Represents a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens). If you want to restrict your users' access to their own devices, use client sessions.\n\nYou create each client session with a custom `user_identifier_key`. Normally, the `user_identifier_key` is a user ID that your application provides.\n\nWhen calling the Seam API from your backend using an API key, you can pass the `user_identifier_key` as a parameter to limit results to the associated client session. For example, `/devices/list?user_identifier_key=123` only returns devices associated with the client session created with the `user_identifier_key` `123`.\n\nA client session has a token that you can use with the Seam JavaScript SDK to make requests from the client (browser) directly to the Seam API. The token restricts the user's access to only the devices that they own.\n\nSee also [Get Started with React](https://docs.seam.co/latest/ui-components/overview/getting-started-with-seam-components/get-started-with-react-components-and-client-session-tokens).",
        properties: {
          client_session_id: {
            description:
              'ID of the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            format: 'uuid',
            type: 'string',
          },
          connect_webview_ids: {
            description:
              'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
          },
          connected_account_ids: {
            description:
              'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
          },
          created_at: {
            description:
              'Date and time at which the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) was created.',
            format: 'date-time',
            type: 'string',
          },
          customer_id: {
            description:
              'Customer ID associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            format: 'uuid',
            type: 'string',
          },
          device_count: {
            description:
              'Number of devices associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            format: 'float',
            type: 'number',
          },
          expires_at: {
            description:
              'Date and time at which the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) expires.',
            format: 'date-time',
            type: 'string',
          },
          token: {
            description:
              'Client session token associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            type: 'string',
          },
          user_identifier_key: {
            description:
              'Your user ID for the user associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            nullable: true,
            type: 'string',
          },
          user_identity_id: {
            description:
              'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) associated with the client session.',
            format: 'uuid',
            type: 'string',
          },
          user_identity_ids: {
            deprecated: true,
            description:
              'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) associated with the client session.',
            items: { format: 'uuid', type: 'string' },
            type: 'array',
            'x-deprecated': 'Use `user_identity_id` instead.',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'client_session_id',
          'workspace_id',
          'created_at',
          'expires_at',
          'token',
          'user_identifier_key',
          'device_count',
          'connected_account_ids',
          'connect_webview_ids',
          'user_identity_ids',
        ],
        type: 'object',
        'x-route-path': '/client_sessions',
      },
      connect_webview: {
        description:
          'Represents a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews).\n\nConnect Webviews are fully-embedded client-side components that you add to your app. Your users interact with your embedded Connect Webviews to link their IoT device or system accounts to Seam. That is, Connect Webviews walk your users through the process of logging in to their device or system accounts. Seam handles all the authentication steps, and—once your user has completed the authorization through your app—you can access and control their devices or systems using the Seam API.\n\nConnect Webviews perform credential validation, multifactor authentication (when applicable), and error handling for each brand that Seam supports. Further, Connect Webviews work across all modern browsers and platforms, including Chrome, Safari, and Firefox.\n\nTo enable a user to connect their device or system account to Seam through your app, first create a `connect_webview`. Once created, this `connect_webview` includes a URL that you can use to open an [iframe](https://www.w3schools.com/html/html_iframe.asp) or new window containing the Connect Webview for your user.\n\nWhen you create a Connect Webview, specify the desired provider category key in the `provider_category` parameter. Alternately, to specify a list of providers explicitly, use the `accepted_providers` parameter with a list of device provider keys.\n\nTo list all providers within a category, use `/devices/list_device_providers` with the desired `provider_category` filter. To list all provider keys, use `/devices/list_device_providers` with no filters.',
        properties: {
          accepted_capabilities: {
            description:
              'High-level device capabilities that the Connect Webview can accept. When creating a Connect Webview, you can specify the types of devices that it can connect to Seam. If you do not set custom `accepted_capabilities`, Seam uses a default set of `accepted_capabilities` for each provider. For example, if you create a Connect Webview that accepts SmartThing devices, without specifying `accepted_capabilities`, Seam accepts only SmartThings locks. To connect SmartThings thermostats and locks to Seam, create a Connect Webview and include both `thermostat` and `lock` in the `accepted_capabilities`.',
            items: {
              description:
                'High-level device capabilities that the Connect Webview can accept.',
              enum: ['lock', 'thermostat', 'noise_sensor', 'access_control'],
              type: 'string',
            },
            type: 'array',
          },
          accepted_devices: {
            deprecated: true,
            items: { type: 'string' },
            type: 'array',
            'x-deprecated': 'Unused. Will be removed.',
            'x-undocumented': 'Unused. Will be removed.',
          },
          accepted_providers: {
            description:
              'List of accepted [provider keys](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-brands-to-display-in-your-connect-webviews).',
            items: { type: 'string' },
            type: 'array',
          },
          any_device_allowed: {
            deprecated: true,
            type: 'boolean',
            'x-deprecated': 'Unused. Will be removed.',
            'x-undocumented': 'Unused. Will be removed.',
          },
          any_provider_allowed: {
            description: 'Indicates whether any provider is allowed.',
            type: 'boolean',
          },
          authorized_at: {
            description:
              'Date and time at which the user authorized (through the Connect Webview) the management of their devices.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          automatically_manage_new_devices: {
            description:
              'Indicates whether Seam should [import all new devices](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#automatically_manage_new_devices) for the connected account to make these devices available for use and management by the Seam API.',
            type: 'boolean',
          },
          connect_webview_id: {
            description: 'ID of the Connect Webview.',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the Connect Webview.',
            format: 'uuid',
            nullable: true,
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the Connect Webview was created.',
            format: 'date-time',
            type: 'string',
          },
          custom_metadata: {
            additionalProperties: {
              oneOf: [{ type: 'string' }, { type: 'boolean' }],
            },
            description:
              'Set of key:value pairs. Adding custom metadata to a resource, such as a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews/attaching-custom-data-to-the-connect-webview), [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts/adding-custom-metadata-to-a-connected-account), or [device](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device), enables you to store custom information, like customer details or internal IDs from your application.',
            type: 'object',
          },
          custom_redirect_failure_url: {
            description:
              'URL to which the Connect Webview should redirect when an unexpected error occurs.',
            format: 'uri',
            nullable: true,
            type: 'string',
          },
          custom_redirect_url: {
            description:
              'URL to which the Connect Webview should redirect when the user successfully pairs a device or system. If you do not set the `custom_redirect_failure_url`, the Connect Webview redirects to the `custom_redirect_url` when an unexpected error occurs.',
            format: 'uri',
            nullable: true,
            type: 'string',
          },
          device_selection_mode: {
            enum: ['none', 'single', 'multiple'],
            type: 'string',
            'x-undocumented': 'Not implemented.',
          },
          login_successful: {
            description:
              'Indicates whether the user logged in successfully using the Connect Webview.',
            type: 'boolean',
          },
          selected_provider: {
            description:
              'Selected provider of the Connect Webview, one of the [provider keys](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-brands-to-display-in-your-connect-webviews).',
            nullable: true,
            type: 'string',
          },
          status: {
            description:
              'Status of the Connect Webview. `authorized` indicates that the user has successfully logged into their device or system account, thereby completing the Connect Webview.',
            enum: ['pending', 'failed', 'authorized'],
            type: 'string',
          },
          url: {
            description:
              'URL for the Connect Webview. You use the URL to display the Connect Webview flow to your user.',
            format: 'uri',
            type: 'string',
          },
          wait_for_device_creation: {
            description:
              'Indicates whether Seam should [finish syncing all devices](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#wait_for_device_creation) in a newly-connected account before completing the associated Connect Webview.',
            type: 'boolean',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the Connect Webview.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'connect_webview_id',
          'workspace_id',
          'created_at',
          'connected_account_id',
          'url',
          'device_selection_mode',
          'accepted_providers',
          'accepted_capabilities',
          'accepted_devices',
          'any_device_allowed',
          'any_provider_allowed',
          'login_successful',
          'status',
          'custom_redirect_url',
          'custom_redirect_failure_url',
          'custom_metadata',
          'automatically_manage_new_devices',
          'wait_for_device_creation',
          'authorized_at',
          'selected_provider',
        ],
        type: 'object',
        'x-route-path': '/connect_webviews',
      },
      connected_account: {
        description:
          'Represents a [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts). A connected account is an external third-party account to which your user has authorized Seam to get access, for example, an August account with a list of door locks.',
        properties: {
          account_type: {
            description: 'Type of connected account.',
            type: 'string',
          },
          account_type_display_name: {
            description: 'Display name for the connected account type.',
            type: 'string',
          },
          automatically_manage_new_devices: {
            description:
              'Indicates whether Seam should [import all new devices](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#automatically_manage_new_devices) for the connected account to make these devices available for management by the Seam API.',
            type: 'boolean',
          },
          connected_account_id: {
            description: 'ID of the connected account.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the connected account was created.',
            format: 'date-time',
            type: 'string',
          },
          custom_metadata: {
            additionalProperties: {
              oneOf: [{ type: 'string' }, { type: 'boolean' }],
            },
            description:
              'Set of key:value pairs. Adding custom metadata to a resource, such as a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews/attaching-custom-data-to-the-connect-webview), [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts/adding-custom-metadata-to-a-connected-account), or [device](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device), enables you to store custom information, like customer details or internal IDs from your application.',
            type: 'object',
          },
          customer_key: {
            description:
              'Your unique key for the customer associated with this connected account.',
            type: 'string',
          },
          errors: {
            description: 'Errors associated with the connected account.',
            items: {
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description: 'Indicates that the account is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the credentials provided were invalid.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['invalid_credentials'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if the Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline. See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the maximum number of users allowed for the site has been reached. This means that new access codes cannot be created. Contact Salto support to increase the user limit.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    salto_ks_metadata: {
                      description:
                        'Salto KS metadata associated with the connected account that has an error.',
                      properties: {
                        sites: {
                          description:
                            'Salto sites associated with the connected account that has an error.',
                          items: {
                            description:
                              'Salto site associated with the connected account that has an error.',
                            properties: {
                              site_id: {
                                description:
                                  'ID of a Salto site associated with the connected account that has an error.',
                                type: 'string',
                              },
                              site_name: {
                                description:
                                  'Name of a Salto site associated with the connected account that has an error.',
                                type: 'string',
                              },
                              site_user_subscription_limit: {
                                description:
                                  'Subscription limit of site users for a Salto site associated with the connected account that has an error.',
                                minimum: 0,
                                type: 'integer',
                              },
                              subscribed_site_user_count: {
                                description:
                                  'Count of subscribed site users for a Salto site associated with the connected account that has an error.',
                                minimum: 0,
                                type: 'integer',
                              },
                            },
                            required: [
                              'site_id',
                              'site_name',
                              'subscribed_site_user_count',
                              'site_user_subscription_limit',
                            ],
                            type: 'object',
                          },
                          type: 'array',
                        },
                      },
                      required: ['sites'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'error_code',
                    'salto_ks_metadata',
                  ],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          user_identifier: {
            description:
              'User identifier associated with the connected account.',
            properties: {
              api_url: {
                description:
                  'API URL for the user identifier associated with the connected account.',
                type: 'string',
              },
              email: {
                description:
                  'Email address of the user identifier associated with the connected account.',
                type: 'string',
              },
              exclusive: {
                description:
                  'Indicates whether the user identifier associated with the connected account is exclusive.',
                type: 'boolean',
              },
              phone: {
                description:
                  'Phone number of the user identifier associated with the connected account.',
                type: 'string',
              },
              username: {
                description:
                  'Username of the user identifier associated with the connected account.',
                type: 'string',
              },
            },
            type: 'object',
          },
          warnings: {
            description: 'Warnings associated with the connected account.',
            items: {
              description: 'Warning associated with the connected account.',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that scheduled downtime is planned for the connected account.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['scheduled_maintenance_window'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that an unknown issue occurred while syncing the state of the connected account with the provider. This issue may affect the proper functioning of one or more resources in the account.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['unknown_issue_with_connected_account'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS site has exceeded 80% of the maximum number of allowed users. Increase your subscription limit or delete some users from your site.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    salto_ks_metadata: {
                      description:
                        'Salto KS metadata associated with the connected account that has a warning.',
                      properties: {
                        sites: {
                          description:
                            'Salto sites associated with the connected account that has a warning.',
                          items: {
                            description:
                              'Salto site associated with the connected account that has a warning.',
                            properties: {
                              site_id: {
                                description:
                                  'ID of a Salto site associated with the connected account that has a warning.',
                                type: 'string',
                              },
                              site_name: {
                                description:
                                  'Name of a Salto site associated with the connected account that has a warning.',
                                type: 'string',
                              },
                              site_user_subscription_limit: {
                                description:
                                  'Subscription limit of site users for a Salto site associated with the connected account that has a warning.',
                                minimum: 0,
                                type: 'integer',
                              },
                              subscribed_site_user_count: {
                                description:
                                  'Count of subscribed site users for a Salto site associated with the connected account that has a warning.',
                                minimum: 0,
                                type: 'integer',
                              },
                            },
                            required: [
                              'site_id',
                              'site_name',
                              'site_user_subscription_limit',
                              'subscribed_site_user_count',
                            ],
                            type: 'object',
                          },
                          type: 'array',
                        },
                      },
                      required: ['sites'],
                      type: 'object',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_almost_reached'],
                      type: 'string',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'warning_code',
                    'salto_ks_metadata',
                  ],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
        },
        required: [
          'account_type_display_name',
          'errors',
          'warnings',
          'custom_metadata',
          'automatically_manage_new_devices',
        ],
        type: 'object',
        'x-route-path': '/connected_accounts',
      },
      device: {
        description:
          'Represents a [device](https://docs.seam.co/latest/core-concepts/devices) that has been connected to Seam.',
        properties: {
          can_hvac_cool: { type: 'boolean' },
          can_hvac_heat: { type: 'boolean' },
          can_hvac_heat_cool: { type: 'boolean' },
          can_program_offline_access_codes: { type: 'boolean' },
          can_program_online_access_codes: { type: 'boolean' },
          can_remotely_lock: { type: 'boolean' },
          can_remotely_unlock: { type: 'boolean' },
          can_simulate_connection: { type: 'boolean' },
          can_simulate_disconnection: { type: 'boolean' },
          can_simulate_removal: { type: 'boolean' },
          can_turn_off_hvac: { type: 'boolean' },
          capabilities_supported: {
            description:
              '\n        Collection of capabilities that the device supports when connected to Seam. Values are `access_code`, which indicates that the device can manage and utilize digital PIN codes for secure access; `lock`, which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; `noise_detection`, which indicates that the device supports monitoring and responding to ambient noise levels; `thermostat`, which indicates that the device can regulate and adjust indoor temperatures; `battery`, which indicates that the device can manage battery life and health; and `phone`, which indicates that the device is a mobile device, such as a smartphone. **Important:** Superseded by [capability flags](https://docs.seam.co/latest/capability-guides/device-and-system-capabilities#capability-flags).\n        ',
            items: {
              description:
                '\n        Collection of capabilities that the device supports when connected to Seam. **Important:** Superseded by [capability flags](https://docs.seam.co/latest/capability-guides/device-and-system-capabilities#capability-flags).\n        ',
              enum: [
                'access_code',
                'lock',
                'noise_detection',
                'thermostat',
                'battery',
                'phone',
              ],
              type: 'string',
            },
            type: 'array',
          },
          connected_account_id: {
            description:
              'Unique identifier for the account associated with the device.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the device object was created.',
            format: 'date-time',
            type: 'string',
          },
          custom_metadata: {
            additionalProperties: {
              oneOf: [{ type: 'string' }, { type: 'boolean' }],
            },
            description:
              'Set of key:value pairs. Adding custom metadata to a resource, such as a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews/attaching-custom-data-to-the-connect-webview), [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts/adding-custom-metadata-to-a-connected-account), or [device](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device), enables you to store custom information, like customer details or internal IDs from your application.',
            type: 'object',
          },
          device_id: {
            description: 'ID of the device.',
            format: 'uuid',
            type: 'string',
          },
          device_type: {
            description: 'Type of the device.',
            oneOf: [
              {
                description: 'Device type for smartlocks.\n          ',
                enum: [
                  'akuvox_lock',
                  'august_lock',
                  'brivo_access_point',
                  'butterflymx_panel',
                  'avigilon_alta_entry',
                  'doorking_lock',
                  'genie_door',
                  'igloo_lock',
                  'linear_lock',
                  'lockly_lock',
                  'kwikset_lock',
                  'nuki_lock',
                  'salto_lock',
                  'schlage_lock',
                  'seam_relay',
                  'smartthings_lock',
                  'wyze_lock',
                  'yale_lock',
                  'two_n_intercom',
                  'controlbyweb_device',
                  'ttlock_lock',
                  'igloohome_lock',
                  'hubitat_lock',
                  'four_suites_door',
                  'dormakaba_oracode_door',
                  'tedee_lock',
                  'akiles_lock',
                ],
                type: 'string',
              },
              {
                description: 'Device type for noise sensors.\n          ',
                enum: ['noiseaware_activity_zone', 'minut_sensor'],
                type: 'string',
              },
              {
                description: 'Device type for thermostats.\n          ',
                enum: [
                  'ecobee_thermostat',
                  'nest_thermostat',
                  'honeywell_resideo_thermostat',
                  'tado_thermostat',
                  'sensi_thermostat',
                  'smartthings_thermostat',
                ],
                type: 'string',
              },
              {
                description: 'Device type for phones.\n          ',
                enum: ['ios_phone', 'android_phone'],
                type: 'string',
              },
            ],
          },
          display_name: {
            description:
              'Display name of the device, defaults to nickname (if it is set) or `properties.appearance.name`, otherwise. Enables administrators and users to identify the device easily, especially when there are numerous devices.',
            type: 'string',
          },
          errors: {
            description:
              'Array of errors associated with the device. Each error object within the array contains two fields: `error_code` and `message`. `error_code` is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. `message` provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.',
            items: {
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description: 'Indicates that the account is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto site user limit has been reached.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_offline'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device has been removed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_removed'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the hub is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hub_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [backup access code pool](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes) is empty.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['empty_backup_access_code_pool'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the user is not authorized to use the August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_not_authorized'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not connected to a bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not paired with a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_not_paired_to_gateway'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that device credentials are missing.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['missing_device_credentials'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the auxiliary heat is running.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['auxiliary_heat_running'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a subscription is required to connect.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['subscription_required'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Lockly lock is not connected to a Wi-Fi bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_missing_wifi_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the credentials provided were invalid.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['invalid_credentials'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if the Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline. See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          is_managed: {
            description:
              'Indicates whether Seam manages the device. See also [Managed and Unmanaged Devices](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).',
            enum: [true],
            type: 'boolean',
          },
          location: {
            description: 'Location information for the device.',
            nullable: true,
            properties: {
              location_name: {
                description: 'Name of the device location.\n          ',
                type: 'string',
              },
              timezone: {
                description: 'Time zone of the device location.\n          ',
                type: 'string',
              },
            },
            type: 'object',
            'x-property-group-key': 'hardware',
          },
          nickname: {
            description:
              'Optional nickname to describe the device, settable through Seam.',
            type: 'string',
          },
          properties: {
            allOf: [
              {
                allOf: [
                  {
                    allOf: [
                      {
                        properties: {
                          accessory_keypad: {
                            description:
                              'Accessory keypad properties and state.',
                            properties: {
                              battery: {
                                description:
                                  'Keypad battery properties.\n          ',
                                properties: {
                                  level: {
                                    format: 'float',
                                    maximum: 1,
                                    minimum: 0,
                                    type: 'number',
                                  },
                                },
                                required: ['level'],
                                type: 'object',
                              },
                              is_connected: {
                                description:
                                  'Indicates if an accessory keypad is connected to the device.\n        ',
                                type: 'boolean',
                              },
                            },
                            required: ['is_connected'],
                            type: 'object',
                            'x-property-group-key': 'hardware',
                          },
                          appearance: {
                            description:
                              'Appearance-related properties, as reported by the device.',
                            properties: {
                              name: {
                                description:
                                  'Name of the device as seen from the provider API and application, not settable through Seam.',
                                type: 'string',
                              },
                            },
                            required: ['name'],
                            type: 'object',
                            'x-property-group-key': 'hardware',
                          },
                          battery: {
                            description:
                              'Represents the current status of the battery charge level.',
                            properties: {
                              level: {
                                description:
                                  'Battery charge level as a value between 0 and 1, inclusive.\n          ',
                                format: 'float',
                                maximum: 1,
                                minimum: 0,
                                type: 'number',
                              },
                              status: {
                                description:
                                  'Represents the current status of the battery charge level. Values are `critical`, which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; `low`, which signifies that the battery is under the preferred threshold and should be charged soon; `good`, which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and `full`, which represents a battery that is fully charged, providing the maximum duration of usage.\n          ',
                                enum: ['critical', 'low', 'good', 'full'],
                                type: 'string',
                              },
                            },
                            required: ['level', 'status'],
                            type: 'object',
                            'x-property-group-key': 'hardware',
                          },
                          battery_level: {
                            description:
                              'Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.',
                            format: 'float',
                            maximum: 1,
                            minimum: 0,
                            type: 'number',
                            'x-property-group-key': 'hardware',
                          },
                          currently_triggering_noise_threshold_ids: {
                            description:
                              'Array of noise threshold IDs that are currently triggering.',
                            items: { type: 'string' },
                            type: 'array',
                            'x-property-group-key': 'noise_sensors',
                          },
                          has_direct_power: {
                            description:
                              'Indicates whether the device has direct power.',
                            type: 'boolean',
                            'x-property-group-key': 'hardware',
                          },
                          image_alt_text: {
                            description: 'Alt text for the device image.',
                            type: 'string',
                            'x-property-group-key': 'hardware',
                          },
                          image_url: {
                            description: 'Image URL for the device.',
                            format: 'uri',
                            type: 'string',
                            'x-property-group-key': 'hardware',
                          },
                          manufacturer: {
                            description:
                              'Manufacturer of the device. When a device, such as a smart lock, is connected through a smart hub, the manufacturer of the device might be different from that of the smart hub.',
                            type: 'string',
                            'x-property-group-key': 'hardware',
                          },
                          model: {
                            description: 'Device model-related properties.',
                            properties: {
                              accessory_keypad_supported: {
                                deprecated: true,
                                type: 'boolean',
                                'x-deprecated':
                                  'use device.properties.model.can_connect_accessory_keypad',
                              },
                              can_connect_accessory_keypad: {
                                description:
                                  '\n          Indicates whether the device can connect a accessory keypad.\n      ',
                                type: 'boolean',
                              },
                              display_name: {
                                description:
                                  '\n          Display name of the device model.\n      ',
                                type: 'string',
                              },
                              has_built_in_keypad: {
                                description:
                                  '\n          Indicates whether the device has a built in accessory keypad.\n      ',
                                type: 'boolean',
                              },
                              manufacturer_display_name: {
                                description:
                                  '\n          Display name that corresponds to the manufacturer-specific terminology for the device.\n      ',
                                type: 'string',
                              },
                              offline_access_codes_supported: {
                                deprecated: true,
                                type: 'boolean',
                                'x-deprecated':
                                  'use device.can_program_offline_access_codes.',
                              },
                              online_access_codes_supported: {
                                deprecated: true,
                                type: 'boolean',
                                'x-deprecated':
                                  'use device.can_program_online_access_codes.',
                              },
                            },
                            required: [
                              'display_name',
                              'manufacturer_display_name',
                            ],
                            type: 'object',
                          },
                          name: {
                            deprecated: true,
                            description: 'Name of the device.',
                            type: 'string',
                            'x-deprecated': 'use device.display_name instead',
                          },
                          noise_level_decibels: {
                            description:
                              'Indicates current noise level in decibels, if the device supports noise detection.',
                            format: 'float',
                            type: 'number',
                            'x-property-group-key': 'noise_sensors',
                          },
                          offline_access_codes_enabled: {
                            description:
                              'Indicates whether it is currently possible to use offline access codes for the device.',
                            type: 'boolean',
                            'x-property-group-key': 'access_codes',
                          },
                          online: {
                            description:
                              'Indicates whether the device is online.',
                            type: 'boolean',
                          },
                          online_access_codes_enabled: {
                            description:
                              'Indicates whether it is currently possible to use online access codes for the device.',
                            type: 'boolean',
                            'x-property-group-key': 'access_codes',
                          },
                          serial_number: {
                            description: 'Serial number of the device.',
                            type: 'string',
                            'x-property-group-key': 'hardware',
                          },
                          supports_accessory_keypad: {
                            deprecated: true,
                            type: 'boolean',
                            'x-deprecated':
                              'use device.properties.model.can_connect_accessory_keypad',
                            'x-property-group-key': 'access_codes',
                          },
                          supports_offline_access_codes: {
                            deprecated: true,
                            type: 'boolean',
                            'x-deprecated': 'use offline_access_codes_enabled',
                            'x-property-group-key': 'access_codes',
                          },
                        },
                        required: ['online', 'name', 'appearance', 'model'],
                        type: 'object',
                      },
                      {
                        description:
                          '\n          Properties of the phone.\n          ',
                        properties: {
                          assa_abloy_credential_service_metadata: {
                            description:
                              'ASSA ABLOY Credential Service metadata for the phone.',
                            properties: {
                              endpoints: {
                                description:
                                  'Endpoints associated with the phone.',
                                items: {
                                  properties: {
                                    endpoint_id: {
                                      description:
                                        'ID of the associated endpoint.',
                                      type: 'string',
                                    },
                                    is_active: {
                                      description:
                                        'Indicated whether the endpoint is active.',
                                      type: 'boolean',
                                    },
                                  },
                                  required: ['endpoint_id', 'is_active'],
                                  type: 'object',
                                },
                                type: 'array',
                              },
                              has_active_endpoint: {
                                description:
                                  'Indicates whether the credential service has active endpoints associated with the phone.',
                                type: 'boolean',
                              },
                            },
                            required: ['has_active_endpoint', 'endpoints'],
                            type: 'object',
                          },
                          salto_space_credential_service_metadata: {
                            description:
                              'Salto Space credential service metadata for the phone.',
                            properties: {
                              has_active_phone: {
                                description:
                                  'Indicates whether the credential service has an active associated phone.',
                                type: 'boolean',
                              },
                            },
                            required: ['has_active_phone'],
                            type: 'object',
                          },
                        },
                        type: 'object',
                      },
                    ],
                  },
                  {
                    description: 'Provider-specific metadata.',
                    properties: {
                      akiles_metadata: {
                        description: 'Metadata for an Akiles device.',
                        properties: {
                          _member_group_id: {
                            description:
                              'Group ID to which to add users for an Akiles device.',
                            type: 'string',
                          },
                          gadget_id: {
                            description: 'Gadget ID for an Akiles device.',
                            type: 'string',
                          },
                          gadget_name: {
                            description: 'Gadget name for an Akiles device.',
                            type: 'string',
                          },
                          product_name: {
                            description: 'Product name for an Akiles device.',
                            type: 'string',
                          },
                        },
                        required: ['gadget_name', 'gadget_id', 'product_name'],
                        type: 'object',
                      },
                      assa_abloy_vostio_metadata: {
                        description:
                          'Metadata for an ASSA ABLOY Vostio system.',
                        properties: {
                          encoder_name: {
                            description:
                              'Encoder name for an ASSA ABLOY Vostio system.',
                            type: 'string',
                          },
                        },
                        required: ['encoder_name'],
                        type: 'object',
                      },
                      august_metadata: {
                        description: 'Metadata for an August device.',
                        properties: {
                          has_keypad: {
                            description:
                              'Indicates whether an August device has a keypad.',
                            type: 'boolean',
                          },
                          house_id: {
                            description: 'House ID for an August device.',
                            type: 'string',
                          },
                          house_name: {
                            description: 'House name for an August device.',
                            type: 'string',
                          },
                          keypad_battery_level: {
                            description:
                              'Keypad battery level for an August device.',
                            type: 'string',
                          },
                          lock_id: {
                            description: 'Lock ID for an August device.',
                            type: 'string',
                          },
                          lock_name: {
                            description: 'Lock name for an August device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for an August device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'lock_id',
                          'lock_name',
                          'house_name',
                          'has_keypad',
                        ],
                        type: 'object',
                      },
                      avigilon_alta_metadata: {
                        description: 'Metadata for an Avigilon Alta system.',
                        properties: {
                          entry_name: {
                            description:
                              'Entry name for an Avigilon Alta system.',
                            type: 'string',
                          },
                          entry_relays_total_count: {
                            description:
                              'Total count of entry relays for an Avigilon Alta system.',
                            format: 'float',
                            type: 'number',
                          },
                          org_name: {
                            description:
                              'Organization name for an Avigilon Alta system.',
                            type: 'string',
                          },
                          site_id: {
                            description: 'Site ID for an Avigilon Alta system.',
                            format: 'float',
                            type: 'number',
                          },
                          site_name: {
                            description:
                              'Site name for an Avigilon Alta system.',
                            type: 'string',
                          },
                          zone_id: {
                            description: 'Zone ID for an Avigilon Alta system.',
                            format: 'float',
                            type: 'number',
                          },
                          zone_name: {
                            description:
                              'Zone name for an Avigilon Alta system.',
                            type: 'string',
                          },
                        },
                        required: [
                          'entry_name',
                          'org_name',
                          'zone_id',
                          'zone_name',
                          'site_id',
                          'site_name',
                          'entry_relays_total_count',
                        ],
                        type: 'object',
                      },
                      brivo_metadata: {
                        description: 'Metadata for a Brivo device.',
                        properties: {
                          device_name: {
                            description: 'Device name for a Brivo device.',
                            type: 'string',
                          },
                        },
                        required: ['device_name'],
                        type: 'object',
                      },
                      controlbyweb_metadata: {
                        description: 'Metadata for a ControlByWeb device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a ControlByWeb device.',
                            type: 'string',
                          },
                          device_name: {
                            description:
                              'Device name for a ControlByWeb device.',
                            type: 'string',
                          },
                          relay_name: {
                            description:
                              'Relay name for a ControlByWeb device.',
                            nullable: true,
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name', 'relay_name'],
                        type: 'object',
                      },
                      dormakaba_oracode_metadata: {
                        description: 'Metadata for a dormakaba Oracode device.',
                        properties: {
                          device_id: {
                            description:
                              'Device ID for a dormakaba Oracode device.',
                            oneOf: [
                              { format: 'float', type: 'number' },
                              { type: 'string' },
                            ],
                          },
                          door_id: {
                            description:
                              'Door ID for a dormakaba Oracode device.',
                            format: 'float',
                            type: 'number',
                          },
                          door_is_wireless: {
                            description:
                              'Indicates whether a door is wireless for a dormakaba Oracode device.',
                            type: 'boolean',
                          },
                          door_name: {
                            description:
                              'Door name for a dormakaba Oracode device.',
                            type: 'string',
                          },
                          iana_timezone: {
                            description:
                              'IANA time zone for a dormakaba Oracode device.',
                            type: 'string',
                          },
                          predefined_time_slots: {
                            description:
                              'Predefined time slots for a dormakaba Oracode device.',
                            items: {
                              description:
                                'Time slot for a dormakaba Oracode device.',
                              properties: {
                                check_in_time: {
                                  description:
                                    'Check in time for a time slot for a dormakaba Oracode device.',
                                  type: 'string',
                                },
                                check_out_time: {
                                  description:
                                    'Checkout time for a time slot for a dormakaba Oracode device.',
                                  type: 'string',
                                },
                                dormakaba_oracode_user_level_id: {
                                  description:
                                    'ID of a user level for a dormakaba Oracode device.',
                                  format: 'uuid',
                                  type: 'string',
                                },
                                ext_dormakaba_oracode_user_level_prefix: {
                                  description:
                                    'Prefix for a user level for a dormakaba Oracode device.',
                                  format: 'float',
                                  type: 'number',
                                },
                                is_24_hour: {
                                  description:
                                    'Indicates whether a time slot for a dormakaba Oracode device is a 24-hour time slot.',
                                  type: 'boolean',
                                },
                                is_biweekly_mode: {
                                  description:
                                    'Indicates whether a time slot for a dormakaba Oracode device is in biweekly mode.',
                                  type: 'boolean',
                                },
                                is_master: {
                                  description:
                                    'Indicates whether a time slot for a dormakaba Oracode device is a master time slot.',
                                  type: 'boolean',
                                },
                                is_one_shot: {
                                  description:
                                    'Indicates whether a time slot for a dormakaba Oracode device is a one-shot time slot.',
                                  type: 'boolean',
                                },
                                name: {
                                  description:
                                    'Name of a time slot for a dormakaba Oracode device.',
                                  type: 'string',
                                },
                                prefix: {
                                  description:
                                    'Prefix for a time slot for a dormakaba Oracode device.',
                                  format: 'float',
                                  type: 'number',
                                },
                              },
                              required: [
                                'name',
                                'prefix',
                                'check_in_time',
                                'check_out_time',
                                'is_24_hour',
                                'is_biweekly_mode',
                                'is_one_shot',
                                'is_master',
                                'ext_dormakaba_oracode_user_level_prefix',
                                'dormakaba_oracode_user_level_id',
                              ],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          site_id: {
                            deprecated: true,
                            description:
                              'Site ID for a dormakaba Oracode device.',
                            format: 'float',
                            nullable: true,
                            type: 'number',
                            'x-deprecated':
                              'Previously marked as "@DEPRECATED."',
                          },
                          site_name: {
                            description:
                              'Site name for a dormakaba Oracode device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'door_name',
                          'door_is_wireless',
                          'site_id',
                          'site_name',
                        ],
                        type: 'object',
                      },
                      ecobee_metadata: {
                        description: 'Metadata for an ecobee device.',
                        properties: {
                          device_name: {
                            description: 'Device name for an ecobee device.',
                            type: 'string',
                          },
                          ecobee_device_id: {
                            description: 'Device ID for an ecobee device.',
                            type: 'string',
                          },
                        },
                        required: ['ecobee_device_id', 'device_name'],
                        type: 'object',
                      },
                      four_suites_metadata: {
                        description: 'Metadata for a 4SUITES device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a 4SUITES device.',
                            format: 'float',
                            type: 'number',
                          },
                          device_name: {
                            description: 'Device name for a 4SUITES device.',
                            type: 'string',
                          },
                          reclose_delay_in_seconds: {
                            description:
                              'Reclose delay, in seconds, for a 4SUITES device.',
                            format: 'float',
                            type: 'number',
                          },
                        },
                        required: [
                          'device_id',
                          'device_name',
                          'reclose_delay_in_seconds',
                        ],
                        type: 'object',
                      },
                      genie_metadata: {
                        description: 'Metadata for a Genie device.',
                        properties: {
                          device_name: {
                            description: 'Lock name for a Genie device.',
                            type: 'string',
                          },
                          door_name: {
                            description: 'Door name for a Genie device.',
                            type: 'string',
                          },
                        },
                        required: ['device_name', 'door_name'],
                        type: 'object',
                      },
                      honeywell_resideo_metadata: {
                        description: 'Metadata for a Honeywell Resideo device.',
                        properties: {
                          device_name: {
                            description:
                              'Device name for a Honeywell Resideo device.',
                            type: 'string',
                          },
                          honeywell_resideo_device_id: {
                            description:
                              'Device ID for a Honeywell Resideo device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'honeywell_resideo_device_id',
                          'device_name',
                        ],
                        type: 'object',
                      },
                      hubitat_metadata: {
                        description: 'Metadata for a Hubitat device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Hubitat device.',
                            type: 'string',
                          },
                          device_label: {
                            description: 'Device label for a Hubitat device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Hubitat device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name', 'device_label'],
                        type: 'object',
                      },
                      igloo_metadata: {
                        description: 'Metadata for an igloo device.',
                        properties: {
                          bridge_id: {
                            description: 'Bridge ID for an igloo device.',
                            type: 'string',
                          },
                          device_id: {
                            description: 'Device ID for an igloo device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for an igloo device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'bridge_id'],
                        type: 'object',
                      },
                      igloohome_metadata: {
                        description: 'Metadata for an igloohome device.',
                        properties: {
                          bridge_id: {
                            description: 'Bridge ID for an igloohome device.',
                            type: 'string',
                          },
                          bridge_name: {
                            description: 'Bridge name for an igloohome device.',
                            type: 'string',
                          },
                          device_id: {
                            description: 'Device ID for an igloohome device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for an igloohome device.',
                            type: 'string',
                          },
                          keypad_id: {
                            description: 'Keypad ID for an igloohome device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      kwikset_metadata: {
                        description: 'Metadata for a Kwikset device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Kwikset device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Kwikset device.',
                            type: 'string',
                          },
                          model_number: {
                            description: 'Model number for a Kwikset device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name', 'model_number'],
                        type: 'object',
                      },
                      lockly_metadata: {
                        description: 'Metadata for a Lockly device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Lockly device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Lockly device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for a Lockly device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      minut_metadata: {
                        description: 'Metadata for a Minut device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Minut device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Minut device.',
                            type: 'string',
                          },
                          latest_sensor_values: {
                            description:
                              'Latest sensor values for a Minut device.',
                            properties: {
                              accelerometer_z: {
                                description:
                                  'Latest accelerometer Z-axis reading for a Minut device.',
                                properties: {
                                  time: {
                                    description:
                                      'Time of latest accelerometer Z-axis reading for a Minut device.',
                                    type: 'string',
                                  },
                                  value: {
                                    description:
                                      'Value of latest accelerometer Z-axis reading for a Minut device.',
                                    format: 'float',
                                    type: 'number',
                                  },
                                },
                                required: ['time', 'value'],
                                type: 'object',
                              },
                              humidity: {
                                description:
                                  'Latest humidity reading for a Minut device.',
                                properties: {
                                  time: {
                                    description:
                                      'Time of latest humidity reading for a Minut device.',
                                    type: 'string',
                                  },
                                  value: {
                                    description:
                                      'Value of latest humidity reading for a Minut device.',
                                    format: 'float',
                                    type: 'number',
                                  },
                                },
                                required: ['time', 'value'],
                                type: 'object',
                              },
                              pressure: {
                                description:
                                  'Latest pressure reading for a Minut device.',
                                properties: {
                                  time: {
                                    description:
                                      'Time of latest pressure reading for a Minut device.',
                                    type: 'string',
                                  },
                                  value: {
                                    description:
                                      'Value of latest pressure reading for a Minut device.',
                                    format: 'float',
                                    type: 'number',
                                  },
                                },
                                required: ['time', 'value'],
                                type: 'object',
                              },
                              sound: {
                                description:
                                  'Latest sound reading for a Minut device.',
                                properties: {
                                  time: {
                                    description:
                                      'Time of latest sound reading for a Minut device.',
                                    type: 'string',
                                  },
                                  value: {
                                    description:
                                      'Value of latest sound reading for a Minut device.',
                                    format: 'float',
                                    type: 'number',
                                  },
                                },
                                required: ['time', 'value'],
                                type: 'object',
                              },
                              temperature: {
                                description:
                                  'Latest temperature reading for a Minut device.',
                                properties: {
                                  time: {
                                    description:
                                      'Time of latest temperature reading for a Minut device.',
                                    type: 'string',
                                  },
                                  value: {
                                    description:
                                      'Value of latest temperature reading for a Minut device.',
                                    format: 'float',
                                    type: 'number',
                                  },
                                },
                                required: ['time', 'value'],
                                type: 'object',
                              },
                            },
                            required: [
                              'temperature',
                              'sound',
                              'humidity',
                              'pressure',
                              'accelerometer_z',
                            ],
                            type: 'object',
                          },
                        },
                        required: [
                          'device_id',
                          'device_name',
                          'latest_sensor_values',
                        ],
                        type: 'object',
                      },
                      nest_metadata: {
                        description: 'Metadata for a Google Nest device.',
                        properties: {
                          device_custom_name: {
                            description:
                              'Custom device name for a Google Nest device. The device owner sets this value.',
                            type: 'string',
                          },
                          device_name: {
                            description:
                              'Device name for a Google Nest device. Google sets this value.',
                            type: 'string',
                          },
                          display_name: {
                            description:
                              'Display name for a Google Nest device.',
                            type: 'string',
                          },
                          nest_device_id: {
                            description: 'Device ID for a Google Nest device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'nest_device_id',
                          'device_name',
                          'device_custom_name',
                        ],
                        type: 'object',
                      },
                      noiseaware_metadata: {
                        description: 'Metadata for a NoiseAware device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a NoiseAware device.',
                            type: 'string',
                          },
                          device_model: {
                            description:
                              'Device model for a NoiseAware device.',
                            enum: ['indoor', 'outdoor'],
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a NoiseAware device.',
                            type: 'string',
                          },
                          noise_level_decibel: {
                            description:
                              'Noise level, in decibels, for a NoiseAware device.',
                            format: 'float',
                            type: 'number',
                          },
                          noise_level_nrs: {
                            description:
                              'Noise level, expressed as a Noise Risk Score (NRS), for a NoiseAware device.',
                            format: 'float',
                            type: 'number',
                          },
                        },
                        required: [
                          'device_model',
                          'noise_level_nrs',
                          'noise_level_decibel',
                          'device_name',
                          'device_id',
                        ],
                        type: 'object',
                      },
                      nuki_metadata: {
                        description: 'Metadata for a Nuki device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Nuki device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Nuki device.',
                            type: 'string',
                          },
                          keypad_2_paired: {
                            description:
                              'Indicates whether keypad 2 is paired for a Nuki device.',
                            type: 'boolean',
                          },
                          keypad_battery_critical: {
                            description:
                              'Indicates whether the keypad battery is in a critical state for a Nuki device.',
                            type: 'boolean',
                          },
                          keypad_paired: {
                            description:
                              'Indicates whether the keypad is paired for a Nuki device.',
                            type: 'boolean',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      salto_ks_metadata: {
                        description: 'Metadata for a Salto KS device.',
                        properties: {
                          battery_level: {
                            description: 'Battery level for a Salto KS device.',
                            type: 'string',
                          },
                          customer_reference: {
                            description:
                              'Customer reference for a Salto KS device.',
                            type: 'string',
                          },
                          lock_id: {
                            description: 'Lock ID for a Salto KS device.',
                            type: 'string',
                          },
                          lock_type: {
                            description: 'Lock type for a Salto KS device.',
                            type: 'string',
                          },
                          locked_state: {
                            description: 'Locked state for a Salto KS device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for a Salto KS device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'lock_id',
                          'customer_reference',
                          'lock_type',
                          'battery_level',
                          'locked_state',
                        ],
                        type: 'object',
                      },
                      salto_metadata: {
                        deprecated: true,
                        description: 'Metada for a Salto device.',
                        properties: {
                          battery_level: {
                            description: 'Battery level for a Salto device.',
                            type: 'string',
                          },
                          customer_reference: {
                            description:
                              'Customer reference for a Salto device.',
                            type: 'string',
                          },
                          lock_id: {
                            description: 'Lock ID for a Salto device.',
                            type: 'string',
                          },
                          lock_type: {
                            description: 'Lock type for a Salto device.',
                            type: 'string',
                          },
                          locked_state: {
                            description: 'Locked state for a Salto device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for a Salto device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'lock_id',
                          'customer_reference',
                          'lock_type',
                          'battery_level',
                          'locked_state',
                        ],
                        type: 'object',
                        'x-deprecated': 'Use `salto_ks_metadata ` instead.',
                      },
                      schlage_metadata: {
                        description: 'Metadata for a Schlage device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Schlage device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Schlage device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for a Schlage device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      seam_bridge_metadata: {
                        description: 'Metadata for Seam Bridge.',
                        properties: {
                          device_num: {
                            description: 'Device number for Seam Bridge.',
                            format: 'float',
                            type: 'number',
                          },
                          name: {
                            description: 'Name for Seam Bridge.',
                            type: 'string',
                          },
                          unlock_method: {
                            description: 'Unlock method for Seam Bridge.',
                            enum: ['bridge', 'doorking'],
                            type: 'string',
                          },
                        },
                        required: ['device_num', 'name'],
                        type: 'object',
                      },
                      sensi_metadata: {
                        description: 'Metadata for a Sensi device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Sensi device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Sensi device.',
                            type: 'string',
                          },
                          product_type: {
                            description: 'Product type for a Sensi device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name', 'product_type'],
                        type: 'object',
                      },
                      smartthings_metadata: {
                        description: 'Metadata for a SmartThings device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a SmartThings device.',
                            type: 'string',
                          },
                          device_name: {
                            description:
                              'Device name for a SmartThings device.',
                            type: 'string',
                          },
                          location_id: {
                            description:
                              'Location ID for a SmartThings device.',
                            type: 'string',
                          },
                          model: {
                            description: 'Model for a SmartThings device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      tado_metadata: {
                        description: 'Metadata for a tado° device.',
                        properties: {
                          device_type: {
                            description: 'Device type for a tado° device.',
                            type: 'string',
                          },
                          serial_no: {
                            description: 'Serial number for a tado° device.',
                            type: 'string',
                          },
                        },
                        required: ['serial_no', 'device_type'],
                        type: 'object',
                      },
                      tedee_metadata: {
                        description: 'Metadata for a Tedee device.',
                        properties: {
                          bridge_id: {
                            description: 'Bridge ID for a Tedee device.',
                            format: 'float',
                            type: 'number',
                          },
                          bridge_name: {
                            description: 'Bridge name for a Tedee device.',
                            type: 'string',
                          },
                          device_id: {
                            description: 'Device ID for a Tedee device.',
                            format: 'float',
                            type: 'number',
                          },
                          device_model: {
                            description: 'Device model for a Tedee device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Tedee device.',
                            type: 'string',
                          },
                          keypad_id: {
                            description: 'Keypad ID for a Tedee device.',
                            format: 'float',
                            type: 'number',
                          },
                          serial_number: {
                            description: 'Serial number for a Tedee device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'device_id',
                          'serial_number',
                          'device_name',
                          'device_model',
                          'bridge_id',
                          'bridge_name',
                        ],
                        type: 'object',
                      },
                      ttlock_metadata: {
                        description: 'Metadata for a TTLock device.',
                        properties: {
                          feature_value: {
                            description: 'Feature value for a TTLock device.',
                            type: 'string',
                          },
                          features: {
                            description: 'Features for a TTLock device.',
                            properties: {
                              incomplete_keyboard_passcode: {
                                description:
                                  'Indicates whether a TTLock device supports an incomplete keyboard passcode.',
                                type: 'boolean',
                              },
                              lock_command: {
                                description:
                                  'Indicates whether a TTLock device supports the lock command.',
                                type: 'boolean',
                              },
                              passcode: {
                                description:
                                  'Indicates whether a TTLock device supports a passcode.',
                                type: 'boolean',
                              },
                              passcode_management: {
                                description:
                                  'Indicates whether a TTLock device supports passcode management.',
                                type: 'boolean',
                              },
                              unlock_via_gateway: {
                                description:
                                  'Indicates whether a TTLock device supports unlock via gateway.',
                                type: 'boolean',
                              },
                              wifi: {
                                description:
                                  'Indicates whether a TTLock device supports Wi-Fi.',
                                type: 'boolean',
                              },
                            },
                            required: [
                              'passcode',
                              'passcode_management',
                              'unlock_via_gateway',
                              'lock_command',
                              'incomplete_keyboard_passcode',
                              'wifi',
                            ],
                            type: 'object',
                          },
                          has_gateway: {
                            description:
                              'Indicates whether a TTLock device has a gateway.',
                            type: 'boolean',
                          },
                          lock_alias: {
                            description: 'Lock alias for a TTLock device.',
                            type: 'string',
                          },
                          lock_id: {
                            description: 'Lock ID for a TTLock device.',
                            format: 'float',
                            type: 'number',
                          },
                          wireless_keypads: {
                            description:
                              'Wireless keypads for a TTLock device.',
                            items: {
                              properties: {
                                wireless_keypad_id: {
                                  description:
                                    'ID for a wireless keypad for a TTLock device.',
                                  format: 'float',
                                  type: 'number',
                                },
                                wireless_keypad_name: {
                                  description:
                                    'Name for a wireless keypad for a TTLock device.',
                                  type: 'string',
                                },
                              },
                              required: [
                                'wireless_keypad_id',
                                'wireless_keypad_name',
                              ],
                              type: 'object',
                            },
                            type: 'array',
                          },
                        },
                        required: [
                          'lock_id',
                          'lock_alias',
                          'feature_value',
                          'features',
                        ],
                        type: 'object',
                      },
                      two_n_metadata: {
                        description: 'Metadata for a 2N device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a 2N device.',
                            format: 'float',
                            type: 'number',
                          },
                          device_name: {
                            description: 'Device name for a 2N device.',
                            type: 'string',
                          },
                        },
                        required: ['device_id', 'device_name'],
                        type: 'object',
                      },
                      visionline_metadata: {
                        description:
                          'Metadata for an ASSA ABLOY Visionline system.',
                        properties: {
                          encoder_id: {
                            description:
                              'Encoder ID for an ASSA ABLOY Visionline system.',
                            type: 'string',
                          },
                        },
                        required: ['encoder_id'],
                        type: 'object',
                      },
                      wyze_metadata: {
                        description: 'Metadata for a Wyze device.',
                        properties: {
                          device_id: {
                            description: 'Device ID for a Wyze device.',
                            type: 'string',
                          },
                          device_info_model: {
                            description:
                              'Device information model for a Wyze device.',
                            type: 'string',
                          },
                          device_name: {
                            description: 'Device name for a Wyze device.',
                            type: 'string',
                          },
                          keypad_uuid: {
                            description: 'Keypad UUID for a Wyze device.',
                            type: 'string',
                          },
                          locker_status_hardlock: {
                            description:
                              'Locker status (hardlock) for a Wyze device.',
                            format: 'float',
                            type: 'number',
                          },
                          product_model: {
                            description: 'Product model for a Wyze device.',
                            type: 'string',
                          },
                          product_name: {
                            description: 'Product name for a Wyze device.',
                            type: 'string',
                          },
                          product_type: {
                            description: 'Product type for a Wyze device.',
                            type: 'string',
                          },
                        },
                        required: [
                          'device_id',
                          'device_name',
                          'product_name',
                          'product_type',
                          'product_model',
                          'device_info_model',
                        ],
                        type: 'object',
                      },
                    },
                    type: 'object',
                    'x-property-group-key': 'provider_metadata',
                  },
                ],
              },
              {
                allOf: [
                  {
                    properties: {
                      _experimental_supported_code_from_access_codes_lengths: {
                        items: { format: 'float', type: 'number' },
                        type: 'array',
                        'x-undocumented': 'Marked as experimental.',
                      },
                      code_constraints: {
                        description:
                          'Constraints on access codes for the device. Seam represents each constraint as an object with a `constraint_type` property. Depending on the constraint type, there may also be additional properties. Note that some constraints are manufacturer- or device-specific.',
                        items: {
                          description: 'Access code constraint.',
                          oneOf: [
                            {
                              description: 'Code constraint for access codes.',
                              properties: {
                                constraint_type: {
                                  description:
                                    'Code constraint type for access codes.',
                                  enum: [
                                    'no_zeros',
                                    'cannot_start_with_12',
                                    'no_triple_consecutive_ints',
                                    'cannot_specify_pin_code',
                                    'pin_code_matches_existing_set',
                                    'start_date_in_future',
                                    'no_ascending_or_descending_sequence',
                                    'at_least_three_unique_digits',
                                    'cannot_contain_089',
                                    'cannot_contain_0789',
                                  ],
                                  type: 'string',
                                },
                              },
                              required: ['constraint_type'],
                              type: 'object',
                            },
                            {
                              description: 'Name constraint for access codes.',
                              properties: {
                                constraint_type: {
                                  enum: ['name_length', 'name_must_be_unique'],
                                  type: 'string',
                                },
                                max_length: {
                                  description:
                                    'Maximum name length constraint for access codes.',
                                  format: 'float',
                                  type: 'number',
                                },
                                min_length: {
                                  description:
                                    'Minimum name length constraint for access codes.',
                                  format: 'float',
                                  type: 'number',
                                },
                              },
                              required: ['constraint_type'],
                              type: 'object',
                            },
                          ],
                        },
                        type: 'array',
                        'x-property-group-key': 'access_codes',
                      },
                      door_open: {
                        description: 'Indicates whether the door is open.',
                        type: 'boolean',
                        'x-property-group-key': 'locks',
                      },
                      has_native_entry_events: {
                        description:
                          'Indicates whether the device supports native entry events.',
                        type: 'boolean',
                        'x-property-group-key': 'access_codes',
                      },
                      keypad_battery: {
                        description: 'Keypad battery status.',
                        properties: {
                          level: {
                            description:
                              '\n          Keypad battery charge level.\n          ',
                            format: 'float',
                            type: 'number',
                          },
                        },
                        required: ['level'],
                        type: 'object',
                        'x-property-group-key': 'access_codes',
                      },
                      locked: {
                        description: 'Indicates whether the lock is locked.',
                        type: 'boolean',
                        'x-property-group-key': 'locks',
                      },
                      max_active_codes_supported: {
                        description:
                          'Maximum number of active access codes that the device supports.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'access_codes',
                      },
                      supported_code_lengths: {
                        description: 'Supported code lengths for access codes.',
                        items: { format: 'float', type: 'number' },
                        type: 'array',
                        'x-property-group-key': 'access_codes',
                      },
                      supports_backup_access_code_pool: {
                        description:
                          'Indicates whether the device supports a [backup access code pool](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes).',
                        type: 'boolean',
                        'x-property-group-key': 'access_codes',
                      },
                    },
                    type: 'object',
                  },
                  {
                    properties: {
                      active_thermostat_schedule: {
                        default: null,
                        description:
                          'Active [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
                        nullable: true,
                        properties: {
                          climate_preset_key: {
                            description:
                              'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to use for the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
                            type: 'string',
                          },
                          created_at: {
                            description:
                              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) was created.',
                            format: 'date-time',
                            type: 'string',
                          },
                          device_id: {
                            description:
                              'ID of the desired [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) device.',
                            format: 'uuid',
                            type: 'string',
                          },
                          ends_at: {
                            description:
                              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                            format: 'date-time',
                            type: 'string',
                          },
                          errors: {
                            description:
                              'Errors associated with the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
                            items: {
                              properties: {
                                error_code: {
                                  description:
                                    'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                              },
                              required: ['error_code', 'message'],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          is_override_allowed: {
                            description:
                              "Indicates whether a person at the thermostat can change the thermostat's settings after the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) starts.",
                            type: 'boolean',
                          },
                          max_override_period_minutes: {
                            description:
                              "Number of minutes for which a person at the thermostat can change the thermostat's settings after the activation of the scheduled [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets). See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                            exclusiveMinimum: true,
                            minimum: 0,
                            nullable: true,
                            type: 'integer',
                          },
                          name: {
                            description:
                              'User-friendly name to identify the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
                            nullable: true,
                            type: 'string',
                          },
                          starts_at: {
                            description:
                              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                            format: 'date-time',
                            type: 'string',
                          },
                          thermostat_schedule_id: {
                            description:
                              'ID of the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
                            format: 'uuid',
                            type: 'string',
                          },
                          workspace_id: {
                            description:
                              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the thermostat schedule.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: [
                          'thermostat_schedule_id',
                          'device_id',
                          'name',
                          'climate_preset_key',
                          'starts_at',
                          'ends_at',
                          'workspace_id',
                          'created_at',
                          'errors',
                        ],
                        type: 'object',
                        'x-property-group-key': 'thermostats',
                        'x-route-path': '/thermostats/schedules',
                      },
                      available_climate_presets: {
                        description:
                          'Available [climate presets](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for the thermostat.',
                        items: {
                          properties: {
                            can_delete: {
                              description:
                                'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be deleted.',
                              type: 'boolean',
                            },
                            can_edit: {
                              description:
                                'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be edited.',
                              type: 'boolean',
                            },
                            can_program: {
                              description:
                                'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be programmed in a thermostat daily program.',
                              type: 'boolean',
                            },
                            climate_preset_key: {
                              description:
                                'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                              type: 'string',
                            },
                            cooling_set_point_celsius: {
                              description:
                                'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                              format: 'float',
                              type: 'number',
                            },
                            cooling_set_point_fahrenheit: {
                              description:
                                'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                              format: 'float',
                              type: 'number',
                            },
                            display_name: {
                              description:
                                'Display name for the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                              type: 'string',
                            },
                            fan_mode_setting: {
                              description:
                                'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                              enum: ['auto', 'on', 'circulate'],
                              type: 'string',
                            },
                            heating_set_point_celsius: {
                              description:
                                'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                              format: 'float',
                              type: 'number',
                            },
                            heating_set_point_fahrenheit: {
                              description:
                                'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                              format: 'float',
                              type: 'number',
                            },
                            hvac_mode_setting: {
                              description:
                                'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                              enum: ['off', 'heat', 'cool', 'heat_cool'],
                              type: 'string',
                            },
                            manual_override_allowed: {
                              deprecated: true,
                              description:
                                "Indicates whether a person at the thermostat can change the thermostat's settings. See [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                              type: 'boolean',
                              'x-deprecated':
                                "Use 'thermostat_schedule.is_override_allowed'",
                            },
                            name: {
                              default: null,
                              description:
                                'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                              nullable: true,
                              type: 'string',
                            },
                          },
                          required: [
                            'climate_preset_key',
                            'can_edit',
                            'can_delete',
                            'can_program',
                            'display_name',
                            'manual_override_allowed',
                          ],
                          type: 'object',
                        },
                        type: 'array',
                        'x-property-group-key': 'thermostats',
                      },
                      available_fan_mode_settings: {
                        description:
                          'Fan mode settings that the thermostat supports.',
                        items: {
                          enum: ['auto', 'on', 'circulate'],
                          type: 'string',
                        },
                        type: 'array',
                        'x-property-group-key': 'thermostats',
                      },
                      available_hvac_mode_settings: {
                        description:
                          'HVAC mode settings that the thermostat supports.',
                        items: {
                          enum: ['off', 'heat', 'cool', 'heat_cool'],
                          type: 'string',
                        },
                        type: 'array',
                        'x-property-group-key': 'thermostats',
                      },
                      current_climate_setting: {
                        description: 'Current climate setting.',
                        properties: {
                          can_delete: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be deleted.',
                            type: 'boolean',
                          },
                          can_edit: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be edited.',
                            type: 'boolean',
                          },
                          can_program: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be programmed in a thermostat daily program.',
                            type: 'boolean',
                          },
                          climate_preset_key: {
                            description:
                              'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            type: 'string',
                          },
                          cooling_set_point_celsius: {
                            description:
                              'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          cooling_set_point_fahrenheit: {
                            description:
                              'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          display_name: {
                            description:
                              'Display name for the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            type: 'string',
                          },
                          fan_mode_setting: {
                            description:
                              'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                            enum: ['auto', 'on', 'circulate'],
                            type: 'string',
                          },
                          heating_set_point_celsius: {
                            description:
                              'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          heating_set_point_fahrenheit: {
                            description:
                              'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          hvac_mode_setting: {
                            description:
                              'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                            enum: ['off', 'heat', 'cool', 'heat_cool'],
                            type: 'string',
                          },
                          manual_override_allowed: {
                            deprecated: true,
                            description:
                              "Indicates whether a person at the thermostat can change the thermostat's settings. See [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                            type: 'boolean',
                            'x-deprecated':
                              "Use 'thermostat_schedule.is_override_allowed'",
                          },
                          name: {
                            default: null,
                            description:
                              'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            nullable: true,
                            type: 'string',
                          },
                        },
                        type: 'object',
                        'x-property-group-key': 'thermostats',
                      },
                      default_climate_setting: {
                        deprecated: true,
                        properties: {
                          can_delete: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be deleted.',
                            type: 'boolean',
                          },
                          can_edit: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be edited.',
                            type: 'boolean',
                          },
                          can_program: {
                            description:
                              'Indicates whether the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) key can be programmed in a thermostat daily program.',
                            type: 'boolean',
                          },
                          climate_preset_key: {
                            description:
                              'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            type: 'string',
                          },
                          cooling_set_point_celsius: {
                            description:
                              'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          cooling_set_point_fahrenheit: {
                            description:
                              'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          display_name: {
                            description:
                              'Display name for the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            type: 'string',
                          },
                          fan_mode_setting: {
                            description:
                              'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                            enum: ['auto', 'on', 'circulate'],
                            type: 'string',
                          },
                          heating_set_point_celsius: {
                            description:
                              'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          heating_set_point_fahrenheit: {
                            description:
                              'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                            format: 'float',
                            type: 'number',
                          },
                          hvac_mode_setting: {
                            description:
                              'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                            enum: ['off', 'heat', 'cool', 'heat_cool'],
                            type: 'string',
                          },
                          manual_override_allowed: {
                            deprecated: true,
                            description:
                              "Indicates whether a person at the thermostat can change the thermostat's settings. See [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                            type: 'boolean',
                            'x-deprecated':
                              "Use 'thermostat_schedule.is_override_allowed'",
                          },
                          name: {
                            default: null,
                            description:
                              'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                            nullable: true,
                            type: 'string',
                          },
                        },
                        type: 'object',
                        'x-deprecated':
                          'use fallback_climate_preset_key to specify a fallback climate preset instead.',
                        'x-property-group-key': 'thermostats',
                      },
                      fallback_climate_preset_key: {
                        default: null,
                        description:
                          'Key of the [fallback climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets/setting-the-fallback-climate-preset) for the thermostat.',
                        minLength: 1,
                        nullable: true,
                        type: 'string',
                        'x-property-group-key': 'thermostats',
                      },
                      fan_mode_setting: {
                        deprecated: true,
                        enum: ['auto', 'on', 'circulate'],
                        type: 'string',
                        'x-deprecated':
                          'Use `current_climate_setting.fan_mode_setting` instead.',
                        'x-property-group-key': 'thermostats',
                      },
                      is_cooling: {
                        description:
                          'Indicates whether the connected HVAC system is currently cooling, as reported by the thermostat.',
                        type: 'boolean',
                        'x-property-group-key': 'thermostats',
                      },
                      is_fan_running: {
                        description:
                          'Indicates whether the fan in the connected HVAC system is currently running, as reported by the thermostat.',
                        type: 'boolean',
                        'x-property-group-key': 'thermostats',
                      },
                      is_heating: {
                        description:
                          'Indicates whether the connected HVAC system is currently heating, as reported by the thermostat.',
                        type: 'boolean',
                        'x-property-group-key': 'thermostats',
                      },
                      is_temporary_manual_override_active: {
                        description:
                          'Indicates whether the current thermostat settings differ from the most recent active program or schedule that Seam activated. For this condition to occur, `current_climate_setting.manual_override_allowed` must also be `true`.',
                        type: 'boolean',
                        'x-property-group-key': 'thermostats',
                      },
                      max_cooling_set_point_celsius: {
                        description:
                          'Maximum [cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#cooling-set-point) in °C.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      max_cooling_set_point_fahrenheit: {
                        description:
                          'Maximum [cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#cooling-set-point) in °F.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      max_heating_set_point_celsius: {
                        description:
                          'Maximum [heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#heating-set-point) in °C.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      max_heating_set_point_fahrenheit: {
                        description:
                          'Maximum [heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#heating-set-point) in °F.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_cooling_set_point_celsius: {
                        description:
                          'Minimum [cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#cooling-set-point) in °C.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_cooling_set_point_fahrenheit: {
                        description:
                          'Minimum [cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#cooling-set-point) in °F.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_heating_cooling_delta_celsius: {
                        description:
                          'Minimum [temperature difference](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#minimum-heating-cooling-temperature-delta) in °C between the cooling and heating set points when in heat-cool (auto) mode.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_heating_cooling_delta_fahrenheit: {
                        description:
                          'Minimum [temperature difference](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#minimum-heating-cooling-temperature-delta) in °F between the cooling and heating set points when in heat-cool (auto) mode.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_heating_set_point_celsius: {
                        description:
                          'Minimum [heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#heating-set-point) in °C.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      min_heating_set_point_fahrenheit: {
                        description:
                          'Minimum [heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points#heating-set-point) in °F.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      relative_humidity: {
                        description:
                          'Reported relative humidity, as a value between 0 and 1, inclusive.',
                        format: 'float',
                        maximum: 1,
                        minimum: 0,
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      temperature_celsius: {
                        description: 'Reported temperature in °C.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      temperature_fahrenheit: {
                        description: 'Reported temperature in °F.',
                        format: 'float',
                        type: 'number',
                        'x-property-group-key': 'thermostats',
                      },
                      temperature_threshold: {
                        description:
                          'Current [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) set for the thermostat.',
                        properties: {
                          lower_limit_celsius: {
                            description:
                              'Lower limit in °C within the current [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) set for the thermostat.\n          ',
                            format: 'float',
                            nullable: true,
                            type: 'number',
                          },
                          lower_limit_fahrenheit: {
                            description:
                              'Lower limit in °F within the current [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) set for the thermostat.\n          ',
                            format: 'float',
                            nullable: true,
                            type: 'number',
                          },
                          upper_limit_celsius: {
                            description:
                              'Upper limit in °C within the current [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) set for the thermostat.\n          ',
                            format: 'float',
                            nullable: true,
                            type: 'number',
                          },
                          upper_limit_fahrenheit: {
                            description:
                              'Upper limit in °F within the current [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) set for the thermostat.\n          ',
                            format: 'float',
                            nullable: true,
                            type: 'number',
                          },
                        },
                        required: [
                          'lower_limit_celsius',
                          'lower_limit_fahrenheit',
                          'upper_limit_celsius',
                          'upper_limit_fahrenheit',
                        ],
                        type: 'object',
                        'x-property-group-key': 'thermostats',
                      },
                      thermostat_daily_programs: {
                        description:
                          'Configured [daily programs](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-programs) for the thermostat.',
                        items: {
                          description:
                            'Represents a thermostat daily program, consisting of a set of periods, each of which has a starting time and the key that identifies the climate preset to apply at the starting time.',
                          properties: {
                            created_at: {
                              description:
                                'Date and time at which the thermostat daily program was created.',
                              format: 'date-time',
                              type: 'string',
                            },
                            device_id: {
                              description:
                                'ID of the thermostat device on which the thermostat daily program is configured.',
                              format: 'uuid',
                              type: 'string',
                            },
                            name: {
                              description:
                                'User-friendly name to identify the thermostat daily program.',
                              nullable: true,
                              type: 'string',
                            },
                            periods: {
                              description:
                                'Array of thermostat daily program periods.',
                              items: {
                                description:
                                  'Period for a thermostat daily program. Consists of a starts at time and the key that identifies the configured climate preset to apply at the starting time.',
                                properties: {
                                  climate_preset_key: {
                                    description:
                                      'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to activate at the `starts_at_time`.',
                                    type: 'string',
                                  },
                                  starts_at_time: {
                                    description:
                                      'Time at which the thermostat daily program period starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                                    pattern:
                                      '^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$',
                                    type: 'string',
                                  },
                                },
                                required: [
                                  'starts_at_time',
                                  'climate_preset_key',
                                ],
                                type: 'object',
                              },
                              type: 'array',
                            },
                            thermostat_daily_program_id: {
                              description:
                                'ID of the thermostat daily program.',
                              format: 'uuid',
                              type: 'string',
                            },
                            workspace_id: {
                              description:
                                'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the thermostat daily program.',
                              format: 'uuid',
                              type: 'string',
                            },
                          },
                          required: [
                            'thermostat_daily_program_id',
                            'device_id',
                            'name',
                            'periods',
                            'workspace_id',
                            'created_at',
                          ],
                          type: 'object',
                          'x-route-path': '/thermostats/daily_programs',
                        },
                        type: 'array',
                        'x-property-group-key': 'thermostats',
                      },
                      thermostat_weekly_program: {
                        description:
                          'Current [weekly program](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-programs) for the thermostat.',
                        nullable: true,
                        properties: {
                          created_at: {
                            description:
                              'Date and time at which the thermostat weekly program was created.',
                            format: 'date-time',
                            type: 'string',
                          },
                          friday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Fridays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          monday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Mondays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          saturday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Saturdays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          sunday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Sundays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          thursday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Thursdays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          tuesday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Tuesdays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                          wednesday_program_id: {
                            description:
                              'ID of the thermostat daily program to run on Wednesdays.',
                            format: 'uuid',
                            nullable: true,
                            type: 'string',
                          },
                        },
                        required: [
                          'monday_program_id',
                          'tuesday_program_id',
                          'wednesday_program_id',
                          'thursday_program_id',
                          'friday_program_id',
                          'saturday_program_id',
                          'sunday_program_id',
                          'created_at',
                        ],
                        type: 'object',
                        'x-property-group-key': 'thermostats',
                      },
                    },
                    type: 'object',
                  },
                ],
              },
            ],
            description: 'Properties of the device.',
            'x-property-groups': {
              access_codes: { name: 'Access Codes' },
              hardware: { name: 'Hardware' },
              locks: { name: 'Locks' },
              noise_sensors: { name: 'Noise Sensors' },
              phones: { name: 'Phones' },
              provider_metadata: { name: 'Provider Metadata' },
              thermostats: { name: 'Thermostats' },
            },
          },
          warnings: {
            description:
              'Array of warnings associated with the device. Each warning object within the array contains two fields: `warning_code` and `message`. `warning_code` is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. `message` provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.',
            items: {
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the backup access code is unhealthy.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['partial_backup_access_code_pool'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that there are too many backup codes.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['many_active_backup_codes'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Wyze Lock is not connected to a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_device_missing_gateway'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device is offline but has some functionality available.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['functional_offline_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a third-party integration has been detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['third_party_integration_detected'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Nest thermostat is in manual eco mode.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['nest_thermostat_in_manual_eco_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Remote Unlock feature is not enabled in the settings.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_gateway_unlocking_not_enabled'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Indicates that the gateway signal is weak.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_weak_gateway_signal'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the temperature threshold has been exceeded.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['temperature_threshold_exceeded'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device appears to be unresponsive.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['device_communication_degraded'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a scheduled maintenance window has been detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['scheduled_maintenance_window'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device has a flaky connection.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['device_has_flaky_connection'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS lock is in Office Mode. Access Codes will not unlock doors.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_office_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS lock is in Privacy Mode. Access Codes will not unlock doors.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_privacy_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS site has exceeded 80% of the maximum number of allowed users. Increase your subscription limit or delete some users from your site.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_almost_reached'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that an unknown issue occurred while syncing the state of the phone with the provider. This issue may affect the proper functioning of the phone.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['unknown_issue_with_phone'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that Seam detected that the Lockly device does not have a time zone configured. Time-bound codes may not work as expected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_time_zone_not_configured'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'Unique identifier for the Seam workspace associated with the device.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'device_id',
          'device_type',
          'display_name',
          'capabilities_supported',
          'properties',
          'location',
          'connected_account_id',
          'workspace_id',
          'errors',
          'warnings',
          'created_at',
          'is_managed',
          'custom_metadata',
        ],
        type: 'object',
        'x-property-groups': {
          access_codes: { name: 'Access Codes' },
          hardware: { name: 'Hardware' },
          locks: { name: 'Locks' },
          noise_sensors: { name: 'Noise Sensors' },
          phones: { name: 'Phones' },
          provider_metadata: { name: 'Provider Metadata' },
          thermostats: { name: 'Thermostats' },
        },
        'x-route-path': '/devices',
      },
      device_provider: {
        properties: {
          can_hvac_cool: { type: 'boolean' },
          can_hvac_heat: { type: 'boolean' },
          can_hvac_heat_cool: { type: 'boolean' },
          can_program_offline_access_codes: { type: 'boolean' },
          can_program_online_access_codes: { type: 'boolean' },
          can_remotely_lock: { type: 'boolean' },
          can_remotely_unlock: { type: 'boolean' },
          can_simulate_connection: { type: 'boolean' },
          can_simulate_disconnection: { type: 'boolean' },
          can_simulate_removal: { type: 'boolean' },
          can_turn_off_hvac: { type: 'boolean' },
          device_provider_name: {
            enum: [
              'dormakaba_community',
              'legic_connect',
              'akuvox',
              'august',
              'avigilon_alta',
              'brivo',
              'butterflymx',
              'schlage',
              'smartthings',
              'yale',
              'genie',
              'doorking',
              'salto',
              'salto_ks',
              'lockly',
              'ttlock',
              'linear',
              'noiseaware',
              'nuki',
              'seam_relay_admin',
              'igloo',
              'kwikset',
              'minut',
              'my_2n',
              'controlbyweb',
              'nest',
              'igloohome',
              'ecobee',
              'hubitat',
              'four_suites',
              'dormakaba_oracode',
              'pti',
              'wyze',
              'seam_passport',
              'visionline',
              'assa_abloy_credential_service',
              'seam_bridge',
              'tedee',
              'honeywell_resideo',
              'latch',
              'akiles',
              'assa_abloy_vostio',
              'assa_abloy_vostio_credential_service',
              'tado',
              'salto_space',
              'sensi',
              'kwikset2',
            ],
            type: 'string',
          },
          display_name: { type: 'string' },
          image_url: { type: 'string' },
          provider_categories: {
            items: {
              enum: [
                'stable',
                'consumer_smartlocks',
                'thermostats',
                'noise_sensors',
                'access_control_systems',
              ],
              type: 'string',
            },
            type: 'array',
          },
        },
        required: [
          'device_provider_name',
          'display_name',
          'image_url',
          'provider_categories',
        ],
        type: 'object',
        'x-route-path': '/devices',
      },
      enrollment_automation: {
        description:
          'Represents an [enrollment automation](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system) within the [Seam mobile access solution](https://docs.seam.co/latest/capability-guides/mobile-access-in-development).',
        properties: {
          created_at: {
            description:
              'Date and time at which the enrollment automation was created.',
            format: 'date-time',
            type: 'string',
          },
          credential_manager_acs_system_id: {
            description:
              'ID of the associated [ACS system](https://docs.seam.co/latest/capability-guides/access-systems) that serves as the credential manager.',
            format: 'uuid',
            type: 'string',
          },
          enrollment_automation_id: {
            description: 'ID of the enrollment automation.',
            format: 'uuid',
            type: 'string',
          },
          user_identity_id: {
            description:
              'ID of the associated [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the enrollment automation.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'enrollment_automation_id',
          'credential_manager_acs_system_id',
          'user_identity_id',
          'created_at',
          'workspace_id',
        ],
        type: 'object',
        'x-route-path': '/user_identities/enrollment_automations',
      },
      event: {
        description:
          "Represents an event. Events let you know when something interesting happens in your workspace. For example, when a lock is unlocked, Seam creates a `lock.unlocked` event. When a device's battery level is low, Seam creates a `device.battery_low` event.\n\nAs with other API resources, you can retrieve an individual event or a list of events. Seam also provides a separate [webhook](https://docs.seam.co/latest/developer-tools/webhooks) system for sending the event objects directly to an endpoint on your sever. Manage webhooks through [Seam Console](https://console.seam.co). You can also use the webhooks sandbox in Seam Console to see the different payloads for each event and test them against your own endpoints.",
        discriminator: { propertyName: 'event_type' },
        oneOf: [
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was created.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_code.created'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was changed.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_code.changed'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was [scheduled natively](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              code: {
                description: 'Code for the affected access code.',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.scheduled_on_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
              'code',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was set on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              code: {
                description: 'Code for the affected access code.',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.set_on_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
              'code',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was removed from a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.removed_from_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'There was an unusually long delay in setting an [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.delay_in_setting_on_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) failed to be set on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.failed_to_set_on_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was deleted.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              code: {
                description: 'Code for the affected access code.',
                nullable: true,
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_code.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
              'code',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'There was an unusually long delay in removing an [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) from a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.delay_in_removing_from_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) failed to be removed from a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.failed_to_remove_from_device'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was modified outside of Seam.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.modified_external_to_seam'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) was deleted outside of Seam.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.deleted_external_to_seam'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'A [backup access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes) was pulled from the backup access code pool and set on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              backup_access_code_id: { type: 'string' },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.backup_access_code_pulled'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
              'backup_access_code_id',
            ],
            type: 'object',
            'x-route-path': '/access_codes',
          },
          {
            description:
              'An [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) was converted successfully to a managed access code.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.unmanaged.converted_to_managed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes/unmanaged',
          },
          {
            description:
              'An [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) failed to be converted to a managed access code.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.unmanaged.failed_to_convert_to_managed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes/unmanaged',
          },
          {
            description:
              'An [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) was created on a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.unmanaged.created'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes/unmanaged',
          },
          {
            description:
              'An [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) was removed from a device.',
            properties: {
              access_code_id: {
                description: 'ID of the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description:
                  'ID of the device associated with the affected access code.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_code.unmanaged.removed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_code_id',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_codes/unmanaged',
          },
          {
            description: 'An access grant was created.',
            properties: {
              access_grant_id: {
                description: 'ID of the affected access grant.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_grant.created'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_grant_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_grants',
          },
          {
            description: 'An access grant was deleted.',
            properties: {
              access_grant_id: {
                description: 'ID of the affected access grant.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_grant.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_grant_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_grants',
          },
          {
            description:
              'All access requested for an access grant was successfully granted.',
            properties: {
              access_grant_id: {
                description: 'ID of the affected access grant.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_grant.access_granted_to_all_doors'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_grant_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_grants',
          },
          {
            description:
              'Access requested as part of an access grant to a particular door was successfully granted.',
            properties: {
              access_grant_id: {
                description: 'ID of the affected access grant.',
                format: 'uuid',
                type: 'string',
              },
              acs_entrance_id: {
                description:
                  'ID of the affected [entrance](https://docs.seam.co/latest/capability-guides/retrieving-entrance-details).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_grant.access_granted_to_door'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_grant_id',
              'event_type',
              'acs_entrance_id',
            ],
            type: 'object',
            'x-route-path': '/access_grants',
          },
          {
            description:
              'Access to a particular door that was requested as part of an access grant was lost.',
            properties: {
              access_grant_id: {
                description: 'ID of the affected access grant.',
                format: 'uuid',
                type: 'string',
              },
              acs_entrance_id: {
                description:
                  'ID of the affected [entrance](https://docs.seam.co/latest/capability-guides/retrieving-entrance-details).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_grant.access_to_door_lost'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_grant_id',
              'event_type',
              'acs_entrance_id',
            ],
            type: 'object',
            'x-route-path': '/access_grants',
          },
          {
            description: 'An access method was issued.',
            properties: {
              access_method_id: {
                description: 'ID of the affected access method.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_method.issued'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_method_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_methods',
          },
          {
            description: 'An access method was revoked.',
            properties: {
              access_method_id: {
                description: 'ID of the affected access method.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_method.revoked'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_method_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_methods',
          },
          {
            description:
              'An access method representing a physical card requires encoding.',
            properties: {
              access_method_id: {
                description: 'ID of the affected access method.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['access_method.card_encoding_required'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_method_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_methods',
          },
          {
            description: 'An access method was deleted.',
            properties: {
              access_method_id: {
                description: 'ID of the affected access method.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['access_method.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'access_method_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/access_methods',
          },
          {
            description:
              'An [access system](https://docs.seam.co/latest/capability-guides/access-systems) was connected.',
            properties: {
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_system.connected'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/systems',
          },
          {
            description:
              'An [access system](https://docs.seam.co/latest/capability-guides/access-systems) was added.',
            properties: {
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_system.added'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/systems',
          },
          {
            description:
              'An [access system](https://docs.seam.co/latest/capability-guides/access-systems) was disconnected.',
            properties: {
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_system.disconnected'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/systems',
          },
          {
            description:
              'An [access system credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was deleted.',
            properties: {
              acs_credential_id: {
                description: 'ID of the affected credential.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_credential.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_credential_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/credentials',
          },
          {
            description:
              'An [access system credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was issued.',
            properties: {
              acs_credential_id: {
                description: 'ID of the affected credential.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_credential.issued'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_credential_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/credentials',
          },
          {
            description:
              'An [access system credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was reissued.',
            properties: {
              acs_credential_id: {
                description: 'ID of the affected credential.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_credential.reissued'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_credential_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/credentials',
          },
          {
            description:
              'An [access system credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was invalidated. That is, the credential cannot be used anymore.',
            properties: {
              acs_credential_id: {
                description: 'ID of the affected credential.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['acs_credential.invalidated'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_credential_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/credentials',
          },
          {
            description:
              'An [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created.',
            properties: {
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              acs_user_id: { format: 'uuid', type: 'string' },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_user.created'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_user_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/users',
          },
          {
            description:
              'An [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was deleted.',
            properties: {
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              acs_user_id: { format: 'uuid', type: 'string' },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_user.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_user_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/users',
          },
          {
            description:
              'An [access system encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) was added.',
            properties: {
              acs_encoder_id: {
                description: 'ID of the affected encoder.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_encoder.added'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_encoder_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/encoders',
          },
          {
            description:
              'An [access system encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) was removed.',
            properties: {
              acs_encoder_id: {
                description: 'ID of the affected encoder.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_encoder.removed'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_encoder_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/encoders',
          },
          {
            description: 'An ACS access group was deleted.',
            properties: {
              acs_access_group_id: {
                description: 'ID of the affected access group.',
                format: 'uuid',
                type: 'string',
              },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['acs_access_group.deleted'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_access_group_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/access_groups',
          },
          {
            description:
              'An [access system entrance](https://docs.seam.co/latest/capability-guides/retrieving-entrance-details) was added.',
            properties: {
              acs_entrance_id: { format: 'uuid', type: 'string' },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_entrance.added'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_entrance_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/entrances',
          },
          {
            description:
              'An [access system entrance](https://docs.seam.co/latest/capability-guides/retrieving-entrance-details) was removed.',
            properties: {
              acs_entrance_id: { format: 'uuid', type: 'string' },
              acs_system_id: {
                description: 'ID of the access system.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description: 'ID of the connected account.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['acs_entrance.removed'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'acs_system_id',
              'acs_entrance_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/acs/entrances',
          },
          {
            description:
              'A [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) was deleted.',
            properties: {
              client_session_id: {
                description: 'ID of the affected client session.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['client_session.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'client_session_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/client_sessions',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) was connected for the first time or was reconnected after being disconnected.',
            properties: {
              connect_webview_id: {
                description:
                  'ID of the [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.connected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
              'connect_webview_id',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) was created.',
            properties: {
              connect_webview_id: {
                description:
                  'ID of the [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.created'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
              'connect_webview_id',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            deprecated: true,
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) had a successful login using a [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews).',
            properties: {
              connect_webview_id: {
                description:
                  'ID of the [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.successful_login'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
              'connect_webview_id',
            ],
            type: 'object',
            'x-deprecated': 'Use `connect_webview.login_succeeded`.',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) was disconnected.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.disconnected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) completed the first sync with Seam, and the corresponding devices or systems are now available.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.completed_first_sync'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) was deleted.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connected_account.deleted'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) completed the first sync after reconnection with Seam, and the corresponding devices or systems are now available.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the affected [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: [
                  'connected_account.completed_first_sync_after_reconnection',
                ],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/connected_accounts',
          },
          {
            description:
              'A lock door [action attempt](https://docs.seam.co/latest/core-concepts/action-attempts) succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the affected action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Type of the action.',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['action_attempt.lock_door.succeeded'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              status: { description: 'Status of the action.', type: 'string' },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'action_attempt_id',
              'action_type',
              'status',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/action_attempts',
          },
          {
            description:
              'A lock door [action attempt](https://docs.seam.co/latest/core-concepts/action-attempts) failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the affected action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Type of the action.',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['action_attempt.lock_door.failed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              status: { description: 'Status of the action.', type: 'string' },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'action_attempt_id',
              'action_type',
              'status',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/action_attempts',
          },
          {
            description:
              'An unlock door [action attempt](https://docs.seam.co/latest/core-concepts/action-attempts) succeeded.',
            properties: {
              action_attempt_id: {
                description: 'ID of the affected action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Type of the action.',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['action_attempt.unlock_door.succeeded'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              status: { description: 'Status of the action.', type: 'string' },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'action_attempt_id',
              'action_type',
              'status',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/action_attempts',
          },
          {
            description:
              'An unlock door [action attempt](https://docs.seam.co/latest/core-concepts/action-attempts) failed.',
            properties: {
              action_attempt_id: {
                description: 'ID of the affected action attempt.',
                format: 'uuid',
                type: 'string',
              },
              action_type: {
                description: 'Type of the action.',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['action_attempt.unlock_door.failed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              status: { description: 'Status of the action.', type: 'string' },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'action_attempt_id',
              'action_type',
              'status',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/action_attempts',
          },
          {
            description:
              'A [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews) login succeeded.',
            properties: {
              connect_webview_id: {
                description:
                  'ID of the affected [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews).',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connect_webview.login_succeeded'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connect_webview_id',
              'event_type',
              'connected_account_id',
            ],
            type: 'object',
            'x-route-path': '/connect_webviews',
          },
          {
            description:
              'A [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews) login failed.',
            properties: {
              connect_webview_id: {
                description:
                  'ID of the affected [Connect Webview](https://docs.seam.co/latest/ui-components/connect-webviews).',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['connect_webview.login_failed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'connect_webview_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/connect_webviews',
          },
          {
            description:
              'The status of a [device](https://docs.seam.co/latest/core-concepts/devices) changed from offline to online. That is, the `device.properties.online` property changed from `false` to `true`. Note that some devices operate entirely in offline mode, so Seam never emits a `device.connected` event for these devices.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.connected'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) was added to Seam or was re-added to Seam after having been removed.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.added'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A managed device was successfully converted to an [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.converted_to_unmanaged'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'An [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices) was successfully converted to a managed device.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.unmanaged.converted_to_managed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices/unmanaged',
          },
          {
            description:
              'The status of an [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices) changed from offline to online. That is, the `device.properties.online` property changed from `false` to `true`.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.unmanaged.connected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices/unmanaged',
          },
          {
            description:
              'The status of a [device](https://docs.seam.co/latest/core-concepts/devices) changed from online to offline. That is, the `device.properties.online` property changed from `true` to `false`.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              error_code: {
                description:
                  'Error code associated with the disconnection event, if any.',
                enum: [
                  'account_disconnected',
                  'hub_disconnected',
                  'device_disconnected',
                ],
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.disconnected'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'error_code',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'The status of an [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices) changed from online to offline. That is, the `device.properties.online` property changed from `true` to `false`.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              error_code: {
                description:
                  'Error code associated with the disconnection event, if any.',
                enum: [
                  'account_disconnected',
                  'hub_disconnected',
                  'device_disconnected',
                ],
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.unmanaged.disconnected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'error_code',
            ],
            type: 'object',
            'x-route-path': '/devices/unmanaged',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) detected that it was tampered with, for example, opened or moved.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.tampered'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) battery level dropped below the low threshold.',
            properties: {
              battery_level: {
                description:
                  'Number in the range 0 to 1.0 indicating the amount of battery in the affected device, as reported by the device.',
                format: 'float',
                maximum: 1,
                minimum: 0,
                type: 'number',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.low_battery'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'battery_level',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) battery status changed since the last `battery_status_changed` event.',
            properties: {
              battery_level: {
                description:
                  'Number in the range 0 to 1.0 indicating the amount of battery in the affected device, as reported by the device.',
                format: 'float',
                maximum: 1,
                minimum: 0,
                type: 'number',
              },
              battery_status: {
                description:
                  'Battery status of the affected device, calculated from the numeric `battery_level` value.',
                enum: ['critical', 'low', 'good', 'full'],
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.battery_status_changed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'battery_status',
              'battery_level',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) was removed externally from the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.removed'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [device](https://docs.seam.co/latest/core-concepts/devices) was deleted.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.deleted'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'Seam detected that a [device](https://docs.seam.co/latest/core-concepts/devices) is using a third-party integration that will interfere with Seam device management.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.third_party_integration_detected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'Seam detected that a [device](https://docs.seam.co/latest/core-concepts/devices) is no longer using a third-party integration that was interfering with Seam device management.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.third_party_integration_no_longer_detected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [Salto device](https://docs.seam.co/latest/device-and-system-integration-guides/salto-locks) activated privacy mode.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.salto.privacy_mode_activated'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A [Salto device](https://docs.seam.co/latest/device-and-system-integration-guides/salto-locks) deactivated privacy mode.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.salto.privacy_mode_deactivated'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'Seam detected a flaky [device](https://docs.seam.co/latest/core-concepts/devices) connection.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.connection_became_flaky'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'Seam detected that a previously-flaky [device](https://docs.seam.co/latest/core-concepts/devices) connection stabilized.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.connection_stabilized'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A third-party subscription is required to use all [device](https://docs.seam.co/latest/core-concepts/devices) features.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.error.subscription_required'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'A third-party subscription is active or no longer required to use all [device](https://docs.seam.co/latest/core-concepts/devices) features.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.error.subscription_required.resolved'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'An accessory keypad was connected to a [device](https://docs.seam.co/latest/core-concepts/devices).',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.accessory_keypad_connected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'An accessory keypad was disconnected from a [device](https://docs.seam.co/latest/core-concepts/devices).',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['device.accessory_keypad_disconnected'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'Extended periods of noise or noise exceeding a [threshold](https://docs.seam.co/latest/capability-guides/noise-sensors#what-is-a-threshold) were detected.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['noise_sensor.noise_threshold_triggered'],
                type: 'string',
              },
              minut_metadata: {
                additionalProperties: {},
                description: 'Metadata from Minut.',
                type: 'object',
              },
              noise_level_decibels: {
                description: 'Detected noise level in decibels.',
                format: 'float',
                type: 'number',
              },
              noise_level_nrs: {
                description:
                  'Detected noise level in Noiseaware Noise Risk Score (NRS).',
                format: 'float',
                type: 'number',
              },
              noise_threshold_id: {
                description: 'ID of the noise threshold that was triggered.',
                format: 'uuid',
                type: 'string',
              },
              noise_threshold_name: {
                description: 'Name of the noise threshold that was triggered.',
                type: 'string',
              },
              noiseaware_metadata: {
                additionalProperties: {},
                description: 'Metadata from Noiseaware.',
                type: 'object',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/noise_sensors/noise_thresholds',
          },
          {
            description:
              'A [lock](https://docs.seam.co/latest/capability-guides/smart-locks) was locked.',
            properties: {
              access_code_id: {
                description:
                  'ID of the access code that was used to lock the device.',
                format: 'uuid',
                type: 'string',
              },
              action_attempt_id: {
                description:
                  'ID of the action attempt associated with the lock action.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['lock.locked'], type: 'string' },
              method: {
                description:
                  'Method by which the affected lock device was locked. When the method is `keycode`, the `access_code_id` indicates the access code that was used, if reported by the device.',
                enum: ['keycode', 'manual', 'automatic', 'unknown', 'seamapi'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'method',
            ],
            type: 'object',
            'x-route-path': '/locks',
          },
          {
            description:
              'A [lock](https://docs.seam.co/latest/capability-guides/smart-locks) was unlocked.',
            properties: {
              access_code_id: {
                description:
                  'ID of the access code that was used to unlock the affected device.',
                format: 'uuid',
                type: 'string',
              },
              action_attempt_id: {
                description:
                  'ID of the action attempt associated with the unlock action.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['lock.unlocked'], type: 'string' },
              method: {
                description:
                  'Method by which the affected lock device was unlocked. When the method is `keycode`, the `access_code_id` indicates the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) that was used, if reported by the device.',
                enum: ['keycode', 'manual', 'automatic', 'unknown', 'seamapi'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'method',
            ],
            type: 'object',
            'x-route-path': '/locks',
          },
          {
            description:
              'The [lock](https://docs.seam.co/latest/capability-guides/smart-locks) denied access to a user after one or more consecutive invalid attempts to unlock the device.',
            properties: {
              access_code_id: {
                description:
                  'ID of the access code that was used in the unlock attempts.',
                format: 'uuid',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['lock.access_denied'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/locks',
          },
          {
            description:
              'A thermostat [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) was activated.',
            properties: {
              climate_preset_key: {
                description: 'Key of the climate preset that was activated.',
                type: 'string',
              },
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.climate_preset_activated'],
                type: 'string',
              },
              is_fallback_climate_preset: {
                description:
                  'Indicates whether the climate preset that was activated is the fallback climate preset for the thermostat.',
                type: 'boolean',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              thermostat_schedule_id: {
                description:
                  'ID of the thermostat schedule that prompted the affected climate preset to be activated.',
                format: 'uuid',
                nullable: true,
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'thermostat_schedule_id',
              'climate_preset_key',
              'is_fallback_climate_preset',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              'A [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) was adjusted manually.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              cooling_set_point_celsius: {
                description:
                  'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                format: 'float',
                type: 'number',
              },
              cooling_set_point_fahrenheit: {
                description:
                  'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                format: 'float',
                type: 'number',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.manually_adjusted'],
                type: 'string',
              },
              fan_mode_setting: {
                description:
                  'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                enum: ['auto', 'on', 'circulate'],
                type: 'string',
              },
              heating_set_point_celsius: {
                description:
                  'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                format: 'float',
                type: 'number',
              },
              heating_set_point_fahrenheit: {
                description:
                  'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                format: 'float',
                type: 'number',
              },
              hvac_mode_setting: {
                description:
                  'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                enum: ['off', 'heat', 'cool', 'heat_cool'],
                type: 'string',
              },
              method: {
                description:
                  'Method used to adjust the affected thermostat manually. `seam` indicates that the Seam API, Seam CLI, or Seam Console was used to adjust the thermostat.',
                enum: ['seam', 'external'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'method',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              "A [thermostat's](https://docs.seam.co/latest/capability-guides/thermostats) temperature reading exceeded the set [threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds).",
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.temperature_threshold_exceeded'],
                type: 'string',
              },
              lower_limit_celsius: {
                description:
                  'Lower temperature limit, in °C, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              lower_limit_fahrenheit: {
                description:
                  'Lower temperature limit, in °F, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              temperature_celsius: {
                description:
                  'Temperature, in °C, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              temperature_fahrenheit: {
                description:
                  'Temperature, in °F, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              upper_limit_celsius: {
                description:
                  'Upper temperature limit, in °C, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              upper_limit_fahrenheit: {
                description:
                  'Upper temperature limit, in °F, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'temperature_celsius',
              'temperature_fahrenheit',
              'upper_limit_celsius',
              'upper_limit_fahrenheit',
              'lower_limit_celsius',
              'lower_limit_fahrenheit',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              "A [thermostat's](https://docs.seam.co/latest/capability-guides/thermostats) temperature reading no longer exceeds the set [threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds).",
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.temperature_threshold_no_longer_exceeded'],
                type: 'string',
              },
              lower_limit_celsius: {
                description:
                  'Lower temperature limit, in °C, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              lower_limit_fahrenheit: {
                description:
                  'Lower temperature limit, in °F, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              temperature_celsius: {
                description:
                  'Temperature, in °C, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              temperature_fahrenheit: {
                description:
                  'Temperature, in °F, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              upper_limit_celsius: {
                description:
                  'Upper temperature limit, in °C, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              upper_limit_fahrenheit: {
                description:
                  'Upper temperature limit, in °F, defined by the set threshold.',
                format: 'float',
                nullable: true,
                type: 'number',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'temperature_celsius',
              'temperature_fahrenheit',
              'upper_limit_celsius',
              'upper_limit_fahrenheit',
              'lower_limit_celsius',
              'lower_limit_fahrenheit',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              "A [thermostat's](https://docs.seam.co/latest/capability-guides/thermostats) temperature reading is within 1 °C of the configured cooling or heating [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).",
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              desired_temperature_celsius: {
                description:
                  "Desired temperature, in °C, defined by the affected thermostat's cooling or heating set point.",
                format: 'float',
                type: 'number',
              },
              desired_temperature_fahrenheit: {
                description:
                  "Desired temperature, in °F, defined by the affected thermostat's cooling or heating set point.",
                format: 'float',
                type: 'number',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.temperature_reached_set_point'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              temperature_celsius: {
                description:
                  'Temperature, in °C, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              temperature_fahrenheit: {
                description:
                  'Temperature, in °F, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'temperature_celsius',
              'temperature_fahrenheit',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              "A [thermostat's](https://docs.seam.co/latest/capability-guides/thermostats) reported temperature changed by at least 1 °C.",
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['thermostat.temperature_changed'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              temperature_celsius: {
                description:
                  'Temperature, in °C, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              temperature_fahrenheit: {
                description:
                  'Temperature, in °F, reported by the affected thermostat.',
                format: 'float',
                type: 'number',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'temperature_celsius',
              'temperature_fahrenheit',
            ],
            type: 'object',
            'x-route-path': '/thermostats',
          },
          {
            description:
              'The name of a [device](https://docs.seam.co/latest/core-concepts/devices) was changed.',
            properties: {
              connected_account_id: {
                description:
                  'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected device.',
                format: 'uuid',
                type: 'string',
              },
              device_name: {
                description: 'The new name of the affected device.',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['device.name_changed'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'connected_account_id',
              'event_type',
              'device_name',
            ],
            type: 'object',
            'x-route-path': '/devices',
          },
          {
            description:
              'An [enrollment automation](https://docs.seam.co/latest/capability-guides/mobile-access/issuing-mobile-credentials-from-an-access-control-system#prepare-the-phones-for-a-user-identity-to-start-receiving-mobile-credentials-using-an-enrollment-aut) was deleted.',
            properties: {
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              enrollment_automation_id: {
                description: 'ID of the affected enrollment automation.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: {
                enum: ['enrollment_automation.deleted'],
                type: 'string',
              },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'enrollment_automation_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/user_identities/enrollment_automations',
          },
          {
            description: 'A phone device was deactivated.',
            properties: {
              created_at: {
                description: 'Date and time at which the event was created.',
                format: 'date-time',
                type: 'string',
              },
              device_id: {
                description: 'ID of the affected phone device.',
                format: 'uuid',
                type: 'string',
              },
              event_id: {
                description: 'ID of the event.',
                format: 'uuid',
                type: 'string',
              },
              event_type: { enum: ['phone.deactivated'], type: 'string' },
              occurred_at: {
                description: 'Date and time at which the event occurred.',
                format: 'date-time',
                type: 'string',
              },
              workspace_id: {
                description:
                  'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the event.',
                format: 'uuid',
                type: 'string',
              },
            },
            required: [
              'event_id',
              'workspace_id',
              'created_at',
              'occurred_at',
              'device_id',
              'event_type',
            ],
            type: 'object',
            'x-route-path': '/phones',
          },
        ],
        'x-route-path': '/events',
      },
      instant_key: {
        description:
          'Represents a Seam Instant Key. For issuing Bluetooth mobile keys, Instant Keys are the fastest way to share access. With a single API call, you can create a mobile key and send it through text or email or embed it in your own app.\n\nThere’s no app to install, nor account to create. Your user just taps a link and gets a lightweight, native-feeling experience using iOS App Clip or Instant Apps on Android. Further, Instant Keys work offline, so even in areas with poor cellular or Wi-Fi, like elevator banks or concrete-walled hallways, the Instant Keys still work.',
        properties: {
          client_session_id: {
            description:
              'ID of the [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) associated with the Instant Key.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the Instant Key was created.',
            format: 'date-time',
            type: 'string',
          },
          expires_at: {
            description: 'Date and time at which the Instant Key expires.',
            format: 'date-time',
            type: 'string',
          },
          instant_key_id: {
            description: 'ID of the Instant Key.',
            format: 'uuid',
            type: 'string',
          },
          instant_key_url: {
            description:
              'Shareable URL for the Instant Key. Use the URL to deliver the Instant Key to your user through a link in a text message or email or by embedding it in your web app.',
            format: 'uri',
            type: 'string',
          },
          user_identity_id: {
            description:
              'ID of the user identity associated with the Instant Key.',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the Instant Key.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'instant_key_id',
          'workspace_id',
          'created_at',
          'instant_key_url',
          'client_session_id',
          'user_identity_id',
          'expires_at',
        ],
        type: 'object',
        'x-route-path': '/user_identities',
        'x-undocumented': 'Unreleased.',
      },
      location: {
        properties: {
          created_at: {
            description:
              'Date and time at which the location object was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description: 'Display name of the location.',
            type: 'string',
          },
          geolocation: {
            description: 'Geographical location of the location.',
            properties: {
              latitude: { format: 'float', type: 'number' },
              longitude: { format: 'float', type: 'number' },
            },
            required: ['latitude', 'longitude'],
            type: 'object',
          },
          location_id: {
            description: 'Unique identifier for the location.',
            format: 'uuid',
            type: 'string',
          },
          name: { description: 'Name of the location.', type: 'string' },
          time_zone: {
            description: 'Time zone of the location.',
            type: 'string',
          },
          workspace_id: {
            description:
              'Unique identifier for the Seam workspace associated with the location.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'location_id',
          'workspace_id',
          'name',
          'display_name',
          'created_at',
        ],
        type: 'object',
        'x-route-path': '/unstable_locations',
        'x-undocumented': 'Will be removed.',
      },
      magic_link: {
        description:
          "Represents a Customer Portal. Customer Portal is a hosted, customizable interface for managing device access. It enables you to embed secure, pre-authenticated access flows into your product—either by sharing a link with users or embedding a view in an iframe.\n\nWith Customer Portal, you no longer need to build out frontend experiences for physical access, thermostats, and sensors. Instead, you can ship enterprise-grade access control experiences in a fraction of the time, while maintaining your product's branding and user experience.\n\nSeam hosts these flows, handling everything from account connection and device mapping to full-featured device control.",
        properties: {
          building_block_type: {
            description: 'Type of partner building block.',
            enum: [
              'connect_accounts',
              'manage_devices',
              'organize_spaces',
              'console',
            ],
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the magic link was created.',
            format: 'date-time',
            type: 'string',
          },
          customer_key: {
            description: 'Customer key for the magic link.',
            type: 'string',
          },
          expires_at: {
            description: 'Date and time at which the magic link expires.',
            format: 'date-time',
            type: 'string',
          },
          url: {
            description: 'URL for the magic link.',
            format: 'uri',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the magic link.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'url',
          'building_block_type',
          'customer_key',
          'expires_at',
          'workspace_id',
          'created_at',
        ],
        type: 'object',
        'x-route-path': '/unstable_partner/building_blocks',
        'x-undocumented': 'Unreleased.',
      },
      noise_threshold: {
        description:
          'Represents a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors). Thresholds represent the limits of noise tolerated at a property, which can be customized for each hour of the day. Each device has its own default thresholds, but you can use the Seam API to modify them.',
        properties: {
          device_id: {
            description:
              'Unique identifier for the device that contains the noise threshold.',
            format: 'uuid',
            type: 'string',
          },
          ends_daily_at: {
            description:
              'Time at which the noise threshold should become inactive daily.',
            type: 'string',
          },
          name: { description: 'Name of the noise threshold.', type: 'string' },
          noise_threshold_decibels: {
            description: 'Noise level in decibels for the noise threshold.',
            format: 'float',
            type: 'number',
          },
          noise_threshold_id: {
            description: 'Unique identifier for the noise threshold.',
            format: 'uuid',
            type: 'string',
          },
          noise_threshold_nrs: {
            description:
              'Noise level in Noiseaware Noise Risk Score (NRS) for the noise threshold. This parameter is only relevant for [Noiseaware sensors](https://docs.seam.co/latest/device-and-system-integration-guides/noiseaware-sensors).',
            format: 'float',
            type: 'number',
          },
          starts_daily_at: {
            description:
              'Time at which the noise threshold should become active daily.',
            type: 'string',
          },
        },
        required: [
          'noise_threshold_id',
          'device_id',
          'name',
          'starts_daily_at',
          'ends_daily_at',
          'noise_threshold_decibels',
        ],
        type: 'object',
        'x-route-path': '/noise_sensors/noise_thresholds',
      },
      pagination: {
        description: 'Information about the current page of results.',
        properties: {
          has_next_page: {
            description:
              'Indicates whether there is another page of results after this one.',
            type: 'boolean',
          },
          next_page_cursor: {
            description:
              'Opaque value that can be used to select the next page of results via the `page_cursor` parameter.',
            nullable: true,
            type: 'string',
          },
          next_page_url: {
            description: 'URL to get the next page of results.',
            format: 'uri',
            nullable: true,
            type: 'string',
          },
        },
        required: ['next_page_cursor', 'has_next_page', 'next_page_url'],
        type: 'object',
      },
      partner_resource: {
        description:
          'Represents a partner resource that enables you to send your user identity and access grant resources to Seam.',
        properties: {
          custom_metadata: {
            additionalProperties: { type: 'string' },
            description:
              'Custom metadata associated with the partner resource.',
            type: 'object',
          },
          customer_key: {
            description: 'Customer key associated with the partner resource.',
            type: 'string',
          },
          description: {
            description: 'Description of the partner resource.',
            type: 'string',
          },
          email_address: {
            description:
              'Email address associated with the user identity partner resource.',
            type: 'string',
          },
          ends_at: {
            description:
              'Ending date and time associated with the access grant partner resource.',
            type: 'string',
          },
          location_keys: {
            description:
              'Location keys associated with the access grant partner resource.',
            items: { type: 'string' },
            type: 'array',
          },
          name: {
            description: 'Name of the partner resource.',
            type: 'string',
          },
          partner_resource_key: {
            description: 'Key of the partner resource.',
            type: 'string',
          },
          partner_resource_type: {
            description: 'Type of the partner resource.',
            type: 'string',
          },
          phone_number: {
            description:
              'Phone number associated with the user identity partner resource.',
            type: 'string',
          },
          starts_at: {
            description:
              'Starting date and time associated with the access grant partner resource.',
            type: 'string',
          },
          user_identity_key: {
            description:
              'User identity key associated with the access grant partner resource.',
            type: 'string',
          },
        },
        required: [
          'partner_resource_type',
          'partner_resource_key',
          'customer_key',
        ],
        type: 'object',
        'x-route-path': '/unstable_partner/resources',
        'x-undocumented': 'Unreleased.',
      },
      phone: {
        description: "Represents an app user's mobile phone.",
        properties: {
          created_at: {
            description: 'Date and time at which the phone was created.\n  ',
            format: 'date-time',
            type: 'string',
          },
          custom_metadata: {
            additionalProperties: {
              oneOf: [{ type: 'string' }, { type: 'boolean' }],
            },
            description:
              'Optional [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) for the phone.\n  ',
            type: 'object',
          },
          device_id: {
            description: 'ID of the phone.\n          ',
            format: 'uuid',
            type: 'string',
          },
          device_type: {
            description: 'Device type for phones.\n          ',
            enum: ['ios_phone', 'android_phone'],
            type: 'string',
          },
          display_name: {
            description:
              'Display name of the phone. Defaults to `nickname` (if it is set) or `properties.appearance.name`, otherwise. Enables administrators and users to identify the phone easily, especially when there are numerous phones.\n  ',
            type: 'string',
          },
          errors: {
            description: 'Errors associated with the phone.',
            items: {
              properties: {
                error_code: { type: 'string' },
                message: { type: 'string' },
              },
              required: ['error_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          nickname: {
            description:
              'Optional nickname to describe the phone, settable through Seam.\n  ',
            type: 'string',
          },
          properties: {
            description: '\n          Properties of the phone.\n          ',
            properties: {
              assa_abloy_credential_service_metadata: {
                description:
                  'ASSA ABLOY Credential Service metadata for the phone.',
                properties: {
                  endpoints: {
                    description: 'Endpoints associated with the phone.',
                    items: {
                      properties: {
                        endpoint_id: {
                          description: 'ID of the associated endpoint.',
                          type: 'string',
                        },
                        is_active: {
                          description:
                            'Indicated whether the endpoint is active.',
                          type: 'boolean',
                        },
                      },
                      required: ['endpoint_id', 'is_active'],
                      type: 'object',
                    },
                    type: 'array',
                  },
                  has_active_endpoint: {
                    description:
                      'Indicates whether the credential service has active endpoints associated with the phone.',
                    type: 'boolean',
                  },
                },
                required: ['has_active_endpoint', 'endpoints'],
                type: 'object',
              },
              salto_space_credential_service_metadata: {
                description:
                  'Salto Space credential service metadata for the phone.',
                properties: {
                  has_active_phone: {
                    description:
                      'Indicates whether the credential service has an active associated phone.',
                    type: 'boolean',
                  },
                },
                required: ['has_active_phone'],
                type: 'object',
              },
            },
            type: 'object',
          },
          warnings: {
            description: 'Warnings associated with the phone.',
            items: {
              properties: {
                message: { type: 'string' },
                warning_code: { type: 'string' },
              },
              required: ['warning_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the phone.\n  ',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'device_id',
          'display_name',
          'workspace_id',
          'created_at',
          'custom_metadata',
          'errors',
          'warnings',
          'device_type',
          'properties',
        ],
        type: 'object',
        'x-property-groups': { phones: { name: 'Phones' } },
        'x-route-path': '/phones',
      },
      phone_registration: {
        description: 'Represents a mobile phone registration.',
        properties: {
          is_being_activated: {
            description: 'Indicates whether the phone is being activated.',
            type: 'boolean',
          },
          phone_registration_id: {
            description: 'Registration ID for the phone.',
            type: 'string',
          },
          provider_name: {
            description: 'Provider name for the phone.',
            nullable: true,
            type: 'string',
          },
          provider_state: { description: 'Provider state for the phone.' },
        },
        required: [
          'phone_registration_id',
          'provider_name',
          'is_being_activated',
        ],
        type: 'object',
        'x-route-path': '/seam/mobile_sdk/v1/phone_sessions',
        'x-undocumented': 'Seam Mobile SDK only.',
      },
      phone_session: {
        description: 'Represents a mobile phone session.',
        properties: {
          provider_sessions: {
            description: 'Phone provider sessions.',
            items: {
              description: 'Phone provider session.',
              properties: {
                acs_credentials: {
                  description:
                    'Access system credentials associated with the phone provider session.',
                  items: {
                    description:
                      'Means by which an [access control system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `acs_credential` object represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nAn access control system generally uses digital means of access to authorize a user trying to get through a specific entrance. Examples of credentials include plastic key cards, mobile keys, biometric identifiers, and PIN codes. The electronic nature of these credentials, as well as the fact that access is centralized, enables both the rapid provisioning and rescinding of access and the ability to compile access audit logs.\n\nFor each `acs_credential`, you define the access method. You can also specify additional properties, such as a PIN code, depending on the credential type.',
                    properties: {
                      access_method: {
                        description:
                          'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
                        enum: ['code', 'card', 'mobile_key'],
                        type: 'string',
                      },
                      acs_credential_id: { nullable: true, type: 'string' },
                      acs_credential_pool_id: {
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_entrances: {
                        items: {
                          description:
                            'Represents an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nIn an access control system, an entrance is a secured door, gate, zone, or other method of entry. You can list details for all the `acs_entrance` resources in your workspace or get these details for a specific `acs_entrance`. You can also list all entrances associated with a specific credential, and you can list all credentials associated with a specific entrance.',
                          properties: {
                            acs_entrance_id: {
                              description:
                                'ID of the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              format: 'uuid',
                              type: 'string',
                            },
                            acs_system_id: {
                              description:
                                'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              format: 'uuid',
                              type: 'string',
                            },
                            assa_abloy_vostio_metadata: {
                              description:
                                'ASSA ABLOY Vostio-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                door_name: {
                                  description:
                                    'Name of the door in the Vostio access system.',
                                  type: 'string',
                                },
                                door_number: {
                                  description:
                                    'Number of the door in the Vostio access system.',
                                  format: 'float',
                                  type: 'number',
                                },
                                door_type: {
                                  description:
                                    'Type of the door in the Vostio access system.',
                                  enum: [
                                    'CommonDoor',
                                    'EntranceDoor',
                                    'GuestDoor',
                                    'Elevator',
                                  ],
                                  type: 'string',
                                },
                                pms_id: {
                                  description:
                                    'PMS ID of the door in the Vostio access system.',
                                  type: 'string',
                                },
                                stand_open: {
                                  description:
                                    'Indicates whether keys are allowed to set the door in stand open mode in the Vostio access system.',
                                  type: 'boolean',
                                },
                              },
                              required: ['door_type', 'door_name'],
                              type: 'object',
                            },
                            connected_account_id: {
                              description:
                                'ID of the [connected account](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              format: 'uuid',
                              type: 'string',
                            },
                            created_at: {
                              description:
                                'Date and time at which the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) was created.',
                              format: 'date-time',
                              type: 'string',
                            },
                            display_name: {
                              description:
                                'Display name for the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              type: 'string',
                            },
                            dormakaba_community_metadata: {
                              description:
                                'dormakaba Community-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                access_point_name: {
                                  description:
                                    'Name of the access point in the dormakaba Community access system.',
                                  type: 'string',
                                },
                              },
                              required: ['access_point_name'],
                              type: 'object',
                            },
                            errors: {
                              description:
                                'Errors associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              items: {
                                properties: {
                                  error_code: {
                                    description:
                                      'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                                    type: 'string',
                                  },
                                  message: {
                                    description:
                                      'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                                    type: 'string',
                                  },
                                },
                                required: ['error_code', 'message'],
                                type: 'object',
                              },
                              type: 'array',
                            },
                            latch_metadata: {
                              description:
                                'Latch-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                accessibility_type: {
                                  description:
                                    'Accessibility type in the Latch access system.',
                                  type: 'string',
                                },
                                door_name: {
                                  description:
                                    'Name of the door in the Latch access system.',
                                  type: 'string',
                                },
                                door_type: {
                                  description:
                                    'Type of the door in the Latch access system.',
                                  type: 'string',
                                },
                                is_connected: {
                                  description:
                                    'Indicates whether the entrance is connected.',
                                  type: 'boolean',
                                },
                              },
                              required: [
                                'accessibility_type',
                                'door_name',
                                'door_type',
                                'is_connected',
                              ],
                              type: 'object',
                            },
                            salto_ks_metadata: {
                              description:
                                'Salto KS-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                battery_level: {
                                  description:
                                    'Battery level of the door access device.',
                                  type: 'string',
                                },
                                door_name: {
                                  description:
                                    'Name of the door in the Salto KS access system.',
                                  type: 'string',
                                },
                                intrusion_alarm: {
                                  description:
                                    'Indicates whether an intrusion alarm is active on the door.',
                                  type: 'boolean',
                                },
                                left_open_alarm: {
                                  description:
                                    'Indicates whether the door is left open.',
                                  type: 'boolean',
                                },
                                lock_type: {
                                  description:
                                    'Type of the lock in the Salto KS access system.',
                                  type: 'string',
                                },
                                locked_state: {
                                  description:
                                    'Locked state of the door in the Salto KS access system.',
                                  type: 'string',
                                },
                                online: {
                                  description:
                                    'Indicates whether the door access device is online.',
                                  type: 'boolean',
                                },
                                privacy_mode: {
                                  description:
                                    'Indicates whether privacy mode is enabled for the lock.',
                                  type: 'boolean',
                                },
                              },
                              required: [
                                'door_name',
                                'locked_state',
                                'lock_type',
                                'battery_level',
                              ],
                              type: 'object',
                            },
                            salto_space_metadata: {
                              description:
                                'Salto Space-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                door_description: {
                                  description:
                                    'Description of the door in the Salto Space access system.',
                                  type: 'string',
                                },
                                door_name: {
                                  description:
                                    'Name of the door in the Salto Space access system.',
                                  type: 'string',
                                },
                                ext_door_id: {
                                  description:
                                    'External door ID in the Salto Space access system.',
                                  type: 'string',
                                },
                              },
                              required: ['door_name', 'ext_door_id'],
                              type: 'object',
                            },
                            visionline_metadata: {
                              description:
                                'Visionline-specific metadata associated with the [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
                              properties: {
                                door_category: {
                                  description:
                                    'Category of the door in the Visionline access system.',
                                  enum: [
                                    'entrance',
                                    'guest',
                                    'elevator reader',
                                    'common',
                                    'common (PMS)',
                                  ],
                                  type: 'string',
                                },
                                door_name: {
                                  description:
                                    'Name of the door in the Visionline access system.',
                                  type: 'string',
                                },
                                profiles: {
                                  description:
                                    'Profile for the door in the Visionline access system.',
                                  items: {
                                    properties: {
                                      visionline_door_profile_id: {
                                        description:
                                          'Door profile ID in the Visionline access system.',
                                        type: 'string',
                                      },
                                      visionline_door_profile_type: {
                                        description:
                                          'Door profile type in the Visionline access system.',
                                        enum: ['BLE', 'commonDoor', 'touch'],
                                        type: 'string',
                                      },
                                    },
                                    required: [
                                      'visionline_door_profile_id',
                                      'visionline_door_profile_type',
                                    ],
                                    type: 'object',
                                  },
                                  type: 'array',
                                },
                              },
                              required: ['door_name', 'door_category'],
                              type: 'object',
                            },
                          },
                          required: [
                            'acs_system_id',
                            'acs_entrance_id',
                            'created_at',
                            'display_name',
                            'connected_account_id',
                            'errors',
                          ],
                          type: 'object',
                          'x-route-path': '/acs/entrances',
                        },
                        type: 'array',
                      },
                      acs_system_id: {
                        description:
                          'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_user_id: {
                        description:
                          'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
                        format: 'uuid',
                        type: 'string',
                      },
                      assa_abloy_vostio_metadata: {
                        description:
                          'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          door_names: {
                            description:
                              'Names of the doors to which to grant access in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                          endpoint_id: {
                            description:
                              'Endpoint ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_id: {
                            description: 'Key ID in the Vostio access system.',
                            type: 'string',
                          },
                          key_issuing_request_id: {
                            description:
                              'Key issuing request ID in the Vostio access system.',
                            type: 'string',
                          },
                          override_guest_acs_entrance_ids: {
                            description:
                              'IDs of the guest entrances to override in the Vostio access system.',
                            items: { type: 'string' },
                            type: 'array',
                          },
                        },
                        type: 'object',
                      },
                      card_number: {
                        description:
                          'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      code: {
                        description:
                          'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        nullable: true,
                        type: 'string',
                      },
                      created_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
                        format: 'date-time',
                        type: 'string',
                      },
                      display_name: {
                        description:
                          'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        minLength: 1,
                        type: 'string',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                        type: 'string',
                      },
                      errors: {
                        description:
                          'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          properties: {
                            error_code: { type: 'string' },
                            message: { type: 'string' },
                          },
                          required: ['error_code', 'message'],
                          type: 'object',
                        },
                        type: 'array',
                      },
                      external_type: {
                        description:
                          'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
                        enum: [
                          'pti_card',
                          'brivo_credential',
                          'hid_credential',
                          'visionline_card',
                          'salto_ks_credential',
                          'assa_abloy_vostio_key',
                          'salto_space_key',
                          'latch_access',
                        ],
                        type: 'string',
                      },
                      external_type_display_name: {
                        description:
                          'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
                        type: 'string',
                      },
                      is_issued: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
                        type: 'boolean',
                      },
                      is_latest_desired_state_synced_with_provider: {
                        description:
                          'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
                        nullable: true,
                        type: 'boolean',
                      },
                      is_managed: { enum: [true], type: 'boolean' },
                      is_multi_phone_sync_credential: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                        type: 'boolean',
                      },
                      is_one_time_use: {
                        description:
                          'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
                        type: 'boolean',
                      },
                      issued_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      latest_desired_state_synced_with_provider_at: {
                        description:
                          'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      parent_acs_credential_id: {
                        description:
                          'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                        type: 'string',
                      },
                      visionline_metadata: {
                        description:
                          'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        properties: {
                          auto_join: {
                            description:
                              'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                            type: 'boolean',
                          },
                          card_function_type: {
                            description:
                              'Card function type in the Visionline access system.',
                            enum: ['guest', 'staff'],
                            type: 'string',
                          },
                          card_id: {
                            description:
                              'ID of the card in the Visionline access system.',
                            type: 'string',
                          },
                          common_acs_entrance_ids: {
                            description:
                              'Common entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          credential_id: {
                            description:
                              'ID of the credential in the Visionline access system.',
                            type: 'string',
                          },
                          guest_acs_entrance_ids: {
                            description:
                              'Guest entrance IDs in the Visionline access system.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                          is_valid: {
                            description:
                              'Indicates whether the credential is valid.',
                            type: 'boolean',
                          },
                          joiner_acs_credential_ids: {
                            description:
                              'IDs of the credentials to which you want to join.',
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                          },
                        },
                        required: ['card_function_type'],
                        type: 'object',
                      },
                      warnings: {
                        description:
                          'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        items: {
                          description:
                            'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                          discriminator: { propertyName: 'warning_code' },
                          oneOf: [
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['waiting_to_be_issued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_externally_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['schedule_modified'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['being_deleted'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['unknown_issue_with_acs_credential'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                            {
                              description:
                                'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                              properties: {
                                created_at: {
                                  description:
                                    'Date and time at which Seam created the warning.',
                                  format: 'date-time',
                                  type: 'string',
                                },
                                message: {
                                  description:
                                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                                  type: 'string',
                                },
                                warning_code: {
                                  description:
                                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                                  enum: ['needs_to_be_reissued'],
                                  type: 'string',
                                },
                              },
                              required: [
                                'created_at',
                                'message',
                                'warning_code',
                              ],
                              type: 'object',
                            },
                          ],
                        },
                        type: 'array',
                      },
                      workspace_id: {
                        description:
                          'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: [
                      'acs_system_id',
                      'display_name',
                      'access_method',
                      'created_at',
                      'workspace_id',
                      'errors',
                      'warnings',
                      'is_managed',
                      'acs_credential_id',
                      'acs_entrances',
                    ],
                    type: 'object',
                    'x-route-path': '/acs/credentials',
                  },
                  type: 'array',
                },
                phone_registration: {
                  description: 'Represents a mobile phone registration.',
                  properties: {
                    is_being_activated: {
                      description:
                        'Indicates whether the phone is being activated.',
                      type: 'boolean',
                    },
                    phone_registration_id: {
                      description: 'Registration ID for the phone.',
                      type: 'string',
                    },
                    provider_name: {
                      description: 'Provider name for the phone.',
                      nullable: true,
                      type: 'string',
                    },
                    provider_state: {
                      description: 'Provider state for the phone.',
                    },
                  },
                  required: [
                    'phone_registration_id',
                    'provider_name',
                    'is_being_activated',
                  ],
                  type: 'object',
                  'x-route-path': '/seam/mobile_sdk/v1/phone_sessions',
                  'x-undocumented': 'Seam Mobile SDK only.',
                },
              },
              required: ['phone_registration', 'acs_credentials'],
              type: 'object',
            },
            type: 'array',
          },
        },
        required: ['provider_sessions'],
        type: 'object',
        'x-route-path': '/seam/mobile_sdk/v1/phone_sessions',
        'x-undocumented': 'Seam Mobile SDK only.',
      },
      space: {
        description:
          'Represents a space that is a logical grouping of devices and entrances. You can assign access to an entire space, thereby making granting access more efficient.',
        properties: {
          created_at: {
            description: 'Date and time at which the space was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description: 'Display name for the space.',
            type: 'string',
          },
          name: { description: 'Name of the space.', type: 'string' },
          space_id: {
            description: 'ID of the space.',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the space.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'space_id',
          'workspace_id',
          'name',
          'display_name',
          'created_at',
        ],
        type: 'object',
        'x-draft': 'Early access.',
        'x-route-path': '/spaces',
      },
      thermostat_daily_program: {
        description:
          'Represents a thermostat daily program, consisting of a set of periods, each of which has a starting time and the key that identifies the climate preset to apply at the starting time.',
        properties: {
          created_at: {
            description:
              'Date and time at which the thermostat daily program was created.',
            format: 'date-time',
            type: 'string',
          },
          device_id: {
            description:
              'ID of the thermostat device on which the thermostat daily program is configured.',
            format: 'uuid',
            type: 'string',
          },
          name: {
            description:
              'User-friendly name to identify the thermostat daily program.',
            nullable: true,
            type: 'string',
          },
          periods: {
            description: 'Array of thermostat daily program periods.',
            items: {
              description:
                'Period for a thermostat daily program. Consists of a starts at time and the key that identifies the configured climate preset to apply at the starting time.',
              properties: {
                climate_preset_key: {
                  description:
                    'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to activate at the `starts_at_time`.',
                  type: 'string',
                },
                starts_at_time: {
                  description:
                    'Time at which the thermostat daily program period starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                  pattern: '^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$',
                  type: 'string',
                },
              },
              required: ['starts_at_time', 'climate_preset_key'],
              type: 'object',
            },
            type: 'array',
          },
          thermostat_daily_program_id: {
            description: 'ID of the thermostat daily program.',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the thermostat daily program.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'thermostat_daily_program_id',
          'device_id',
          'name',
          'periods',
          'workspace_id',
          'created_at',
        ],
        type: 'object',
        'x-route-path': '/thermostats/daily_programs',
      },
      thermostat_schedule: {
        description:
          'Represents a [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) that activates a configured [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) on a [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) at a specified starting time and deactivates the climate preset at a specified ending time.',
        properties: {
          climate_preset_key: {
            description:
              'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to use for the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) was created.',
            format: 'date-time',
            type: 'string',
          },
          device_id: {
            description:
              'ID of the desired [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) device.',
            format: 'uuid',
            type: 'string',
          },
          ends_at: {
            description:
              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
            format: 'date-time',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
            items: {
              properties: {
                error_code: {
                  description:
                    'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
              },
              required: ['error_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          is_override_allowed: {
            description:
              "Indicates whether a person at the thermostat can change the thermostat's settings after the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) starts.",
            type: 'boolean',
          },
          max_override_period_minutes: {
            description:
              "Number of minutes for which a person at the thermostat can change the thermostat's settings after the activation of the scheduled [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets). See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
            exclusiveMinimum: true,
            minimum: 0,
            nullable: true,
            type: 'integer',
          },
          name: {
            description:
              'User-friendly name to identify the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
            nullable: true,
            type: 'string',
          },
          starts_at: {
            description:
              'Date and time at which the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
            format: 'date-time',
            type: 'string',
          },
          thermostat_schedule_id: {
            description:
              'ID of the [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
            format: 'uuid',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the thermostat schedule.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'thermostat_schedule_id',
          'device_id',
          'name',
          'climate_preset_key',
          'starts_at',
          'ends_at',
          'workspace_id',
          'created_at',
          'errors',
        ],
        type: 'object',
        'x-route-path': '/thermostats/schedules',
      },
      unmanaged_access_code: {
        description:
          'Represents an [unmanaged smart lock access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).\n\nAn access code is a code used for a keypad or pinpad device. Unlike physical keys, which can easily be lost or duplicated, PIN codes can be customized, tracked, and altered on the fly.\n\nWhen you create an access code on a device in Seam, it is created as a managed access code. Access codes that exist on a device that were not created through Seam are considered unmanaged codes. We strictly limit the operations that can be performed on unmanaged codes.\n\nPrior to using Seam to manage your devices, you may have used another lock management system to manage the access codes on your devices. Where possible, we help you keep any existing access codes on devices and transition those codes to ones managed by your Seam workspace.\n\nNot all providers support unmanaged access codes. The following providers do not support unmanaged access codes:\n\n- [Kwikset](https://docs.seam.co/latest/device-and-system-integration-guides/kwikset-locks)',
        properties: {
          access_code_id: {
            description: 'Unique identifier for the access code.',
            format: 'uuid',
            type: 'string',
          },
          code: {
            description:
              'Code used for access. Typically, a numeric or alphanumeric string.',
            nullable: true,
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the access code was created.',
            format: 'date-time',
            type: 'string',
          },
          device_id: {
            description:
              'Unique identifier for the device associated with the access code.',
            format: 'uuid',
            type: 'string',
          },
          ends_at: {
            description:
              'Date and time after which the time-bound access code becomes inactive.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
            items: {
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description: 'Failed to set code on SmartThings device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_failed_to_set_access_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to set code after multiple retries.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: [
                        'smartthings_failed_to_set_after_multiple_retries',
                      ],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No free slots available on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_no_free_slots_available'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to set code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['failed_to_set_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Failed to remove code from device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['failed_to_remove_from_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code detected on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['duplicate_code_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'An attempt to modify this access code was prevented.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['duplicate_code_attempt_prevented'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No space for access code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['no_space_for_access_code_on_device'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Igloohome bridge has too many pending jobs in the queue.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['igloohome_bridge_too_many_pending_jobs'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Igloohome bridge is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['igloohome_bridge_offline'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Lock has reached maximum amount of codes.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: [
                        'igloohome_offline_access_code_no_variance_available',
                      ],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm that the access code is set on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm the deletion of the access code on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_deletion'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Code was modified or removed externally after Seam successfully set it on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['code_modified_external_to_seam'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Invalid code length for August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_invalid_code_length'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_programming_delay'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'All access code slots on the device are full.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_slots_full'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is missing a keypad.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_keypad'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is temporarily offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_temporarily_offline'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Salto site user is not subscribed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_user_not_subscribed'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hubitat_device_programming_delay'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No free positions available on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hubitat_no_free_positions_available'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code name detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_duplicate_code_name'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Potential duplicate access code detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_potential_duplicate_code'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'No valid user level for Oracode.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['dormakaba_oracode_no_valid_user_level'],
                      type: 'string',
                    },
                    is_access_code_error: {
                      description:
                        'Indicates that this is an access code error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['message', 'is_access_code_error', 'error_code'],
                  type: 'object',
                },
                {
                  description: 'Indicates that the account is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto site user limit has been reached.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_offline'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device has been removed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_removed'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the hub is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hub_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [backup access code pool](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes) is empty.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['empty_backup_access_code_pool'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the user is not authorized to use the August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_not_authorized'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not connected to a bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not paired with a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_not_paired_to_gateway'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that device credentials are missing.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['missing_device_credentials'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the auxiliary heat is running.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['auxiliary_heat_running'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a subscription is required to connect.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['subscription_required'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Lockly lock is not connected to a Wi-Fi bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_missing_wifi_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the credentials provided were invalid.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['invalid_credentials'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if the Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline. See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          is_managed: {
            description: 'Indicates that Seam does not manage the access code.',
            enum: [false],
            type: 'boolean',
          },
          name: {
            description:
              "Name of the access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
            nullable: true,
            type: 'string',
          },
          starts_at: {
            description:
              'Date and time at which the time-bound access code becomes active.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          status: {
            description:
              'Current status of the access code within the operational lifecycle. `set` indicates that the code is active and operational.',
            enum: ['set'],
            type: 'string',
          },
          type: {
            description:
              'Type of the access code. `ongoing` access codes are active continuously until deactivated manually. `time_bound` access codes have a specific duration.',
            enum: ['time_bound', 'ongoing'],
            type: 'string',
          },
          warnings: {
            description:
              'Warnings associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
            items: {
              description:
                'Warnings associated with the [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description: 'Failed to set code on SmartThings device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['smartthings_failed_to_set_access_code'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Duplicate access code detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schlage_detected_duplicate'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Received an error when attempting to create this code.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schlage_creation_outage'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Code was modified or removed externally after Seam successfully set it on the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['code_modified_external_to_seam'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Delay in setting code on device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['delay_in_setting_on_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Delay in removing code from device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['delay_in_removing_from_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Third-party integration detected that may cause access codes to fail.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['third_party_integration_detected'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access code has not yet been fully moved to the device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['august_device_programming_delay'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'August lock is temporarily offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_temporarily_offline'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Algopins must be used within 24 hours.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['igloo_algopin_must_be_used_within_24_hours'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Management was transferred to another workspace.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['management_transferred'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Unable to confirm that the access code is set on Kwikset device.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['kwikset_unable_to_confirm_code'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
        },
        required: [
          'type',
          'access_code_id',
          'device_id',
          'name',
          'code',
          'created_at',
          'errors',
          'warnings',
          'is_managed',
          'status',
        ],
        type: 'object',
        'x-route-path': '/access_codes/unmanaged',
      },
      unmanaged_acs_access_group: {
        properties: {
          access_group_type: {
            deprecated: true,
            enum: [
              'pti_unit',
              'pti_access_level',
              'salto_ks_access_group',
              'brivo_group',
              'salto_space_group',
              'dormakaba_community_access_group',
            ],
            type: 'string',
            'x-deprecated': 'Use `external_type`.',
          },
          access_group_type_display_name: {
            deprecated: true,
            type: 'string',
            'x-deprecated': 'Use `external_type_display_name`.',
          },
          acs_access_group_id: {
            description: 'ID of the access group.',
            format: 'uuid',
            type: 'string',
          },
          acs_system_id: {
            description:
              'ID of the access control system that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              'ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description: 'Date and time at which the access group was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: { type: 'string' },
          external_type: {
            description:
              'Brand-specific terminology for the access group type.',
            enum: [
              'pti_unit',
              'pti_access_level',
              'salto_ks_access_group',
              'brivo_group',
              'salto_space_group',
              'dormakaba_community_access_group',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the access group type.',
            type: 'string',
          },
          is_managed: { enum: [false], type: 'boolean' },
          name: { description: 'Name of the access group.', type: 'string' },
          warnings: {
            description: 'Warnings associated with the `acs_access_group`.',
            items: {
              description: 'Warning associated with the `acs_access_group`.',
              properties: {
                created_at: {
                  description:
                    'Date and time at which Seam created the warning.',
                  format: 'date-time',
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
                warning_code: {
                  description:
                    'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                  enum: ['unknown_issue_with_acs_access_group'],
                  type: 'string',
                },
              },
              required: ['created_at', 'message', 'warning_code'],
              type: 'object',
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the access group.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_access_group_id',
          'acs_system_id',
          'workspace_id',
          'connected_account_id',
          'name',
          'access_group_type',
          'access_group_type_display_name',
          'display_name',
          'external_type',
          'external_type_display_name',
          'created_at',
          'warnings',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/access_groups/unmanaged',
        'x-undocumented': 'Unreleased.',
      },
      unmanaged_acs_credential: {
        description:
          'Means by which an [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) gains access at an [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details). The `unmanaged_acs_credential` object, which is not managed by Seam, represents a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) that provides an ACS user access within an [access control system](https://docs.seam.co/latest/capability-guides/access-systems). For each `acs_credential` object, you define the access method. You can also specify additional properties, such as a PIN code.',
        properties: {
          access_method: {
            description:
              'Access method for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials). Supported values: `code`, `card`, `mobile_key`.',
            enum: ['code', 'card', 'mobile_key'],
            type: 'string',
          },
          acs_credential_id: {
            description:
              'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          acs_credential_pool_id: { format: 'uuid', type: 'string' },
          acs_system_id: {
            description:
              'ID of the [access control system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          acs_user_id: {
            description:
              'ID of the [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to whom the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) belongs.',
            format: 'uuid',
            type: 'string',
          },
          assa_abloy_vostio_metadata: {
            description:
              'Vostio-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            properties: {
              auto_join: {
                description:
                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                type: 'boolean',
              },
              door_names: {
                description:
                  'Names of the doors to which to grant access in the Vostio access system.',
                items: { type: 'string' },
                type: 'array',
              },
              endpoint_id: {
                description: 'Endpoint ID in the Vostio access system.',
                type: 'string',
              },
              key_id: {
                description: 'Key ID in the Vostio access system.',
                type: 'string',
              },
              key_issuing_request_id: {
                description:
                  'Key issuing request ID in the Vostio access system.',
                type: 'string',
              },
              override_guest_acs_entrance_ids: {
                description:
                  'IDs of the guest entrances to override in the Vostio access system.',
                items: { type: 'string' },
                type: 'array',
              },
            },
            type: 'object',
          },
          card_number: {
            description:
              'Number of the card associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            nullable: true,
            type: 'string',
          },
          code: {
            description:
              'Access (PIN) code for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            nullable: true,
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name that corresponds to the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
            minLength: 1,
            type: 'string',
          },
          ends_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            items: {
              properties: {
                error_code: { type: 'string' },
                message: { type: 'string' },
              },
              required: ['error_code', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          external_type: {
            description:
              'Brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type. Supported values: `pti_card`, `brivo_credential`, `hid_credential`, `visionline_card`.',
            enum: [
              'pti_card',
              'brivo_credential',
              'hid_credential',
              'visionline_card',
              'salto_ks_credential',
              'assa_abloy_vostio_key',
              'salto_space_key',
              'latch_access',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) type.',
            type: 'string',
          },
          is_issued: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been encoded onto a card.',
            type: 'boolean',
          },
          is_latest_desired_state_synced_with_provider: {
            description:
              'Indicates whether the latest state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) has been synced from Seam to the provider.',
            nullable: true,
            type: 'boolean',
          },
          is_managed: { enum: [false], type: 'boolean' },
          is_multi_phone_sync_credential: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
            type: 'boolean',
          },
          is_one_time_use: {
            description:
              'Indicates whether the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) can only be used once. If `true`, the code becomes invalid after the first use.',
            type: 'boolean',
          },
          issued_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was encoded onto a card.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          latest_desired_state_synced_with_provider_at: {
            description:
              'Date and time at which the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was most recently synced from Seam to the provider.',
            format: 'date-time',
            nullable: true,
            type: 'string',
          },
          parent_acs_credential_id: {
            description:
              'ID of the parent [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
          starts_at: {
            description:
              'Date and time at which the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) validity starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
            type: 'string',
          },
          visionline_metadata: {
            description:
              'Visionline-specific metadata for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            properties: {
              auto_join: {
                description:
                  'Indicates whether the credential should auto-join. For an auto-join credential, Seam automatically issues an override card if there are no other cards and a joiner card if there are existing cards on the doors.',
                type: 'boolean',
              },
              card_function_type: {
                description:
                  'Card function type in the Visionline access system.',
                enum: ['guest', 'staff'],
                type: 'string',
              },
              card_id: {
                description: 'ID of the card in the Visionline access system.',
                type: 'string',
              },
              common_acs_entrance_ids: {
                description:
                  'Common entrance IDs in the Visionline access system.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
              credential_id: {
                description:
                  'ID of the credential in the Visionline access system.',
                type: 'string',
              },
              guest_acs_entrance_ids: {
                description:
                  'Guest entrance IDs in the Visionline access system.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
              is_valid: {
                description: 'Indicates whether the credential is valid.',
                type: 'boolean',
              },
              joiner_acs_credential_ids: {
                description:
                  'IDs of the credentials to which you want to join.',
                items: { format: 'uuid', type: 'string' },
                type: 'array',
              },
            },
            required: ['card_function_type'],
            type: 'object',
          },
          warnings: {
            description:
              'Warnings associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            items: {
              description:
                'Warning associated with the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is waiting to be issued.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['waiting_to_be_issued'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    "Indicates that the schedule of one of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials)'s children was modified externally.",
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schedule_externally_modified'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the schedule of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) was modified to avoid creating a credential with a start date in the past.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['schedule_modified'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) is being deleted.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['being_deleted'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'An unknown issue occurred while syncing the state of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with the provider. This issue may affect the proper functioning of the credential.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['unknown_issue_with_acs_credential'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Access permissions for the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) have changed. [Reissue](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners/creating-and-encoding-card-based-credentials) (re-encode) the credential. This issue may affect the proper functioning of the credential.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['needs_to_be_reissued'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_credential_id',
          'acs_system_id',
          'display_name',
          'access_method',
          'created_at',
          'workspace_id',
          'errors',
          'warnings',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/credentials/unmanaged',
        'x-undocumented': 'Unreleased.',
      },
      unmanaged_acs_user: {
        description:
          'Represents an unmanaged [user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in an [access system](https://docs.seam.co/latest/capability-guides/access-systems).',
        properties: {
          access_schedule: {
            description:
              "`starts_at` and `ends_at` timestamps for the [access system user's](https://docs.seam.co/latest/capability-guides/access-systems/user-management) access.",
            properties: {
              ends_at: {
                description:
                  "Date and time at which the user's access ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
                format: 'date-time',
                nullable: true,
                type: 'string',
              },
              starts_at: {
                description:
                  "Date and time at which the user's access starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.",
                format: 'date-time',
                type: 'string',
              },
            },
            required: ['starts_at', 'ends_at'],
            type: 'object',
          },
          acs_system_id: {
            description:
              'ID of the [access system](https://docs.seam.co/latest/capability-guides/access-systems) that contains the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
          acs_user_id: {
            description:
              'ID of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
          connected_account_id: {
            description:
              '\n      The ID of the [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) that is associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).\n    ',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: {
            description:
              'Display name for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            type: 'string',
          },
          email: {
            deprecated: true,
            format: 'email',
            type: 'string',
            'x-deprecated': 'use email_address.',
          },
          email_address: {
            description:
              'Email address of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'email',
            type: 'string',
          },
          errors: {
            description:
              'Errors associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            items: {
              description:
                'Errors associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was deleted from the [access system](https://docs.seam.co/latest/capability-guides/access-systems) outside of Seam.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['deleted_externally'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) could not be subscribed on Salto KS because the subscription limit has been exceeded.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not created on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_create_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not updated on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_update_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was not deleted on the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is likely due to an internal unexpected error. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['failed_to_delete_on_acs_system'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created from the Seam API but also exists on Mission Control. This is unsupported. Contact Seam [support](mailto:support@seam.co).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      enum: ['latch_conflict_with_resident_user'],
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          external_type: {
            description:
              'Brand-specific terminology for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) type.',
            enum: [
              'pti_user',
              'brivo_user',
              'hid_credential_manager_user',
              'salto_site_user',
              'latch_user',
              'dormakaba_community_user',
              'salto_space_user',
            ],
            type: 'string',
          },
          external_type_display_name: {
            description:
              'Display name that corresponds to the brand-specific terminology for the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) type.',
            type: 'string',
          },
          full_name: {
            description:
              'Full name of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            minLength: 1,
            type: 'string',
          },
          hid_acs_system_id: { format: 'uuid', type: 'string' },
          is_managed: { enum: [false], type: 'boolean' },
          is_suspended: {
            description:
              'Indicates whether the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is currently [suspended](https://docs.seam.co/latest/capability-guides/access-systems/user-management/suspending-and-unsuspending-users).',
            type: 'boolean',
          },
          last_successful_sync_at: {
            description:
              'The last time an internal sync job completed for this access system user.',
            format: 'date-time',
            nullable: true,
            type: 'string',
            'x-undocumented': 'Only used internally.',
          },
          pending_mutations: {
            description:
              'Pending mutations associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management). Seam is in the process of pushing these mutations to the integrated access system.',
            items: {
              discriminator: { propertyName: 'mutation_code' },
              oneOf: [
                {
                  description:
                    'Seam is in the process of pushing a user creation to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing a user creation to the integrated access system.',
                      enum: ['creating'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'mutation_code'],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing a user deletion to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing a user deletion to the integrated access system.',
                      enum: ['deleting'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'mutation_code'],
                  type: 'object',
                },
                {
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access system user information.',
                      properties: {
                        email_address: {
                          description:
                            'Email address of the access system user.',
                          format: 'email',
                          nullable: true,
                          type: 'string',
                        },
                        full_name: {
                          description: 'Full name of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                        phone_number: {
                          description:
                            'Phone number of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated user information to the integrated access system.',
                      enum: ['updating_user_information'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access system user information.',
                      properties: {
                        email_address: {
                          description:
                            'Email address of the access system user.',
                          format: 'email',
                          nullable: true,
                          type: 'string',
                        },
                        full_name: {
                          description: 'Full name of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                        phone_number: {
                          description:
                            'Phone number of the access system user.',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing an access schedule update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access schedule information.',
                      properties: {
                        ends_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                        starts_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['starts_at', 'ends_at'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated access schedule information to the integrated access system.',
                      enum: ['updating_access_schedule'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access schedule information.',
                      properties: {
                        ends_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                        starts_at: {
                          description: 'Starting time for the access schedule.',
                          format: 'date-time',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['starts_at', 'ends_at'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing a suspension state update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old user suspension state information.',
                      properties: { is_suspended: { type: 'boolean' } },
                      required: ['is_suspended'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated user suspension state information to the integrated access system.',
                      enum: ['updating_suspension_state'],
                      type: 'string',
                    },
                    to: {
                      description: 'New user suspension state information.',
                      properties: { is_suspended: { type: 'boolean' } },
                      required: ['is_suspended'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Seam is in the process of pushing an access group membership update to the integrated access system.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which the mutation was created.',
                      format: 'date-time',
                      type: 'string',
                    },
                    from: {
                      description: 'Old access group membership.',
                      properties: {
                        acs_access_group_id: {
                          description: 'Old access group ID.',
                          format: 'uuid',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['acs_access_group_id'],
                      type: 'object',
                    },
                    message: {
                      description: 'Detailed description of the mutation.',
                      type: 'string',
                    },
                    mutation_code: {
                      description:
                        'Mutation code to indicate that Seam is in the process of pushing updated access group membership information to the integrated access system.',
                      enum: ['updating_group_membership'],
                      type: 'string',
                    },
                    to: {
                      description: 'New access group membership.',
                      properties: {
                        acs_access_group_id: {
                          description: 'New access group ID.',
                          format: 'uuid',
                          nullable: true,
                          type: 'string',
                        },
                      },
                      required: ['acs_access_group_id'],
                      type: 'object',
                    },
                  },
                  required: [
                    'created_at',
                    'message',
                    'mutation_code',
                    'from',
                    'to',
                  ],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          phone_number: {
            description:
              'Phone number of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
            type: 'string',
          },
          user_identity_email_address: {
            description:
              'Email address of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            nullable: true,
            type: 'string',
          },
          user_identity_full_name: {
            description:
              'Full name of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            nullable: true,
            type: 'string',
          },
          user_identity_id: {
            description:
              'ID of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            type: 'string',
          },
          user_identity_phone_number: {
            description:
              'Phone number of the user identity associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
            nullable: true,
            type: 'string',
          },
          warnings: {
            description:
              'Warnings associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            items: {
              description:
                'Warnings associated with the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is being deleted from the [access system](https://docs.seam.co/latest/capability-guides/access-systems). This is a temporary state, and the access system user will be deleted shortly.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: { enum: ['being_deleted'], type: 'string' },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) is not subscribed on Salto KS, so they cannot unlock doors or perform any actions. This occurs when the their access schedule hasn’t started yet, if their access schedule has ended, if the site has reached its limit for active users (subscription slots), or if they have been manually unsubscribed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['salto_ks_user_not_subscribed'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'An unknown issue occurred while syncing the state of this [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) with the provider. This issue may affect the proper functioning of this user.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['unknown_issue_with_acs_user'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) was created on Latch Mission Control. Please use the Latch Mission Control to manage this user.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      enum: ['latch_resident_user'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'acs_user_id',
          'acs_system_id',
          'workspace_id',
          'created_at',
          'display_name',
          'warnings',
          'errors',
          'last_successful_sync_at',
          'connected_account_id',
          'is_managed',
        ],
        type: 'object',
        'x-route-path': '/acs/users/unmanaged',
        'x-undocumented': 'Unreleased.',
      },
      unmanaged_device: {
        description:
          'Represents an [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices). An unmanaged device has a limited set of visible properties and a subset of supported events. You cannot control an unmanaged device. Any [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) on an unmanaged device are unmanaged. To control an unmanaged device with Seam, [convert it to a managed device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices#convert-an-unmanaged-device-to-managed).',
        properties: {
          can_hvac_cool: { type: 'boolean' },
          can_hvac_heat: { type: 'boolean' },
          can_hvac_heat_cool: { type: 'boolean' },
          can_program_offline_access_codes: { type: 'boolean' },
          can_program_online_access_codes: { type: 'boolean' },
          can_remotely_lock: { type: 'boolean' },
          can_remotely_unlock: { type: 'boolean' },
          can_simulate_connection: { type: 'boolean' },
          can_simulate_disconnection: { type: 'boolean' },
          can_simulate_removal: { type: 'boolean' },
          can_turn_off_hvac: { type: 'boolean' },
          capabilities_supported: {
            description:
              '\n        Collection of capabilities that the device supports when connected to Seam. Values are `access_code`, which indicates that the device can manage and utilize digital PIN codes for secure access; `lock`, which indicates that the device controls a door locking mechanism, enabling the remote opening and closing of doors and other entry points; `noise_detection`, which indicates that the device supports monitoring and responding to ambient noise levels; `thermostat`, which indicates that the device can regulate and adjust indoor temperatures; `battery`, which indicates that the device can manage battery life and health; and `phone`, which indicates that the device is a mobile device, such as a smartphone. **Important:** Superseded by [capability flags](https://docs.seam.co/latest/capability-guides/device-and-system-capabilities#capability-flags).\n        ',
            items: {
              description:
                '\n        Collection of capabilities that the device supports when connected to Seam. **Important:** Superseded by [capability flags](https://docs.seam.co/latest/capability-guides/device-and-system-capabilities#capability-flags).\n        ',
              enum: [
                'access_code',
                'lock',
                'noise_detection',
                'thermostat',
                'battery',
                'phone',
              ],
              type: 'string',
            },
            type: 'array',
          },
          connected_account_id: {
            description:
              'Unique identifier for the account associated with the device.',
            format: 'uuid',
            type: 'string',
          },
          created_at: {
            description:
              'Date and time at which the device object was created.',
            format: 'date-time',
            type: 'string',
          },
          device_id: {
            description: 'ID of the device.',
            format: 'uuid',
            type: 'string',
          },
          device_type: {
            description: 'Type of the device.',
            oneOf: [
              {
                description: 'Device type for smartlocks.\n          ',
                enum: [
                  'akuvox_lock',
                  'august_lock',
                  'brivo_access_point',
                  'butterflymx_panel',
                  'avigilon_alta_entry',
                  'doorking_lock',
                  'genie_door',
                  'igloo_lock',
                  'linear_lock',
                  'lockly_lock',
                  'kwikset_lock',
                  'nuki_lock',
                  'salto_lock',
                  'schlage_lock',
                  'seam_relay',
                  'smartthings_lock',
                  'wyze_lock',
                  'yale_lock',
                  'two_n_intercom',
                  'controlbyweb_device',
                  'ttlock_lock',
                  'igloohome_lock',
                  'hubitat_lock',
                  'four_suites_door',
                  'dormakaba_oracode_door',
                  'tedee_lock',
                  'akiles_lock',
                ],
                type: 'string',
              },
              {
                description: 'Device type for noise sensors.\n          ',
                enum: ['noiseaware_activity_zone', 'minut_sensor'],
                type: 'string',
              },
              {
                description: 'Device type for thermostats.\n          ',
                enum: [
                  'ecobee_thermostat',
                  'nest_thermostat',
                  'honeywell_resideo_thermostat',
                  'tado_thermostat',
                  'sensi_thermostat',
                  'smartthings_thermostat',
                ],
                type: 'string',
              },
              {
                description: 'Device type for phones.\n          ',
                enum: ['ios_phone', 'android_phone'],
                type: 'string',
              },
            ],
          },
          errors: {
            description:
              'Array of errors associated with the device. Each error object within the array contains two fields: `error_code` and `message`. `error_code` is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. `message` provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.',
            items: {
              discriminator: { propertyName: 'error_code' },
              oneOf: [
                {
                  description: 'Indicates that the account is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['account_disconnected'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto site user limit has been reached.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_exceeded'],
                      type: 'string',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates that the error is a [connected account](https://docs.seam.co/latest/api/connected_accounts) error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is not a device error.',
                      enum: [false],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                    'is_connected_account_error',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is offline.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_offline'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device has been removed.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_removed'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the hub is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['hub_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the device is disconnected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['device_disconnected'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the [backup access code pool](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes) is empty.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['empty_backup_access_code_pool'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the user is not authorized to use the August lock.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_not_authorized'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not connected to a bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['august_lock_missing_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the lock is not paired with a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_not_paired_to_gateway'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that device credentials are missing.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['missing_device_credentials'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description: 'Indicates that the auxiliary heat is running.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['auxiliary_heat_running'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a subscription is required to connect.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['subscription_required'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Lockly lock is not connected to a Wi-Fi bridge.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_missing_wifi_bridge'],
                      type: 'string',
                    },
                    is_device_error: {
                      description:
                        'Indicates that the error is a device error.',
                      enum: [true],
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: [
                    'message',
                    'is_device_error',
                    'created_at',
                    'error_code',
                  ],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the credentials provided were invalid.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['invalid_credentials'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Seam API cannot communicate with [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge), for example, if the Seam Bridge executable has stopped or if the computer running the Seam Bridge executable is offline. See also [Troubleshooting Your Access Control System](https://docs.seam.co/latest/capability-guides/access-systems/troubleshooting-your-access-control-system#acs_system.errors.seam_bridge_disconnected).',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the error.',
                      format: 'date-time',
                      type: 'string',
                    },
                    error_code: {
                      description:
                        'Unique identifier of the type of error. Enables quick recognition and categorization of the issue.',
                      enum: ['bridge_disconnected'],
                      type: 'string',
                    },
                    is_bridge_error: {
                      description:
                        'Indicates whether the error is related to [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      type: 'boolean',
                    },
                    is_connected_account_error: {
                      description:
                        'Indicates whether the error is related specifically to the connected account.',
                      type: 'boolean',
                    },
                    message: {
                      description:
                        'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'error_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          is_managed: { enum: [false], type: 'boolean' },
          location: {
            description: 'Location information for the device.',
            nullable: true,
            properties: {
              location_name: {
                description: 'Name of the device location.\n          ',
                type: 'string',
              },
              timezone: {
                description: 'Time zone of the device location.\n          ',
                type: 'string',
              },
            },
            type: 'object',
            'x-property-group-key': 'hardware',
          },
          properties: {
            description: 'properties of the device.',
            properties: {
              accessory_keypad: {
                description: 'Accessory keypad properties and state.',
                properties: {
                  battery: {
                    description: 'Keypad battery properties.\n          ',
                    properties: {
                      level: {
                        format: 'float',
                        maximum: 1,
                        minimum: 0,
                        type: 'number',
                      },
                    },
                    required: ['level'],
                    type: 'object',
                  },
                  is_connected: {
                    description:
                      'Indicates if an accessory keypad is connected to the device.\n        ',
                    type: 'boolean',
                  },
                },
                required: ['is_connected'],
                type: 'object',
                'x-property-group-key': 'hardware',
              },
              battery: {
                description:
                  'Represents the current status of the battery charge level.',
                properties: {
                  level: {
                    description:
                      'Battery charge level as a value between 0 and 1, inclusive.\n          ',
                    format: 'float',
                    maximum: 1,
                    minimum: 0,
                    type: 'number',
                  },
                  status: {
                    description:
                      'Represents the current status of the battery charge level. Values are `critical`, which indicates an extremely low level, suggesting imminent shutdown or an urgent need for charging; `low`, which signifies that the battery is under the preferred threshold and should be charged soon; `good`, which denotes a satisfactory charge level, adequate for normal use without the immediate need for recharging; and `full`, which represents a battery that is fully charged, providing the maximum duration of usage.\n          ',
                    enum: ['critical', 'low', 'good', 'full'],
                    type: 'string',
                  },
                },
                required: ['level', 'status'],
                type: 'object',
                'x-property-group-key': 'hardware',
              },
              battery_level: {
                description:
                  'Indicates the battery level of the device as a decimal value between 0 and 1, inclusive.',
                format: 'float',
                maximum: 1,
                minimum: 0,
                type: 'number',
                'x-property-group-key': 'hardware',
              },
              image_alt_text: {
                description: 'Alt text for the device image.',
                type: 'string',
                'x-property-group-key': 'hardware',
              },
              image_url: {
                description: 'Image URL for the device.',
                format: 'uri',
                type: 'string',
                'x-property-group-key': 'hardware',
              },
              manufacturer: {
                description:
                  'Manufacturer of the device. When a device, such as a smart lock, is connected through a smart hub, the manufacturer of the device might be different from that of the smart hub.',
                type: 'string',
                'x-property-group-key': 'hardware',
              },
              model: {
                description: 'Device model-related properties.',
                properties: {
                  accessory_keypad_supported: {
                    deprecated: true,
                    type: 'boolean',
                    'x-deprecated':
                      'use device.properties.model.can_connect_accessory_keypad',
                  },
                  can_connect_accessory_keypad: {
                    description:
                      '\n          Indicates whether the device can connect a accessory keypad.\n      ',
                    type: 'boolean',
                  },
                  display_name: {
                    description:
                      '\n          Display name of the device model.\n      ',
                    type: 'string',
                  },
                  has_built_in_keypad: {
                    description:
                      '\n          Indicates whether the device has a built in accessory keypad.\n      ',
                    type: 'boolean',
                  },
                  manufacturer_display_name: {
                    description:
                      '\n          Display name that corresponds to the manufacturer-specific terminology for the device.\n      ',
                    type: 'string',
                  },
                  offline_access_codes_supported: {
                    deprecated: true,
                    type: 'boolean',
                    'x-deprecated':
                      'use device.can_program_offline_access_codes.',
                  },
                  online_access_codes_supported: {
                    deprecated: true,
                    type: 'boolean',
                    'x-deprecated':
                      'use device.can_program_online_access_codes.',
                  },
                },
                required: ['display_name', 'manufacturer_display_name'],
                type: 'object',
              },
              name: {
                deprecated: true,
                description: 'Name of the device.',
                type: 'string',
                'x-deprecated': 'use device.display_name instead',
              },
              offline_access_codes_enabled: {
                description:
                  'Indicates whether it is currently possible to use offline access codes for the device.',
                type: 'boolean',
                'x-property-group-key': 'access_codes',
              },
              online: {
                description: 'Indicates whether the device is online.',
                type: 'boolean',
              },
              online_access_codes_enabled: {
                description:
                  'Indicates whether it is currently possible to use online access codes for the device.',
                type: 'boolean',
                'x-property-group-key': 'access_codes',
              },
            },
            required: ['name', 'online', 'model'],
            type: 'object',
            'x-property-groups': {
              access_codes: { name: 'access codes' },
              hardware: { name: 'hardware' },
              locks: { name: 'locks' },
              noise_sensors: { name: 'noise sensors' },
              phones: { name: 'phones' },
              provider_metadata: { name: 'provider metadata' },
              thermostats: { name: 'thermostats' },
            },
          },
          warnings: {
            description:
              'Array of warnings associated with the device. Each warning object within the array contains two fields: `warning_code` and `message`. `warning_code` is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. `message` provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.',
            items: {
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the backup access code is unhealthy.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['partial_backup_access_code_pool'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that there are too many backup codes.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['many_active_backup_codes'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Wyze Lock is not connected to a gateway.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['wyze_device_missing_gateway'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device is offline but has some functionality available.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['functional_offline_device'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a third-party integration has been detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['third_party_integration_detected'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Nest thermostat is in manual eco mode.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['nest_thermostat_in_manual_eco_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Remote Unlock feature is not enabled in the settings.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_lock_gateway_unlocking_not_enabled'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description: 'Indicates that the gateway signal is weak.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['ttlock_weak_gateway_signal'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the temperature threshold has been exceeded.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['temperature_threshold_exceeded'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device appears to be unresponsive.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['device_communication_degraded'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that a scheduled maintenance window has been detected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['scheduled_maintenance_window'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the device has a flaky connection.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['device_has_flaky_connection'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS lock is in Office Mode. Access Codes will not unlock doors.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_office_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS lock is in Privacy Mode. Access Codes will not unlock doors.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_privacy_mode'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that the Salto KS site has exceeded 80% of the maximum number of allowed users. Increase your subscription limit or delete some users from your site.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['salto_ks_subscription_limit_almost_reached'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that an unknown issue occurred while syncing the state of the phone with the provider. This issue may affect the proper functioning of the phone.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['unknown_issue_with_phone'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
                {
                  description:
                    'Indicates that Seam detected that the Lockly device does not have a time zone configured. Time-bound codes may not work as expected.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['lockly_time_zone_not_configured'],
                      type: 'string',
                    },
                  },
                  required: ['message', 'created_at', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'Unique identifier for the Seam workspace associated with the device.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'device_id',
          'device_type',
          'connected_account_id',
          'location',
          'capabilities_supported',
          'workspace_id',
          'errors',
          'warnings',
          'created_at',
          'is_managed',
          'properties',
        ],
        type: 'object',
        'x-property-groups': {
          access_codes: { name: 'Access Codes' },
          hardware: { name: 'Hardware' },
          locks: { name: 'Locks' },
          noise_sensors: { name: 'Noise Sensors' },
          phones: { name: 'Phones' },
          provider_metadata: { name: 'Provider Metadata' },
          thermostats: { name: 'Thermostats' },
        },
        'x-route-path': '/devices/unmanaged',
      },
      user_identity: {
        description:
          'Represents a [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) associated with an application user account.',
        properties: {
          created_at: {
            description:
              'Date and time at which the user identity was created.',
            format: 'date-time',
            type: 'string',
          },
          display_name: { minLength: 1, type: 'string' },
          email_address: {
            description: 'Unique email address for the user identity.',
            format: 'email',
            nullable: true,
            type: 'string',
          },
          errors: {
            description:
              'Array of errors associated with the user identity. Each error object within the array contains two fields: "error_code" and "message." "error_code" is a string that uniquely identifies the type of error, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the error, offering insights into the issue and potentially how to rectify it.',
            items: {
              properties: {
                created_at: {
                  description: 'Date and time at which Seam created the error.',
                  format: 'date-time',
                  type: 'string',
                },
                message: {
                  description:
                    'Detailed description of the error. Provides insights into the issue and potentially how to rectify it.',
                  type: 'string',
                },
              },
              required: ['created_at', 'message'],
              type: 'object',
            },
            type: 'array',
          },
          full_name: { minLength: 1, nullable: true, type: 'string' },
          phone_number: {
            description:
              'Unique phone number for the user identity in [E.164 format](https://www.itu.int/rec/T-REC-E.164/en) (for example, +15555550100).',
            nullable: true,
            type: 'string',
          },
          user_identity_id: {
            description: 'ID of the user identity.',
            format: 'uuid',
            type: 'string',
          },
          user_identity_key: {
            description: 'Unique key for the user identity.',
            minLength: 1,
            nullable: true,
            type: 'string',
          },
          warnings: {
            description:
              'Array of warnings associated with the user identity. Each warning object within the array contains two fields: "warning_code" and "message." "warning_code" is a string that uniquely identifies the type of warning, enabling quick recognition and categorization of the issue. "message" provides a more detailed description of the warning, offering insights into the issue and potentially how to rectify it.',
            items: {
              description: 'Warnings associated with the user identity.',
              discriminator: { propertyName: 'warning_code' },
              oneOf: [
                {
                  description:
                    'Indicates that the user identity is currently being deleted.',
                  properties: {
                    created_at: {
                      description:
                        'Date and time at which Seam created the warning.',
                      format: 'date-time',
                      type: 'string',
                    },
                    message: {
                      description:
                        'Detailed description of the warning. Provides insights into the issue and potentially how to rectify it.',
                      type: 'string',
                    },
                    warning_code: {
                      description:
                        'Unique identifier of the type of warning. Enables quick recognition and categorization of the issue.',
                      enum: ['being_deleted'],
                      type: 'string',
                    },
                  },
                  required: ['created_at', 'message', 'warning_code'],
                  type: 'object',
                },
              ],
            },
            type: 'array',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains the user identity.',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'user_identity_id',
          'user_identity_key',
          'email_address',
          'phone_number',
          'display_name',
          'full_name',
          'created_at',
          'workspace_id',
          'errors',
          'warnings',
        ],
        type: 'object',
        'x-route-path': '/user_identities',
      },
      webhook: {
        description:
          'Represents a [webhook](https://docs.seam.co/latest/developer-tools/webhooks) that enables you to receive notifications of events. When you create a webhook, specify the endpoint URL at which you want to receive events and the set of event types that you want to receive.',
        properties: {
          event_types: {
            description:
              'Types of events that the [webhook](https://docs.seam.co/latest/developer-tools/webhooks) should receive.',
            items: { type: 'string' },
            type: 'array',
          },
          secret: {
            description:
              'Secret associated with the [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
            type: 'string',
          },
          url: {
            description:
              'URL for the [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
            type: 'string',
          },
          webhook_id: {
            description:
              'ID of the [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
            type: 'string',
          },
        },
        required: ['webhook_id', 'url'],
        type: 'object',
        'x-route-path': '/webhooks',
      },
      workspace: {
        description:
          'Represents a Seam [workspace](https://docs.seam.co/latest/core-concepts/workspaces). A workspace is a top-level entity that encompasses all other resources below it, such as devices, connected accounts, and Connect Webviews. Seam provides two types of workspaces. A [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces) is a special type of workspace designed for testing code. Sandbox workspaces offer test device accounts and virtual devices that you can connect and control. This ability to work with virtual devices is quite handy because it removes the need to own physical devices from multiple brands. To connect real devices and systems to Seam, use a [production workspace](https://docs.seam.co/latest/core-concepts/workspaces#production-workspaces).',
        properties: {
          company_name: {
            description:
              'Company name associated with the [workspace](https://docs.seam.co/latest/core-concepts/workspaces).',
            type: 'string',
          },
          connect_partner_name: {
            deprecated: true,
            nullable: true,
            type: 'string',
            'x-deprecated': 'Use `company_name` instead.',
          },
          connect_webview_customization: {
            properties: {
              inviter_logo_url: {
                description:
                  'URL of the inviter logo for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                type: 'string',
              },
              logo_shape: {
                description:
                  'Logo shape for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                enum: ['circle', 'square'],
                type: 'string',
              },
              primary_button_color: {
                description:
                  'Primary button color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                type: 'string',
              },
              primary_button_text_color: {
                description:
                  'Primary button text color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                type: 'string',
              },
              success_message: {
                description:
                  'Success message for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                type: 'string',
              },
            },
            type: 'object',
          },
          is_sandbox: {
            description:
              'Indicates whether the workspace is a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
            type: 'boolean',
          },
          is_suspended: {
            description:
              'Indicates whether the [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces) is suspended. Seam suspends sandbox workspaces that have not been accessed in 14 days.',
            type: 'boolean',
          },
          name: {
            description:
              'Name of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces).',
            type: 'string',
          },
          workspace_id: {
            description:
              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces).',
            format: 'uuid',
            type: 'string',
          },
        },
        required: [
          'workspace_id',
          'name',
          'company_name',
          'is_sandbox',
          'connect_webview_customization',
          'is_suspended',
          'connect_partner_name',
        ],
        type: 'object',
        'x-route-path': '/workspaces',
      },
    },
    securitySchemes: {
      access_token: {
        bearerFormat: 'API Token',
        scheme: 'bearer',
        type: 'http',
      },
      api_key: { bearerFormat: 'API Key', scheme: 'bearer', type: 'http' },
      bridge_client_session: {
        bearerFormat: 'Bridge Client Session Token',
        scheme: 'bearer',
        type: 'http',
      },
      certified_client: {
        bearerFormat: 'Certified Client',
        scheme: 'bearer',
        type: 'http',
      },
      client_session: {
        bearerFormat: 'Client Session Token',
        scheme: 'bearer',
        type: 'http',
      },
      client_session_token: {
        in: 'header',
        name: 'client-session-token',
        type: 'apiKey',
      },
      client_session_with_customer: {
        bearerFormat: 'Customer Client Session Token',
        scheme: 'bearer',
        type: 'http',
      },
      console_session_with_workspace: {
        bearerFormat: 'Console Session Token',
        scheme: 'bearer',
        type: 'http',
      },
      console_session_without_workspace: {
        bearerFormat: 'Console Session Token',
        scheme: 'bearer',
        type: 'http',
      },
      pat_with_workspace: {
        bearerFormat: 'API Token',
        scheme: 'bearer',
        type: 'http',
      },
      pat_without_workspace: {
        bearerFormat: 'API Token',
        scheme: 'bearer',
        type: 'http',
      },
      publishable_key: {
        in: 'header',
        name: 'seam-publishable-key',
        type: 'apiKey',
      },
      seam_client_session_token: {
        in: 'header',
        name: 'seam-client-session-token',
        type: 'apiKey',
      },
      seam_workspace: { in: 'header', name: 'seam-workspace', type: 'apiKey' },
    },
  },
  info: { title: 'Seam Connect', version: '1.0.0' },
  openapi: '3.0.0',
  paths: {
    '/access_codes/create': {
      post: {
        description:
          'Creates a new [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
        operationId: 'accessCodesCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  common_code_key: {
                    description:
                      'Key to identify access codes that should have the same code. Any two access codes with the same `common_code_key` are guaranteed to have the same `code`. See also [Creating and Updating Multiple Linked Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/creating-and-updating-multiple-linked-access-codes).',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to create the new access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_code: { $ref: '#/components/schemas/access_code' },
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'access_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session_with_customer: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/create',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'CREATE_ACCESS_CODE',
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'access_code',
        'x-response-key': 'access_code',
        'x-title': 'Create an Access Code',
      },
    },
    '/access_codes/create_multiple': {
      post: {
        description:
          'Creates new [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) that share a common code across multiple devices.\n\nUsers with more than one door lock in a property may want to create groups of linked access codes, all of which have the same code (PIN). For example, a short-term rental host may want to provide guests the same PIN for both a front door lock and a back door lock.\n\nIf you specify a custom code, Seam assigns this custom code to each of the resulting access codes. However, in this case, Seam does not link these access codes together with a `common_code_key`. That is, `common_code_key` remains null for these access codes.\n\nIf you want to change these access codes that are not linked by a `common_code_key`, you cannot use `/access_codes/update_multiple`. However, you can update each of these access codes individually, using `/access_codes/update`.\n\nSee also [Creating and Updating Multiple Linked Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/creating-and-updating-multiple-linked-access-codes).',
        operationId: 'accessCodesCreateMultiplePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  behavior_when_code_cannot_be_shared: {
                    default: 'throw',
                    description:
                      'Desired behavior if any device cannot share a code. If `throw` (default), no access codes will be created if any device cannot share a code. If `create_random_code`, a random code will be created on devices that cannot share a code.',
                    enum: ['throw', 'create_random_code'],
                    type: 'string',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_ids: {
                    description:
                      'IDs of the devices for which you want to create the new access codes.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_codes: {
                      items: { $ref: '#/components/schemas/access_code' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_codes', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/create_multiple',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'create_multiple',
        'x-fern-sdk-return-value': 'access_codes',
        'x-response-key': 'access_codes',
        'x-title': 'Create Multiple Linked Access Codes',
      },
      put: {
        description:
          'Creates new [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) that share a common code across multiple devices.\n\nUsers with more than one door lock in a property may want to create groups of linked access codes, all of which have the same code (PIN). For example, a short-term rental host may want to provide guests the same PIN for both a front door lock and a back door lock.\n\nIf you specify a custom code, Seam assigns this custom code to each of the resulting access codes. However, in this case, Seam does not link these access codes together with a `common_code_key`. That is, `common_code_key` remains null for these access codes.\n\nIf you want to change these access codes that are not linked by a `common_code_key`, you cannot use `/access_codes/update_multiple`. However, you can update each of these access codes individually, using `/access_codes/update`.\n\nSee also [Creating and Updating Multiple Linked Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/creating-and-updating-multiple-linked-access-codes).',
        operationId: 'accessCodesCreateMultiplePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  behavior_when_code_cannot_be_shared: {
                    default: 'throw',
                    description:
                      'Desired behavior if any device cannot share a code. If `throw` (default), no access codes will be created if any device cannot share a code. If `create_random_code`, a random code will be created on devices that cannot share a code.',
                    enum: ['throw', 'create_random_code'],
                    type: 'string',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_ids: {
                    description:
                      'IDs of the devices for which you want to create the new access codes.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_codes: {
                      items: { $ref: '#/components/schemas/access_code' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_codes', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/create_multiple',
        tags: ['/access_codes'],
        'x-fern-ignore': true,
        'x-response-key': 'access_codes',
        'x-title': 'Create Multiple Linked Access Codes',
      },
    },
    '/access_codes/delete': {
      post: {
        description:
          'Deletes an [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).',
        operationId: 'accessCodesDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to delete the access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/delete',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'DELETE_ACCESS_CODE',
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Access Code',
      },
    },
    '/access_codes/generate_code': {
      post: {
        description:
          'Generates a code for an [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes), given a device ID.',
        operationId: 'accessCodesGenerateCodePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to generate a code.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    generated_code: {
                      $ref: '#/components/schemas/access_code',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['generated_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/generate_code',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'generate_code',
        'x-fern-sdk-return-value': 'generated_code',
        'x-response-key': 'generated_code',
        'x-title': 'Generate a Code',
      },
    },
    '/access_codes/get': {
      post: {
        description:
          'Returns a specified [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nYou must specify either `access_code_id` or both `device_id` and `code`.',
        operationId: 'accessCodesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  code: {
                    description:
                      'Code of the access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device containing the access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_code: { $ref: '#/components/schemas/access_code' },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { access_token: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/access_codes/get',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_code',
        'x-response-key': 'access_code',
        'x-title': 'Get an Access Code',
      },
    },
    '/access_codes/list': {
      post: {
        description:
          'Returns a list of all [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nSpecify either `device_id` or `access_code_ids`.',
        operationId: 'accessCodesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_ids: {
                    description:
                      'IDs of the access codes that you want to retrieve. Specify either `device_id` or `access_code_ids`.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to list access codes. Specify either `device_id` or `access_code_ids`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  limit: {
                    default: 55_000,
                    description:
                      'Numerical limit on the number of access codes to return.',
                    format: 'float',
                    type: 'number',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user by which to filter access codes.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_codes: {
                      items: { $ref: '#/components/schemas/access_code' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    pagination: { $ref: '#/components/schemas/pagination' },
                  },
                  required: ['access_codes', 'pagination', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/list',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_codes',
        'x-response-key': 'access_codes',
        'x-title': 'List Access Codes',
      },
    },
    '/access_codes/pull_backup_access_code': {
      post: {
        description:
          "Retrieves a backup access code for an [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes). See also [Managing Backup Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/backup-access-codes).\n\nA backup access code pool is a collection of pre-programmed access codes stored on a device, ready for use. These codes are programmed in addition to the regular access codes on Seam, serving as a safety net for any issues with the primary codes. If there's ever a complication with a primary access code—be it due to intermittent connectivity, manual removal from a device, or provider outages—a backup code can be retrieved. Its end time can then be adjusted to align with the original code, facilitating seamless and uninterrupted access.\n\nYou can pull a backup access code from the pool at any time. These backup codes are guaranteed to work immediately and automatically programmed to be removed from the device after the access code ends.\n\nYou can only pull backup access codes for time-bound access codes.\n\nBefore pulling a backup access code, make sure that the device's `properties.supports_backup_access_code_pool` is `true`. Then, to activate the backup pool, set `use_backup_access_code_pool` to `true` when creating an access code.",
        operationId: 'accessCodesPullBackupAccessCodePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code for which you want to pull a backup access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_code: { $ref: '#/components/schemas/access_code' },
                    backup_access_code: {
                      $ref: '#/components/schemas/access_code',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['backup_access_code', 'access_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/pull_backup_access_code',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'pull_backup_access_code',
        'x-fern-sdk-return-value': 'access_code',
        'x-response-key': 'access_code',
        'x-title': 'Pull a Backup Access Code',
      },
    },
    '/access_codes/report_device_constraints': {
      post: {
        description:
          'Enables you to report access code-related constraints for a device. Currently, supports reporting supported code length constraints for SmartThings devices.\n\nSpecify either `supported_code_lengths` or `min_code_length`/`max_code_length`.',
        operationId: 'accessCodesReportDeviceConstraintsPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to report constraints.',
                    format: 'uuid',
                    type: 'string',
                  },
                  max_code_length: {
                    description:
                      'Maximum supported code length as an integer between 4 and 20, inclusive. You can specify either `min_code_length`/`max_code_length` or `supported_code_lengths`.',
                    maximum: 20,
                    minimum: 4,
                    type: 'integer',
                  },
                  min_code_length: {
                    description:
                      'Minimum supported code length as an integer between 4 and 20, inclusive. You can specify either `min_code_length`/`max_code_length` or `supported_code_lengths`.',
                    maximum: 20,
                    minimum: 4,
                    type: 'integer',
                  },
                  supported_code_lengths: {
                    description:
                      'Array of supported code lengths as integers between 4 and 20, inclusive. You can specify either `supported_code_lengths` or `min_code_length`/`max_code_length`.',
                    items: { maximum: 20, minimum: 4, type: 'integer' },
                    minItems: 1,
                    type: 'array',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/report_device_constraints',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'report_device_constraints',
        'x-response-key': null,
        'x-title': 'Report Device Access Code Constraints',
      },
    },
    '/access_codes/simulate/create_unmanaged_access_code': {
      post: {
        description:
          'Simulates the creation of an [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) in a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'accessCodesSimulateCreateUnmanagedAccessCodePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  code: {
                    description: 'Code of the simulated unmanaged access code.',
                    maxLength: 8,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to simulate the creation of an unmanaged access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the simulated unmanaged access code.',
                    type: 'string',
                  },
                },
                required: ['device_id', 'name', 'code'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_code: {
                      $ref: '#/components/schemas/unmanaged_access_code',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/simulate/create_unmanaged_access_code',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes', 'simulate'],
        'x-fern-sdk-method-name': 'create_unmanaged_access_code',
        'x-fern-sdk-return-value': 'access_code',
        'x-response-key': 'access_code',
        'x-title': 'Simulate Creating an Unmanaged Access Code',
      },
    },
    '/access_codes/unmanaged/convert_to_managed': {
      patch: {
        description:
          'Converts an [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) to an [access code managed through Seam](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nAn unmanaged access code has a limited set of operations that you can perform on it. Once you convert an unmanaged access code to a managed access code, the full set of access code operations and lifecycle events becomes available for it.\n\nNote that not all device providers support converting an unmanaged access code to a managed access code.',
        operationId: 'accessCodesUnmanagedConvertToManagedPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to convert to a managed access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the access code is allowed.',
                    type: 'boolean',
                  },
                  force: {
                    description:
                      'Indicates whether to force the access code conversion. To switch management of an access code from one Seam workspace to another, set `force` to `true`.',
                    type: 'boolean',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the access code is allowed.',
                    type: 'boolean',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/convert_to_managed',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'CONVERT_ACCESS_CODE_TO_MANAGED',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Convert an Unmanaged Access Code',
      },
      post: {
        description:
          'Converts an [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) to an [access code managed through Seam](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nAn unmanaged access code has a limited set of operations that you can perform on it. Once you convert an unmanaged access code to a managed access code, the full set of access code operations and lifecycle events becomes available for it.\n\nNote that not all device providers support converting an unmanaged access code to a managed access code.',
        operationId: 'accessCodesUnmanagedConvertToManagedPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to convert to a managed access code.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the access code is allowed.',
                    type: 'boolean',
                  },
                  force: {
                    description:
                      'Indicates whether to force the access code conversion. To switch management of an access code from one Seam workspace to another, set `force` to `true`.',
                    type: 'boolean',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the access code is allowed.',
                    type: 'boolean',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/convert_to_managed',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'CONVERT_ACCESS_CODE_TO_MANAGED',
        'x-fern-sdk-group-name': ['access_codes', 'unmanaged'],
        'x-fern-sdk-method-name': 'convert_to_managed',
        'x-response-key': null,
        'x-title': 'Convert an Unmanaged Access Code',
      },
    },
    '/access_codes/unmanaged/delete': {
      post: {
        description:
          'Deletes an [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).',
        operationId: 'accessCodesUnmanagedDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/delete',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'DELETE_ACCESS_CODE',
        'x-fern-sdk-group-name': ['access_codes', 'unmanaged'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Unmanaged Access Code',
      },
    },
    '/access_codes/unmanaged/get': {
      post: {
        description:
          'Returns a specified [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).\n\nYou must specify either `access_code_id` or both `device_id` and `code`.',
        operationId: 'accessCodesUnmanagedGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  code: {
                    description:
                      'Code of the unmanaged access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device containing the unmanaged access code that you want to get. You must specify either `access_code_id` or both `device_id` and `code`.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_code: {
                      $ref: '#/components/schemas/unmanaged_access_code',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_code', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/get',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes', 'unmanaged'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_code',
        'x-response-key': 'access_code',
        'x-title': 'Get an Unmanaged Access Code',
      },
    },
    '/access_codes/unmanaged/list': {
      post: {
        description:
          'Returns a list of all [unmanaged access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).',
        operationId: 'accessCodesUnmanagedListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to list unmanaged access codes.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user by which to filter unmanaged access codes.',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_codes: {
                      items: {
                        $ref: '#/components/schemas/unmanaged_access_code',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_codes', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/list',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes', 'unmanaged'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_codes',
        'x-response-key': 'access_codes',
        'x-title': 'List Unmanaged Access Codes',
      },
    },
    '/access_codes/unmanaged/update': {
      patch: {
        description:
          'Updates a specified [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).',
        operationId: 'accessCodesUnmanagedUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed.',
                    type: 'boolean',
                  },
                  force: {
                    description:
                      'Indicates whether to force the unmanaged access code update.',
                    type: 'boolean',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed.',
                    type: 'boolean',
                  },
                  is_managed: { type: 'boolean' },
                },
                required: ['access_code_id', 'is_managed'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/update',
        tags: ['/access_codes'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update an Unmanaged Access Code',
      },
      post: {
        description:
          'Updates a specified [unmanaged access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes).',
        operationId: 'accessCodesUnmanagedUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the unmanaged access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed.',
                    type: 'boolean',
                  },
                  force: {
                    description:
                      'Indicates whether to force the unmanaged access code update.',
                    type: 'boolean',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed.',
                    type: 'boolean',
                  },
                  is_managed: { type: 'boolean' },
                },
                required: ['access_code_id', 'is_managed'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/unmanaged/update',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes', 'unmanaged'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update an Unmanaged Access Code',
      },
    },
    '/access_codes/update': {
      patch: {
        description:
          'Updates a specified active or upcoming [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nSee also [Modifying Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes).',
        operationId: 'accessCodesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device containing the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_managed: {
                    description:
                      'Indicates whether the access code is managed through Seam. Note that to convert an unmanaged access code into a managed access code, use `/access_codes/unmanaged/convert_to_managed`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                  type: {
                    description:
                      'Type to which you want to convert the access code. To convert a time-bound access code to an ongoing access code, set `type` to `ongoing`. See also [Changing a time-bound access code to permanent access](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes#special-case-2-changing-a-time-bound-access-code-to-permanent-access).',
                    enum: ['ongoing', 'time_bound'],
                    type: 'string',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/update',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'UPDATE_ACCESS_CODE',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update an Access Code',
      },
      post: {
        description:
          'Updates a specified active or upcoming [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nSee also [Modifying Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes).',
        operationId: 'accessCodesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device containing the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_managed: {
                    description:
                      'Indicates whether the access code is managed through Seam. Note that to convert an unmanaged access code into a managed access code, use `/access_codes/unmanaged/convert_to_managed`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                  type: {
                    description:
                      'Type to which you want to convert the access code. To convert a time-bound access code to an ongoing access code, set `type` to `ongoing`. See also [Changing a time-bound access code to permanent access](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes#special-case-2-changing-a-time-bound-access-code-to-permanent-access).',
                    enum: ['ongoing', 'time_bound'],
                    type: 'string',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/update',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'UPDATE_ACCESS_CODE',
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update an Access Code',
      },
      put: {
        description:
          'Updates a specified active or upcoming [access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes).\n\nSee also [Modifying Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes).',
        operationId: 'accessCodesUpdatePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allow_external_modification: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  attempt_for_offline_device: {
                    default: true,
                    type: 'boolean',
                  },
                  code: {
                    description: 'Code to be used for access.',
                    maxLength: 9,
                    minLength: 4,
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device containing the access code that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  is_external_modification_allowed: {
                    description:
                      'Indicates whether [external modification](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#external-modification) of the code is allowed. Default: `false`.',
                    type: 'boolean',
                  },
                  is_managed: {
                    description:
                      'Indicates whether the access code is managed through Seam. Note that to convert an unmanaged access code into a managed access code, use `/access_codes/unmanaged/convert_to_managed`.',
                    type: 'boolean',
                  },
                  is_offline_access_code: {
                    description:
                      'Indicates whether the access code is an [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes).',
                    type: 'boolean',
                  },
                  is_one_time_use: {
                    description:
                      'Indicates whether the [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) is a single-use access code.',
                    type: 'boolean',
                  },
                  max_time_rounding: {
                    default: '1hour',
                    description:
                      'Maximum rounding adjustment. To create a daily-bound [offline access code](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/offline-access-codes) for devices that support this feature, set this parameter to `1d`.',
                    enum: ['1hour', '1day', '1h', '1d'],
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  prefer_native_scheduling: {
                    description:
                      'Indicates whether [native scheduling](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes#native-scheduling) should be used for time-bound codes when supported by the provider. Default: `true`.',
                    type: 'boolean',
                  },
                  preferred_code_length: {
                    description:
                      'Preferred code length. Only applicable if you do not specify a `code`. If the affected device does not support the preferred code length, Seam reverts to using the shortest supported code length.',
                    format: 'float',
                    type: 'number',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                  type: {
                    description:
                      'Type to which you want to convert the access code. To convert a time-bound access code to an ongoing access code, set `type` to `ongoing`. See also [Changing a time-bound access code to permanent access](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/modifying-access-codes#special-case-2-changing-a-time-bound-access-code-to-permanent-access).',
                    enum: ['ongoing', 'time_bound'],
                    type: 'string',
                  },
                  use_backup_access_code_pool: {
                    description:
                      'Indicates whether to use a [backup access code pool](https://docs.seam.co/latest/core-concepts/access-codes#backup-access-codes) provided by Seam. If `true`, you can use [`/access_codes/pull_backup_access_code`](https://docs.seam.co/latest/api/access_codes/pull_backup_access_code).',
                    type: 'boolean',
                  },
                  use_offline_access_code: { type: 'boolean' },
                },
                required: ['access_code_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/update',
        tags: ['/access_codes'],
        'x-action-attempt-type': 'UPDATE_ACCESS_CODE',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update an Access Code',
      },
    },
    '/access_codes/update_multiple': {
      patch: {
        description:
          'Updates [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) that share a common code across multiple devices.\n\nSpecify the `common_code_key` to identify the set of access codes that you want to update.\n\nSee also [Update Linked Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/creating-and-updating-multiple-linked-access-codes#update-linked-access-codes).',
        operationId: 'accessCodesUpdateMultiplePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  common_code_key: {
                    description:
                      'Key that links the group of access codes, assigned on creation by `/access_codes/create_multiple`.',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                },
                required: ['common_code_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/update_multiple',
        tags: ['/access_codes'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update Multiple Linked Access Codes',
      },
      post: {
        description:
          'Updates [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes) that share a common code across multiple devices.\n\nSpecify the `common_code_key` to identify the set of access codes that you want to update.\n\nSee also [Update Linked Access Codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/creating-and-updating-multiple-linked-access-codes#update-linked-access-codes).',
        operationId: 'accessCodesUpdateMultiplePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  common_code_key: {
                    description:
                      'Key that links the group of access codes, assigned on creation by `/access_codes/create_multiple`.',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new access code ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    type: 'string',
                  },
                  name: {
                    description:
                      "Name of the new access code. Enables administrators and users to identify the access code easily, especially when there are numerous access codes. Note that the name provided on Seam is used to identify the code on Seam and is not necessarily the name that will appear in the lock provider's app or on the device. This is because lock providers may have constraints on names, such as length, uniqueness, or characters that can be used. In addition, some lock providers may break down names into components such as `first_name` and `last_name`. To provide a consistent experience, Seam identifies the code on Seam by its name but may modify the name that appears on the lock provider's app or on the device. For example, Seam may add additional characters or truncate the name to meet provider constraints. To help your users identify codes set by Seam, Seam provides the name exactly as it appears on the lock provider's app or on the device as a separate property called `appearance`. This is an object with a `name` property and, optionally, `first_name` and `last_name` properties (for providers that break down a name into components).",
                    type: 'string',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new access code starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                },
                required: ['common_code_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_codes/update_multiple',
        tags: ['/access_codes'],
        'x-fern-sdk-group-name': ['access_codes'],
        'x-fern-sdk-method-name': 'update_multiple',
        'x-response-key': null,
        'x-title': 'Update Multiple Linked Access Codes',
      },
    },
    '/access_grants/create': {
      post: {
        description: 'Creates a new access grant.',
        operationId: 'accessGrantsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    oneOf: [
                      {
                        properties: {
                          user_identity_id: {
                            description:
                              'ID of user identity for whom access is being granted.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['user_identity_id'],
                        type: 'object',
                      },
                      {
                        properties: {
                          user_identity: {
                            description:
                              'When used, creates a new user identity with the given details, and grants them access.',
                            properties: {
                              email_address: {
                                description:
                                  'Unique email address for the user identity.',
                                format: 'email',
                                nullable: true,
                                type: 'string',
                              },
                              full_name: {
                                minLength: 1,
                                nullable: true,
                                type: 'string',
                              },
                              phone_number: {
                                description:
                                  'Unique phone number for the user identity in [E.164 format](https://www.itu.int/rec/T-REC-E.164/en) (for example, +15555550100).',
                                nullable: true,
                                type: 'string',
                              },
                            },
                            type: 'object',
                          },
                        },
                        required: ['user_identity'],
                        type: 'object',
                      },
                    ],
                  },
                  {
                    properties: {
                      acs_entrance_ids: {
                        default: [],
                        description:
                          'Set of IDs of the [entrances](https://docs.seam.co/latest/api/acs/systems/list) to which access is being granted.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      device_ids: {
                        default: [],
                        description:
                          'Set of IDs of the [devices](https://docs.seam.co/latest/api/devices/list) to which access is being granted.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the validity of the new grant ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                        format: 'date-time',
                        type: 'string',
                      },
                      location: {
                        description:
                          'When used, creates a new location with the given entrances and devices, and gives the user access to this location.',
                        properties: {
                          acs_entrance_ids: {
                            default: [],
                            deprecated: true,
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                            'x-deprecated':
                              'Use `acs_entrance_ids` at the top level.',
                          },
                          device_ids: {
                            default: [],
                            deprecated: true,
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                            'x-deprecated':
                              'Use `device_ids` at the top level.',
                          },
                          name: {
                            description: 'Name of the location.',
                            type: 'string',
                          },
                        },
                        type: 'object',
                      },
                      location_ids: {
                        deprecated: true,
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                        'x-deprecated': 'Use `space_ids`.',
                      },
                      requested_access_methods: {
                        items: {
                          properties: {
                            mode: {
                              description:
                                'Access method mode. Supported values: `code`, `card`, `mobile_key`.',
                              enum: ['code', 'card', 'mobile_key'],
                              type: 'string',
                            },
                          },
                          required: ['mode'],
                          type: 'object',
                        },
                        type: 'array',
                      },
                      space_ids: {
                        description:
                          'Set of IDs of existing spaces to which access is being granted.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      starts_at: {
                        description:
                          'Date and time at which the validity of the new grant starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                        format: 'date-time',
                        type: 'string',
                      },
                    },
                    required: ['requested_access_methods'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grant: { $ref: '#/components/schemas/access_grant' },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grant', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/access_grants/create',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_grants'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'access_grant',
        'x-response-key': 'access_grant',
        'x-title': 'Create an Access Grant',
      },
    },
    '/access_grants/delete': {
      post: {
        description: 'Delete an access grant.',
        operationId: 'accessGrantsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description: 'ID of access grant to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/access_grants/delete',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_grants'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Access Grant',
      },
    },
    '/access_grants/get': {
      post: {
        description: 'Get an access grant.',
        operationId: 'accessGrantsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description: 'ID of access grant to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grant: { $ref: '#/components/schemas/access_grant' },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grant', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/access_grants/get',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_grants'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_grant',
        'x-response-key': 'access_grant',
        'x-title': 'Get an Access Grant',
      },
    },
    '/access_grants/list': {
      post: {
        description: 'Get an access grant.',
        operationId: 'accessGrantsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_id: {
                    description:
                      'ID of entrance to filter list of access grants by.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_system_id: {
                    description:
                      'ID of system to filter list of access grants by.',
                    format: 'uuid',
                    type: 'string',
                  },
                  location_id: {
                    deprecated: true,
                    format: 'uuid',
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  space_id: {
                    description:
                      'ID of space to filter list of access grants by.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of user identity to filter list of access grants by.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grants: {
                      items: { $ref: '#/components/schemas/access_grant' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grants', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/access_grants/list',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_grants'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_grants',
        'x-response-key': 'access_grants',
        'x-title': 'List Access Grants',
      },
    },
    '/access_methods/delete': {
      post: {
        description: 'Delete an access method.',
        operationId: 'accessMethodsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method_id: {
                    description: 'ID of access method to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_method_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_methods/delete',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_methods'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Access Method',
      },
    },
    '/access_methods/get': {
      post: {
        description: 'Get an access method.',
        operationId: 'accessMethodsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method_id: {
                    description: 'ID of access method to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_method_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_method: {
                      $ref: '#/components/schemas/access_method',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_method', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_methods/get',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_methods'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_method',
        'x-response-key': 'access_method',
        'x-title': 'Get an Access Method',
      },
    },
    '/access_methods/list': {
      post: {
        description:
          'List all access methods, usually filtered by access grant.',
        operationId: 'accessMethodsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description:
                      'ID of access grant to list access methods for.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_methods: {
                      items: { $ref: '#/components/schemas/access_method' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_methods', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/access_methods/list',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['access_methods'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_methods',
        'x-response-key': 'access_methods',
        'x-title': 'List Access Methods',
      },
    },
    '/acs/access_groups/add_user': {
      post: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsAddUserPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to an access group. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the desired user identity that you want to add to an access group. You can only provide one of acs_user_id or user_identity_id. If the ACS system contains an ACS user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the access group membership belongs to the ACS user. If the ACS system does not have a corresponding ACS user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/add_user',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'add_user',
        'x-response-key': null,
        'x-title': 'Add an ACS User to an Access Group',
      },
      put: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsAddUserPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to an access group. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the desired user identity that you want to add to an access group. You can only provide one of acs_user_id or user_identity_id. If the ACS system contains an ACS user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the access group membership belongs to the ACS user. If the ACS system does not have a corresponding ACS user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/add_user',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add an ACS User to an Access Group',
      },
    },
    '/acs/access_groups/get': {
      post: {
        description:
          'Returns a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description: 'ID of the access group that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_access_group: {
                      $ref: '#/components/schemas/acs_access_group',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_access_group', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_access_group',
        'x-response-key': 'acs_access_group',
        'x-title': 'Get an Access Group',
      },
    },
    '/acs/access_groups/list': {
      post: {
        description:
          'Returns a list of all [access groups](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to retrieve all access groups.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user for which you want to retrieve all access groups.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all access groups.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_access_groups: {
                      items: { $ref: '#/components/schemas/acs_access_group' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_access_groups', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_access_groups',
        'x-response-key': 'acs_access_groups',
        'x-title': 'List Access Groups',
      },
    },
    '/acs/access_groups/list_accessible_entrances': {
      post: {
        description:
          'Returns a list of all accessible entrances for a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsListAccessibleEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group for which you want to retrieve all accessible entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_entrances: {
                      items: { $ref: '#/components/schemas/acs_entrance' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_entrances', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/access_groups/list_accessible_entrances',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'list_accessible_entrances',
        'x-fern-sdk-return-value': 'acs_entrances',
        'x-response-key': 'acs_entrances',
        'x-title': 'List Entrances Accessible to an Access Group',
      },
    },
    '/acs/access_groups/list_users': {
      post: {
        description:
          'Returns a list of all [access system users](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in an [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsListUsersPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group for which you want to retrieve all access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_users: {
                      items: { $ref: '#/components/schemas/acs_user' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_users', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/list_users',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'list_users',
        'x-fern-sdk-return-value': 'acs_users',
        'x-response-key': 'acs_users',
        'x-title': 'List ACS Users in an Access Group',
      },
    },
    '/acs/access_groups/remove_user': {
      post: {
        description:
          'Removes a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) from a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsRemoveUserPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group from which you want to remove an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to remove from an access group.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity associated with the user that you want to remove from an access group.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/remove_user',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups'],
        'x-fern-sdk-method-name': 'remove_user',
        'x-response-key': null,
        'x-title': 'Remove an ACS User from an Access Group',
      },
    },
    '/acs/access_groups/unmanaged/get': {
      post: {
        description:
          'Returns a specified unmanaged [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsUnmanagedGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the unmanaged access group that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_access_group: {
                      $ref: '#/components/schemas/unmanaged_acs_access_group',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_access_group', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/unmanaged/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups', 'unmanaged'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_access_group',
        'x-response-key': 'acs_access_group',
        'x-title': 'Get an Unmanaged Access Group',
        'x-undocumented':
          'No unmanaged access groups are currently implemented.',
      },
    },
    '/acs/access_groups/unmanaged/list': {
      post: {
        description:
          'Returns a list of all unmanaged [access groups](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsAccessGroupsUnmanagedListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to retrieve all unmanaged access groups.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user for which you want to retrieve all unmanaged access groups.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_access_groups: {
                      items: {
                        $ref: '#/components/schemas/unmanaged_acs_access_group',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_access_groups', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/access_groups/unmanaged/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'access_groups', 'unmanaged'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_access_groups',
        'x-response-key': 'acs_access_groups',
        'x-title': 'List Unmanaged Access Groups',
        'x-undocumented':
          'No unmanaged access groups are currently implemented.',
      },
    },
    '/acs/credential_pools/list': {
      post: {
        description: 'Returns a list of all credential pools.',
        operationId: 'acsCredentialPoolsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to list credential pools.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_system_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential_pools: {
                      items: {
                        $ref: '#/components/schemas/acs_credential_pool',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential_pools', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credential_pools/list',
        tags: ['/acs'],
        'x-deprecated':
          'Use `/user_identities/enrollment_automations/list` instead.',
        'x-fern-sdk-group-name': ['acs', 'credential_pools'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_credential_pools',
        'x-response-key': 'acs_credential_pools',
        'x-title': 'List Credential Pools',
        'x-undocumented': 'Replaced by enrollment automations.',
      },
    },
    '/acs/credential_provisioning_automations/launch': {
      post: {
        description: 'Launches a credential provisioning automation.',
        operationId: 'acsCredentialProvisioningAutomationsLaunchPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_pool_id: {
                    description:
                      'ID of the credential pool for which you want to launch a credential provisioning automation.',
                    format: 'uuid',
                    type: 'string',
                  },
                  create_credential_manager_user: {
                    description:
                      'Indicates whether to create an associated credential manager user. If you set `create_credential_manager_user` to `true`, you cannot specify a `credential_manager_acs_user_id`.',
                    type: 'boolean',
                  },
                  credential_manager_acs_system_id: {
                    description:
                      'Access system ID of the credential manager for which you want to launch a credential provisioning automation.',
                    format: 'uuid',
                    type: 'string',
                  },
                  credential_manager_acs_user_id: {
                    description:
                      'ID of the associated access system user within the credential manager. If you specify a `credential_manager_acs_user_id`, you cannot set `create_credential_manager_user` to `true`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to launch a credential provisioning automation.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: [
                  'user_identity_id',
                  'credential_manager_acs_system_id',
                ],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential_provisioning_automation: {
                      $ref: '#/components/schemas/acs_credential_provisioning_automation',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential_provisioning_automation', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credential_provisioning_automations/launch',
        tags: ['/acs'],
        'x-deprecated':
          'Use `/user_identities/enrollment_automations/launch` instead.',
        'x-fern-sdk-group-name': ['acs', 'credential_provisioning_automations'],
        'x-fern-sdk-method-name': 'launch',
        'x-fern-sdk-return-value': 'acs_credential_provisioning_automation',
        'x-response-key': 'acs_credential_provisioning_automation',
        'x-title': 'Launch a Credential Provisioning Automation',
        'x-undocumented': 'Replaced by enrollment automations.',
      },
    },
    '/acs/credentials/assign': {
      patch: {
        description:
          'Assigns a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) to a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsAssignPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to assign to an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user to whom you want to assign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to whom you want to assign a credential. You can only provide one of acs_user_id or user_identity_id. If the ACS system contains an ACS user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the credential belongs to the ACS user. If the ACS system does not have a corresponding ACS user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/assign',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Assign a Credential to an ACS User',
      },
      post: {
        description:
          'Assigns a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) to a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsAssignPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to assign to an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user to whom you want to assign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to whom you want to assign a credential. You can only provide one of acs_user_id or user_identity_id. If the ACS system contains an ACS user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the credential belongs to the ACS user. If the ACS system does not have a corresponding ACS user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/assign',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'assign',
        'x-response-key': null,
        'x-title': 'Assign a Credential to an ACS User',
      },
    },
    '/acs/credentials/create': {
      post: {
        description:
          'Creates a new [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) for a specified [ACS user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method: {
                    description:
                      'Access method for the new credential. Supported values: `code`, `card`, `mobile_key`.',
                    enum: ['code', 'card', 'mobile_key'],
                    type: 'string',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system to which the new credential belongs. You must provide either `acs_user_id` or the combination of `user_identity_id` and `acs_system_id`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user to whom the new credential belongs. You must provide either `acs_user_id` or the combination of `user_identity_id` and `acs_system_id`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allowed_acs_entrance_ids: {
                    default: [],
                    description:
                      'Set of IDs of the [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) for which the new credential grants access.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  assa_abloy_vostio_metadata: {
                    description:
                      'Vostio-specific metadata for the new credential.',
                    properties: {
                      auto_join: { type: 'boolean' },
                      join_all_guest_acs_entrances: { type: 'boolean' },
                      override_all_guest_acs_entrances: { type: 'boolean' },
                      override_guest_acs_entrance_ids: {
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                    },
                    type: 'object',
                  },
                  code: {
                    description:
                      'Access (PIN) code for the new credential. There may be manufacturer-specific code restrictions. For details, see the applicable [device or system integration guide](https://docs.seam.co/latest/device-and-system-integration-guides/overview).',
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  credential_manager_acs_system_id: {
                    description:
                      'ACS system ID of the credential manager for the new credential.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new credential ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    format: 'date-time',
                    type: 'string',
                  },
                  is_multi_phone_sync_credential: {
                    default: false,
                    description:
                      'Indicates whether the new credential is a [multi-phone sync credential](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system#what-are-multi-phone-sync-credentials).',
                    type: 'boolean',
                  },
                  salto_space_metadata: {
                    description:
                      'Salto Space-specific metadata for the new credential.',
                    properties: {
                      assign_new_key: {
                        description:
                          'Indicates whether to assign a first, new card to a user. See also [Programming Salto Space Card-based Credentials](https://docs.seam.co/latest/device-and-system-integration-guides/salto-proaccess-space-access-system/programming-salto-space-card-based-credentials).',
                        type: 'boolean',
                      },
                      update_current_key: {
                        description:
                          "Indicates whether to update the user's existing card. See also [Programming Salto Space Card-based Credentials](https://docs.seam.co/latest/device-and-system-integration-guides/salto-proaccess-space-access-system/programming-salto-space-card-based-credentials).",
                        type: 'boolean',
                        'x-undocumented': 'Not used. Will be deprecated.',
                      },
                    },
                    type: 'object',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new credential starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    format: 'date-time',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to whom the new credential belongs. You must provide either `acs_user_id` or the combination of `user_identity_id` and `acs_system_id`. If the access system contains a user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the credential belongs to the access system user. If the access system does not have a corresponding user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                  visionline_metadata: {
                    description:
                      'Visionline-specific metadata for the new credential.',
                    properties: {
                      assa_abloy_credential_service_mobile_endpoint_id: {
                        deprecated: true,
                        format: 'uuid',
                        type: 'string',
                        'x-deprecated':
                          'Read-only endpoint references moved to `endpoint`.',
                        'x-undocumented':
                          'Deprecated. Read-only endpoint references moved to `endpoint`.',
                      },
                      auto_join: { type: 'boolean' },
                      card_format: {
                        enum: ['TLCode', 'rfid48'],
                        type: 'string',
                      },
                      card_function_type: {
                        default: 'guest',
                        enum: ['guest', 'staff'],
                        type: 'string',
                      },
                      is_override_key: {
                        deprecated: true,
                        type: 'boolean',
                        'x-deprecated': 'Use `override` instead.',
                        'x-undocumented': 'Use `override` instead.',
                      },
                      joiner_acs_credential_ids: {
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      override: { type: 'boolean' },
                    },
                    type: 'object',
                  },
                },
                required: ['access_method'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/create',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'acs_credential',
        'x-response-key': 'acs_credential',
        'x-title': 'Create a Credential for an ACS User',
      },
    },
    '/acs/credentials/create_offline_code': {
      post: {
        description:
          'Creates a new offline [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) for a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsCreateOfflineCodePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_user_id: {
                    description:
                      'ID of the access system user to whom the new credential belongs.',
                    format: 'uuid',
                    type: 'string',
                  },
                  allowed_acs_entrance_id: {
                    description:
                      'IDs of the [`acs_entrance`s](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) for which the new credential grants access.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the validity of the new credential ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                    format: 'date-time',
                    type: 'string',
                  },
                  is_one_time_use: {
                    default: false,
                    description:
                      'Indicates whether the code is one-time-use or reusable.',
                    type: 'boolean',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the validity of the new credential starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    format: 'date-time',
                    type: 'string',
                  },
                },
                required: ['acs_user_id', 'allowed_acs_entrance_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/create_offline_code',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'create_offline_code',
        'x-fern-sdk-return-value': 'acs_credential',
        'x-response-key': 'acs_credential',
        'x-title': 'Create an Offline Credential for an ACS User',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/acs/credentials/delete': {
      post: {
        description:
          'Deletes a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/delete',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Credential',
      },
    },
    '/acs/credentials/get': {
      post: {
        description:
          'Returns a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description: 'ID of the credential that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_credential',
        'x-response-key': 'acs_credential',
        'x-title': 'Get a Credential',
      },
    },
    '/acs/credentials/list': {
      post: {
        description:
          'Returns a list of all [credentials](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    oneOf: [
                      {
                        properties: {
                          acs_user_id: {
                            description:
                              'ID of the access system user for which you want to retrieve all credentials.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['acs_user_id'],
                        type: 'object',
                      },
                      {
                        properties: {
                          acs_system_id: {
                            description:
                              'ID of the access system for which you want to retrieve all credentials.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['acs_system_id'],
                        type: 'object',
                      },
                      {
                        properties: {
                          acs_system_id: {
                            description:
                              'ID of the access system for which you want to retrieve all credentials.',
                            format: 'uuid',
                            type: 'string',
                          },
                          acs_user_id: {
                            description:
                              'ID of the access system user for which you want to retrieve all credentials.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['acs_user_id', 'acs_system_id'],
                        type: 'object',
                      },
                      {
                        properties: {
                          user_identity_id: {
                            description:
                              'ID of the user identity for which you want to retrieve all credentials.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['user_identity_id'],
                        type: 'object',
                      },
                      { properties: {}, type: 'object' },
                    ],
                  },
                  {
                    properties: {
                      created_before: {
                        description:
                          'Date and time, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format, before which events to return were created.',
                        format: 'date-time',
                        type: 'string',
                      },
                      is_multi_phone_sync_credential: {
                        description:
                          'Indicates whether you want to retrieve only multi-phone sync credentials or non-multi-phone sync credentials.',
                        type: 'boolean',
                      },
                      limit: {
                        default: 500,
                        description: 'Number of credentials to return.',
                        format: 'float',
                        type: 'number',
                      },
                    },
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credentials: {
                      items: { $ref: '#/components/schemas/acs_credential' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credentials', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/credentials/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_credentials',
        'x-response-key': 'acs_credentials',
        'x-title': 'List Credentials',
      },
    },
    '/acs/credentials/list_accessible_entrances': {
      post: {
        description:
          'Returns a list of all [entrances](https://docs.seam.co/latest/api/acs/entrances) to which a [credential](https://docs.seam.co/latest/api/acs/credentials) grants access.',
        operationId: 'acsCredentialsListAccessibleEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential for which you want to retrieve all entrances to which the credential grants access.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_entrances: {
                      items: { $ref: '#/components/schemas/acs_entrance' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_entrances', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/credentials/list_accessible_entrances',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'list_accessible_entrances',
        'x-fern-sdk-return-value': 'acs_entrances',
        'x-response-key': 'acs_entrances',
        'x-title': 'List Accessible Entrances',
      },
    },
    '/acs/credentials/unassign': {
      patch: {
        description:
          'Unassigns a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) from a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsUnassignPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to unassign from an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user from which you want to unassign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity from which you want to unassign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/unassign',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Unassign a Credential from an ACS User',
      },
      post: {
        description:
          'Unassigns a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) from a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsCredentialsUnassignPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to unassign from an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user from which you want to unassign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity from which you want to unassign a credential. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/unassign',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'unassign',
        'x-response-key': null,
        'x-title': 'Unassign a Credential from an ACS User',
      },
    },
    '/acs/credentials/unmanaged/get': {
      post: {
        description:
          'Returns a specified unmanaged [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsUnmanagedGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the unmanaged credential that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/unmanaged_acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/unmanaged/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials', 'unmanaged'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_credential',
        'x-response-key': 'acs_credential',
        'x-title': 'Get an Unmanaged Credential',
        'x-undocumented': 'No unmanaged credentials are currently implemented.',
      },
    },
    '/acs/credentials/unmanaged/list': {
      post: {
        description:
          'Returns a list of all unmanaged [credentials](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsUnmanagedListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    description:
                      'ID of the access system user for which you want to list unmanaged credentials.',
                    properties: {
                      acs_user_id: {
                        description:
                          'ID of the access system user for which you want to retrieve all credentials.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['acs_user_id'],
                    type: 'object',
                  },
                  {
                    description:
                      'ID of the access system for which you want to list unmanaged credentials.',
                    properties: {
                      acs_system_id: {
                        description:
                          'ID of the access system for which you want to retrieve all credentials.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['acs_system_id'],
                    type: 'object',
                  },
                  {
                    description:
                      'ID of the access system and ID of the access system user for which you want to list unmanaged credentials.',
                    properties: {
                      acs_system_id: {
                        description:
                          'ID of the access system for which you want to retrieve all credentials.',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_user_id: {
                        description:
                          'ID of the access system user for which you want to retrieve all credentials.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['acs_user_id', 'acs_system_id'],
                    type: 'object',
                  },
                  {
                    description:
                      'ID of the user identity for which you want to list unmanaged credentials.',
                    properties: {
                      user_identity_id: {
                        description:
                          'ID of the user identity for which you want to retrieve all credentials.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['user_identity_id'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credentials: {
                      items: {
                        $ref: '#/components/schemas/unmanaged_acs_credential',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credentials', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/credentials/unmanaged/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials', 'unmanaged'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_credentials',
        'x-response-key': 'acs_credentials',
        'x-title': 'List Unmanaged Credentials',
        'x-undocumented': 'No unmanaged credentials are currently implemented.',
      },
    },
    '/acs/credentials/update': {
      patch: {
        description:
          'Updates the code and ends at date and time for a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to update.',
                    type: 'string',
                  },
                  code: {
                    description:
                      'Replacement access (PIN) code for the credential that you want to update.',
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Replacement date and time at which the validity of the credential ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after the `starts_at` value that you set when creating the credential.',
                    format: 'date-time',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/update',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Credential',
      },
      post: {
        description:
          'Updates the code and ends at date and time for a specified [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'acsCredentialsUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the credential that you want to update.',
                    type: 'string',
                  },
                  code: {
                    description:
                      'Replacement access (PIN) code for the credential that you want to update.',
                    pattern: '^\\d+$',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Replacement date and time at which the validity of the credential ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after the `starts_at` value that you set when creating the credential.',
                    format: 'date-time',
                    type: 'string',
                  },
                },
                required: ['acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credential: {
                      $ref: '#/components/schemas/acs_credential',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credential', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/credentials/update',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'credentials'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Credential',
      },
    },
    '/acs/encoders/encode_access_method': {
      post: {
        description:
          'Encodes an existing access method onto a plastic card placed on the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
        operationId: 'acsEncodersEncodeAccessMethodPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method_id: {
                    description:
                      'ID of the `access_method` to encode onto a card.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_encoder_id: {
                    description:
                      'ID of the `acs_encoder` to use to encode the `access_method`.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_encoder_id', 'access_method_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/encoders/encode_access_method',
        tags: ['/acs'],
        'x-action-attempt-type': 'ENCODE_ACCESS_METHOD',
        'x-fern-sdk-group-name': ['acs', 'encoders'],
        'x-fern-sdk-method-name': 'encode_access_method',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Encode an Access Method',
      },
    },
    '/acs/encoders/encode_credential': {
      post: {
        description:
          'Encodes an existing [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) onto a plastic card placed on the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
        operationId: 'acsEncodersEncodeCredentialPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the `acs_credential` to encode onto a card.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_encoder_id: {
                    description:
                      'ID of the `acs_encoder` to use to encode the `acs_credential`.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_encoder_id', 'acs_credential_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/encoders/encode_credential',
        tags: ['/acs'],
        'x-action-attempt-type': 'ENCODE_CREDENTIAL',
        'x-fern-sdk-group-name': ['acs', 'encoders'],
        'x-fern-sdk-method-name': 'encode_credential',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Encode a Credential',
      },
    },
    '/acs/encoders/get': {
      post: {
        description:
          'Returns a specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
        operationId: 'acsEncodersGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_encoder_id: {
                    description: 'ID of the encoder that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_encoder_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_encoder: { $ref: '#/components/schemas/acs_encoder' },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_encoder', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/encoders/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_encoder',
        'x-response-key': 'acs_encoder',
        'x-title': 'Get an Encoder',
      },
    },
    '/acs/encoders/list': {
      post: {
        description:
          'Returns a list of all [encoders](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
        operationId: 'acsEncodersListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    properties: {
                      acs_system_id: {
                        description:
                          'ID of the access system for which you want to retrieve all encoders.',
                        format: 'uuid',
                        type: 'string',
                      },
                      limit: {
                        default: 500,
                        description: 'Number of encoders to return.',
                        format: 'float',
                        type: 'number',
                      },
                    },
                    required: ['acs_system_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      acs_system_ids: {
                        description:
                          'IDs of the access systems for which you want to retrieve all encoders.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      limit: {
                        default: 500,
                        description: 'Number of encoders to return.',
                        format: 'float',
                        type: 'number',
                      },
                    },
                    required: ['acs_system_ids'],
                    type: 'object',
                  },
                  {
                    properties: {
                      acs_encoder_ids: {
                        description:
                          'IDs of the encoders that you want to retrieve.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      limit: {
                        default: 500,
                        description: 'Number of encoders to return.',
                        format: 'float',
                        type: 'number',
                      },
                    },
                    required: ['acs_encoder_ids'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_encoders: {
                      items: { $ref: '#/components/schemas/acs_encoder' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_encoders', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/encoders/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_encoders',
        'x-response-key': 'acs_encoders',
        'x-title': 'List Encoders',
      },
    },
    '/acs/encoders/scan_credential': {
      post: {
        description:
          'Scans an encoded [acs_credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) from a plastic card placed on the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners).',
        operationId: 'acsEncodersScanCredentialPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_encoder_id: {
                    description: 'ID of the encoder to use for the scan.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_encoder_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/encoders/scan_credential',
        tags: ['/acs'],
        'x-action-attempt-type': 'SCAN_CREDENTIAL',
        'x-fern-sdk-group-name': ['acs', 'encoders'],
        'x-fern-sdk-method-name': 'scan_credential',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Scan a Credential',
      },
    },
    '/acs/encoders/simulate/next_credential_encode_will_fail': {
      post: {
        description:
          'Simulates that the next attempt to encode a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) using the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) will fail. You can only perform this action within a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'acsEncodersSimulateNextCredentialEncodeWillFailPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    additionalProperties: false,
                    properties: {
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will be used in the next request to encode the `acs_credential`.',
                        format: 'uuid',
                        type: 'string',
                      },
                      error_code: {
                        default: 'no_credential_on_encoder',
                        description: 'Code of the error to simulate.',
                        enum: ['no_credential_on_encoder'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id'],
                    type: 'object',
                  },
                  {
                    additionalProperties: false,
                    properties: {
                      acs_credential_id: {
                        description:
                          'ID of the `acs_credential` that will fail to be encoded onto a card in the next request.',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will be used in the next request to encode the `acs_credential`.',
                        format: 'uuid',
                        type: 'string',
                      },
                      error_code: {
                        description: 'Code of the error to simulate.',
                        enum: ['uncategorized_error', 'action_attempt_expired'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id', 'error_code'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/encoders/simulate/next_credential_encode_will_fail',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders', 'simulate'],
        'x-fern-sdk-method-name': 'next_credential_encode_will_fail',
        'x-response-key': null,
        'x-title': 'Simulate that the Next Credential Encoding Will Fail',
      },
    },
    '/acs/encoders/simulate/next_credential_encode_will_succeed': {
      post: {
        description:
          'Simulates that the next attempt to encode a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) using the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) will succeed. You can only perform this action within a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'acsEncodersSimulateNextCredentialEncodeWillSucceedPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                additionalProperties: false,
                properties: {
                  acs_encoder_id: {
                    description:
                      'ID of the `acs_encoder` that will be used in the next request to encode the `acs_credential`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  scenario: {
                    default: 'credential_is_issued',
                    description: 'Scenario to simulate.',
                    enum: ['credential_is_issued'],
                    type: 'string',
                  },
                },
                required: ['acs_encoder_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/encoders/simulate/next_credential_encode_will_succeed',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders', 'simulate'],
        'x-fern-sdk-method-name': 'next_credential_encode_will_succeed',
        'x-response-key': null,
        'x-title': 'Simulate that the Next Credential Encoding Will Succeed',
      },
    },
    '/acs/encoders/simulate/next_credential_scan_will_fail': {
      post: {
        description:
          'Simulates that the next attempt to scan a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) using the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) will fail. You can only perform this action within a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'acsEncodersSimulateNextCredentialScanWillFailPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    additionalProperties: false,
                    properties: {
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will fail to scan the `acs_credential` in the next request.',
                        format: 'uuid',
                        type: 'string',
                      },
                      error_code: {
                        default: 'no_credential_on_encoder',
                        enum: ['no_credential_on_encoder'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id'],
                    type: 'object',
                  },
                  {
                    additionalProperties: false,
                    properties: {
                      acs_credential_id_on_seam: {
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will fail to scan the `acs_credential` in the next request.',
                        format: 'uuid',
                        type: 'string',
                      },
                      error_code: {
                        enum: ['uncategorized_error', 'action_attempt_expired'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id', 'error_code'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/encoders/simulate/next_credential_scan_will_fail',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders', 'simulate'],
        'x-fern-sdk-method-name': 'next_credential_scan_will_fail',
        'x-response-key': null,
        'x-title': 'Simulate that the Next Credential Scan Will Fail',
      },
    },
    '/acs/encoders/simulate/next_credential_scan_will_succeed': {
      post: {
        description:
          'Simulates that the next attempt to scan a [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) using the specified [encoder](https://docs.seam.co/latest/capability-guides/access-systems/working-with-card-encoders-and-scanners) will succeed. You can only perform this action within a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'acsEncodersSimulateNextCredentialScanWillSucceedPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    additionalProperties: false,
                    properties: {
                      acs_credential_id_on_seam: {
                        description:
                          'ID of the Seam `acs_credential` that matches the `acs_credential` on the encoder in this simulation.',
                        format: 'uuid',
                        type: 'string',
                      },
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will be used in the next request to scan the `acs_credential`.',
                        format: 'uuid',
                        type: 'string',
                      },
                      scenario: {
                        default: 'credential_exists_on_seam',
                        description: 'Scenario to simulate.',
                        enum: [
                          'credential_exists_on_seam',
                          'credential_on_encoder_needs_update',
                        ],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id'],
                    type: 'object',
                  },
                  {
                    additionalProperties: false,
                    properties: {
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will be used in the next request to scan the `acs_credential`.',
                        format: 'uuid',
                        type: 'string',
                      },
                      scenario: {
                        description: 'Scenario to simulate.',
                        enum: ['credential_does_not_exist_on_seam'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id', 'scenario'],
                    type: 'object',
                  },
                  {
                    additionalProperties: false,
                    properties: {
                      acs_encoder_id: {
                        description:
                          'ID of the `acs_encoder` that will be used in the next request to scan the `acs_credential`.',
                        format: 'uuid',
                        type: 'string',
                      },
                      scenario: {
                        description: 'Scenario to simulate.',
                        enum: ['credential_on_encoder_is_empty'],
                        type: 'string',
                      },
                    },
                    required: ['acs_encoder_id', 'scenario'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/encoders/simulate/next_credential_scan_will_succeed',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'encoders', 'simulate'],
        'x-fern-sdk-method-name': 'next_credential_scan_will_succeed',
        'x-response-key': null,
        'x-title': 'Simulate that the Next Credential Scan Will Succeed',
      },
    },
    '/acs/entrances/get': {
      post: {
        description:
          'Returns a specified [access system entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
        operationId: 'acsEntrancesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_id: {
                    description: 'ID of the entrance that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_entrance_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_entrance: { $ref: '#/components/schemas/acs_entrance' },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_entrance', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { access_token: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
        ],
        summary: '/acs/entrances/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'entrances'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_entrance',
        'x-response-key': 'acs_entrance',
        'x-title': 'Get an Entrance',
      },
    },
    '/acs/entrances/grant_access': {
      post: {
        description:
          'Grants a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) access to a specified [access system entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
        operationId: 'acsEntrancesGrantAccessPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_id: {
                    description:
                      'ID of the entrance to which you want to grant an access system user access.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user to whom you want to grant access to an entrance. You can only provide one of acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to whom you want to grant access to an entrance. You can only provide one of acs_user_id or user_identity_id. If the ACS system contains an ACS user with the same `email_address` or `phone_number` as the user identity that you specify, they are linked, and the access group membership belongs to the ACS user. If the ACS system does not have a corresponding ACS user, one is created.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_entrance_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/entrances/grant_access',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'entrances'],
        'x-fern-sdk-method-name': 'grant_access',
        'x-response-key': null,
        'x-title': 'Grant an ACS User Access to an Entrance',
      },
    },
    '/acs/entrances/list': {
      post: {
        description:
          'Returns a list of all [access system entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
        operationId: 'acsEntrancesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description:
                      'ID of the access grant for which you want to retrieve all entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                  access_method_id: {
                    description:
                      'ID of the access method for which you want to retrieve all entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_credential_id: {
                    description:
                      'ID of the credential for which you want to retrieve all entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to retrieve all entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                  location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_entrances: {
                      items: { $ref: '#/components/schemas/acs_entrance' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_entrances', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/entrances/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'entrances'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_entrances',
        'x-response-key': 'acs_entrances',
        'x-title': 'List Entrances',
      },
    },
    '/acs/entrances/list_credentials_with_access': {
      post: {
        description:
          'Returns a list of all [credentials](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) with access to a specified [entrance](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details).',
        operationId: 'acsEntrancesListCredentialsWithAccessPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_id: {
                    description:
                      'ID of the entrance for which you want to list all credentials that grant access.',
                    format: 'uuid',
                    type: 'string',
                  },
                  include_if: {
                    description:
                      'Conditions that credentials must meet to be included in the returned list.',
                    items: {
                      enum: ['visionline_metadata.is_valid'],
                      type: 'string',
                    },
                    type: 'array',
                  },
                },
                required: ['acs_entrance_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credentials: {
                      items: { $ref: '#/components/schemas/acs_credential' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credentials', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/entrances/list_credentials_with_access',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'entrances'],
        'x-fern-sdk-method-name': 'list_credentials_with_access',
        'x-fern-sdk-return-value': 'acs_credentials',
        'x-response-key': 'acs_credentials',
        'x-title': 'List Credentials with Access to an Entrance',
      },
    },
    '/acs/systems/get': {
      post: {
        description:
          'Returns a specified [access system](https://docs.seam.co/latest/capability-guides/access-systems).',
        operationId: 'acsSystemsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_system_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_system: { $ref: '#/components/schemas/acs_system' },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_system', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/systems/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'systems'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_system',
        'x-response-key': 'acs_system',
        'x-title': 'Get an ACS System',
      },
    },
    '/acs/systems/list': {
      post: {
        description:
          'Returns a list of all [access systems](https://docs.seam.co/latest/capability-guides/access-systems).\n\nTo filter the list of returned access systems by a specific connected account ID, include the `connected_account_id` in the request body. If you omit the `connected_account_id` parameter, the response includes all access systems connected to your workspace.',
        operationId: 'acsSystemsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connected_account_id: {
                    description:
                      'ID of the connected account by which you want to filter the list of access systems.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_systems: {
                      items: { $ref: '#/components/schemas/acs_system' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_systems', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/systems/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'systems'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_systems',
        'x-response-key': 'acs_systems',
        'x-title': 'List ACS Systems',
      },
    },
    '/acs/systems/list_compatible_credential_manager_acs_systems': {
      post: {
        description:
          'Returns a list of all credential manager systems that are compatible with a specified [access system](https://docs.seam.co/latest/capability-guides/access-systems).\n\nSpecify the access system for which you want to retrieve all compatible credential manager systems by including the corresponding `acs_system_id` in the request body.',
        operationId: 'acsSystemsListCompatibleCredentialManagerAcsSystemsPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to retrieve all compatible credential manager systems.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_system_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_systems: {
                      items: { $ref: '#/components/schemas/acs_system' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_systems', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/systems/list_compatible_credential_manager_acs_systems',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'systems'],
        'x-fern-sdk-method-name':
          'list_compatible_credential_manager_acs_systems',
        'x-fern-sdk-return-value': 'acs_systems',
        'x-response-key': 'acs_systems',
        'x-title': 'List Compatible Credential Manager ACS Systems',
      },
    },
    '/acs/users/add_to_access_group': {
      post: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsUsersAddToAccessGroupPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to an access group.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_user_id', 'acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/add_to_access_group',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'add_to_access_group',
        'x-response-key': null,
        'x-title': 'Add an ACS User to an Access Group',
      },
      put: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsUsersAddToAccessGroupPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to an access group.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_user_id', 'acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/add_to_access_group',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add an ACS User to an Access Group',
      },
    },
    '/acs/users/create': {
      post: {
        description:
          'Creates a new [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_schedule: {
                    description:
                      "`starts_at` and `ends_at` timestamps for the new access system user's access. If you specify an `access_schedule`, you may include both `starts_at` and `ends_at`. If you omit `starts_at`, it defaults to the current time. `ends_at` is optional and must be a time in the future and after `starts_at`.",
                    properties: {
                      ends_at: {
                        description:
                          "Ending timestamp for the new access system user's access.",
                        format: 'date-time',
                        nullable: true,
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          "Starting timestamp for the new access system user's access.",
                        format: 'date-time',
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                  acs_access_group_ids: {
                    default: [],
                    description:
                      'Array of access group IDs to indicate the access groups to which you want to add the new access system user.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system to which you want to add the new access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  email: {
                    deprecated: true,
                    format: 'email',
                    type: 'string',
                    'x-deprecated': 'use email_address.',
                  },
                  email_address: {
                    description:
                      'Email address of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
                    format: 'email',
                    type: 'string',
                  },
                  full_name: {
                    description: 'Full name of the new access system user.',
                    type: 'string',
                  },
                  phone_number: {
                    description:
                      'Phone number of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity with which you want to associate the new access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['full_name', 'acs_system_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_user: { $ref: '#/components/schemas/acs_user' },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_user', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/create',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'acs_user',
        'x-response-key': 'acs_user',
        'x-title': 'Create an ACS User',
      },
    },
    '/acs/users/delete': {
      post: {
        description:
          "Deletes a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) and invalidates the access system user's [credentials](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).",
        operationId: 'acsUsersDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to delete. You must provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to delete. You must provide either acs_user_id or user_identity_id',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to delete. You must provide either acs_user_id or user_identity_id. If you provide user_identity_id, you must also provide acs_system_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/delete',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an ACS User',
      },
    },
    '/acs/users/get': {
      post: {
        description:
          'Returns a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to get. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to get. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to get. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_user: { $ref: '#/components/schemas/acs_user' },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_user', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_user',
        'x-response-key': 'acs_user',
        'x-title': 'Get an ACS User',
      },
    },
    '/acs/users/list': {
      post: {
        description:
          'Returns a list of all [access system users](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the `acs_system` for which you want to retrieve all access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned access system users. Returns users created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Maximum number of records to return per page.',
                    exclusiveMinimum: true,
                    minimum: 0,
                    type: 'integer',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  search: {
                    description:
                      'String for which to search. Filters returned access system users to include all records that satisfy a partial match using `full_name`, `phone_number`, `email_address`, `acs_user_id`, `user_identity_id`, `user_identity_full_name` or `user_identity_phone_number`.',
                    minLength: 1,
                    type: 'string',
                  },
                  user_identity_email_address: {
                    description:
                      'Email address of the user identity for which you want to retrieve all access system users.',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_phone_number: {
                    description:
                      'Phone number of the user identity for which you want to retrieve all access system users, in [E.164 format](https://www.itu.int/rec/T-REC-E.164/en) (for example, `+15555550100`).',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_users: {
                      items: { $ref: '#/components/schemas/acs_user' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    pagination: { $ref: '#/components/schemas/pagination' },
                  },
                  required: ['acs_users', 'pagination', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_users',
        'x-response-key': 'acs_users',
        'x-title': 'List ACS Users',
      },
    },
    '/acs/users/list_accessible_entrances': {
      post: {
        description:
          'Lists the [entrances](https://docs.seam.co/latest/api/acs/entrances) to which a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) has access.',
        operationId: 'acsUsersListAccessibleEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to list accessible entrances. You can only provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user for whom you want to list accessible entrances. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for whom you want to list accessible entrances. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_entrances: {
                      items: { $ref: '#/components/schemas/acs_entrance' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_entrances', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/list_accessible_entrances',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'list_accessible_entrances',
        'x-fern-sdk-return-value': 'acs_entrances',
        'x-response-key': 'acs_entrances',
        'x-title': 'List ACS User-Accessible Entrances',
      },
    },
    '/acs/users/remove_from_access_group': {
      post: {
        description:
          'Removes a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) from a specified [access group](https://docs.seam.co/latest/capability-guides/access-systems/assigning-users-to-access-groups).',
        operationId: 'acsUsersRemoveFromAccessGroupPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_access_group_id: {
                    description:
                      'ID of the access group from which you want to remove an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to remove from an access group. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to remove from an access group. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_access_group_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/remove_from_access_group',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'remove_from_access_group',
        'x-response-key': null,
        'x-title': 'Remove an ACS User from an Access Group',
      },
    },
    '/acs/users/revoke_access_to_all_entrances': {
      post: {
        description:
          'Revokes access to all [entrances](https://docs.seam.co/latest/api/acs/entrances) for a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersRevokeAccessToAllEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to revoke access. You can only provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user for whom you want to revoke access. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for whom you want to revoke access. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/users/revoke_access_to_all_entrances',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'revoke_access_to_all_entrances',
        'x-response-key': null,
        'x-title': 'Revoke ACS User Access to All Entrances',
      },
    },
    '/acs/users/suspend': {
      post: {
        description:
          "[Suspends](https://docs.seam.co/latest/capability-guides/access-systems/user-management/suspending-and-unsuspending-users#suspend-an-acs-user) a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management). Suspending an access system user revokes their access temporarily. To restore an access system user's access, you can [unsuspend](https://docs.seam.co/latest/api/acs/users/unsuspend) them.",
        operationId: 'acsUsersSuspendPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to suspend. You can only provide acs_user_id or the combination of acs_system_id and user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to suspend. You can only provide acs_user_id or the combination of acs_system_id and user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to suspend. You can only provide acs_user_id or the combination of acs_system_id and user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/suspend',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'suspend',
        'x-response-key': null,
        'x-title': 'Suspend an ACS User',
      },
    },
    '/acs/users/unmanaged/get': {
      post: {
        description:
          'Returns a specified unmanaged [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersUnmanagedGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_user_id: {
                    description:
                      'ID of the unmanaged access system user that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['acs_user_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_user: {
                      $ref: '#/components/schemas/unmanaged_acs_user',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_user', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/unmanaged/get',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users', 'unmanaged'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'acs_user',
        'x-response-key': 'acs_user',
        'x-title': 'Get an Unmanaged ACS User',
        'x-undocumented': 'No unmanaged users are currently implemented.',
      },
    },
    '/acs/users/unmanaged/list': {
      post: {
        description:
          'Returns a list of all unmanaged [access system users](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersUnmanagedListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to retrieve all unmanaged access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Number of unmanaged access system users to return.',
                    format: 'float',
                    type: 'number',
                  },
                  user_identity_email_address: {
                    description:
                      'Email address of the user identity for which you want to retrieve all unmanaged access system users.',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all unmanaged access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_phone_number: {
                    description:
                      'Phone number of the user identity for which you want to retrieve all unmanaged access system users.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_users: {
                      items: {
                        $ref: '#/components/schemas/unmanaged_acs_user',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_users', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/acs/users/unmanaged/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users', 'unmanaged'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_users',
        'x-response-key': 'acs_users',
        'x-title': 'List Unmanaged ACS Users',
        'x-undocumented': 'No unmanaged users are currently implemented.',
      },
    },
    '/acs/users/unsuspend': {
      post: {
        description:
          '[Unsuspends](https://docs.seam.co/latest/capability-guides/access-systems/user-management/suspending-and-unsuspending-users#unsuspend-an-acs-user) a specified suspended [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management). While [suspending an access system user](https://docs.seam.co/latest/api/acs/users/suspend) revokes their access temporarily, unsuspending the access system user restores their access.',
        operationId: 'acsUsersUnsuspendPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_id: {
                    description:
                      'ID of the access system of the user that you want to unsuspend. You can only provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to unsuspend. You can only provide acs_user_id or the combination of acs_system_id and user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to unsuspend. You can only provide acs_user_id or the combination of acs_system_id and user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/users/unsuspend',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'unsuspend',
        'x-response-key': null,
        'x-title': 'Unsuspend an ACS User',
      },
    },
    '/acs/users/update': {
      patch: {
        description:
          'Updates the properties of a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_schedule: {
                    description:
                      "`starts_at` and `ends_at` timestamps for the access system user's access. If you specify an `access_schedule`, you may include both `starts_at` and `ends_at`. If you omit `starts_at`, it defaults to the current time. `ends_at` is optional and must be a time in the future and after `starts_at`.",
                    nullable: true,
                    properties: {
                      ends_at: {
                        description:
                          "Ending timestamp for the access system user's access.",
                        format: 'date-time',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          "Starting timestamp for the access system user's access.",
                        format: 'date-time',
                        type: 'string',
                      },
                    },
                    required: ['starts_at', 'ends_at'],
                    type: 'object',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to update. You can only provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to update. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  email: {
                    deprecated: true,
                    format: 'email',
                    type: 'string',
                    'x-deprecated': 'use email_address.',
                  },
                  email_address: {
                    description:
                      'Email address of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
                    format: 'email',
                    type: 'string',
                  },
                  full_name: {
                    description:
                      'Full name of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
                    minLength: 1,
                    type: 'string',
                  },
                  hid_acs_system_id: { format: 'uuid', type: 'string' },
                  phone_number: {
                    description:
                      'Phone number of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to update. You can only provide acs_user_id or user_identity_id. If you provide user_identity_id, you must also provide acs_system_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/users/update',
        tags: ['/acs'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update an ACS User',
      },
      post: {
        description:
          'Updates the properties of a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
        operationId: 'acsUsersUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_schedule: {
                    description:
                      "`starts_at` and `ends_at` timestamps for the access system user's access. If you specify an `access_schedule`, you may include both `starts_at` and `ends_at`. If you omit `starts_at`, it defaults to the current time. `ends_at` is optional and must be a time in the future and after `starts_at`.",
                    nullable: true,
                    properties: {
                      ends_at: {
                        description:
                          "Ending timestamp for the access system user's access.",
                        format: 'date-time',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          "Starting timestamp for the access system user's access.",
                        format: 'date-time',
                        type: 'string',
                      },
                    },
                    required: ['starts_at', 'ends_at'],
                    type: 'object',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system that you want to update. You can only provide acs_system_id with user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to update. You can only provide acs_user_id or user_identity_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                  email: {
                    deprecated: true,
                    format: 'email',
                    type: 'string',
                    'x-deprecated': 'use email_address.',
                  },
                  email_address: {
                    description:
                      'Email address of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
                    format: 'email',
                    type: 'string',
                  },
                  full_name: {
                    description:
                      'Full name of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management).',
                    minLength: 1,
                    type: 'string',
                  },
                  hid_acs_system_id: { format: 'uuid', type: 'string' },
                  phone_number: {
                    description:
                      'Phone number of the [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) in E.164 format (for example, `+15555550100`).',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to update. You can only provide acs_user_id or user_identity_id. If you provide user_identity_id, you must also provide acs_system_id.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/acs/users/update',
        tags: ['/acs'],
        'x-fern-sdk-group-name': ['acs', 'users'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update an ACS User',
      },
    },
    '/action_attempts/get': {
      post: {
        description:
          'Returns a specified [action attempt](https://docs.seam.co/latest/core-concepts/action-attempts).',
        operationId: 'actionAttemptsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  action_attempt_id: {
                    description:
                      'ID of the action attempt that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['action_attempt_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/action_attempts/get',
        tags: ['/action_attempts'],
        'x-fern-sdk-group-name': ['action_attempts'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Get an Action Attempt',
      },
    },
    '/action_attempts/list': {
      post: {
        description:
          'Returns a list of the [action attempts](https://docs.seam.co/latest/core-concepts/action-attempts) that you specify as an array of `action_attempt_id`s.',
        operationId: 'actionAttemptsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  action_attempt_ids: {
                    description:
                      'IDs of the action attempts that you want to retrieve.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                },
                required: ['action_attempt_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempts: {
                      items: { $ref: '#/components/schemas/action_attempt' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempts', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/action_attempts/list',
        tags: ['/action_attempts'],
        'x-fern-sdk-group-name': ['action_attempts'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'action_attempts',
        'x-response-key': 'action_attempts',
        'x-title': 'List Action Attempts',
      },
    },
    '/bridges/get': {
      post: {
        description:
          'Returns a specified [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
        operationId: 'bridgesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  bridge_id: {
                    description: 'ID of the Seam Bridge that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['bridge_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge: {
                      description:
                        'Represents [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                      properties: {
                        bridge_id: {
                          description: 'ID of Seam Bridge.',
                          format: 'uuid',
                          type: 'string',
                        },
                        created_at: {
                          description:
                            'Date and time at which Seam Bridge was created.',
                          format: 'date-time',
                          type: 'string',
                        },
                        workspace_id: {
                          description:
                            'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains Seam Bridge.',
                          format: 'uuid',
                          type: 'string',
                        },
                      },
                      required: ['bridge_id', 'workspace_id', 'created_at'],
                      type: 'object',
                      'x-route-path': '/bridges',
                      'x-undocumented': 'Unreleased.',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/bridges/get',
        tags: [],
        'x-fern-sdk-group-name': ['bridges'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'bridge',
        'x-response-key': 'bridge',
        'x-title': 'Get a Seam Bridge',
        'x-undocumented': 'Not yet for customer use.',
      },
    },
    '/bridges/list': {
      post: {
        description:
          'Returns a list of all [Seam Bridges](https://docs.seam.co/latest/capability-guides/seam-bridge).',
        operationId: 'bridgesListPost',
        requestBody: {
          content: {
            'application/json': { schema: { properties: {}, type: 'object' } },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridges: {
                      items: {
                        description:
                          'Represents [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge).',
                        properties: {
                          bridge_id: {
                            description: 'ID of Seam Bridge.',
                            format: 'uuid',
                            type: 'string',
                          },
                          created_at: {
                            description:
                              'Date and time at which Seam Bridge was created.',
                            format: 'date-time',
                            type: 'string',
                          },
                          workspace_id: {
                            description:
                              'ID of the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) that contains Seam Bridge.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['bridge_id', 'workspace_id', 'created_at'],
                        type: 'object',
                        'x-route-path': '/bridges',
                        'x-undocumented': 'Unreleased.',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridges', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/bridges/list',
        tags: [],
        'x-fern-sdk-group-name': ['bridges'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'bridges',
        'x-response-key': 'bridges',
        'x-title': 'List Seam Bridges',
        'x-undocumented': 'Not yet for customer use.',
      },
    },
    '/client_sessions/create': {
      post: {
        description:
          'Creates a new [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
        operationId: 'clientSessionsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_ids: {
                    description:
                      'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) for which you want to create a client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  connected_account_ids: {
                    description:
                      'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) for which you want to create a client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  customer_id: {
                    description:
                      'Customer ID that you want to associate with the new client session.',
                    type: 'string',
                  },
                  customer_key: {
                    description:
                      'Customer key that you want to associate with the new client session.',
                    type: 'string',
                  },
                  expires_at: {
                    description:
                      'Date and time at which the client session should expire, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    format: 'date-time',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user for whom you want to create a client session.',
                    minLength: 1,
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) for which you want to create a client session.',
                    type: 'string',
                  },
                  user_identity_ids: {
                    deprecated: true,
                    description:
                      'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    items: { type: 'string' },
                    maxItems: 1,
                    minItems: 1,
                    type: 'array',
                    'x-deprecated': 'Use `user_identity_id` instead.',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { publishable_key: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/create',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'client_session',
        'x-response-key': 'client_session',
        'x-title': 'Create a Client Session',
      },
      put: {
        description:
          'Creates a new [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
        operationId: 'clientSessionsCreatePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_ids: {
                    description:
                      'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) for which you want to create a client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  connected_account_ids: {
                    description:
                      'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) for which you want to create a client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  customer_id: {
                    description:
                      'Customer ID that you want to associate with the new client session.',
                    type: 'string',
                  },
                  customer_key: {
                    description:
                      'Customer key that you want to associate with the new client session.',
                    type: 'string',
                  },
                  expires_at: {
                    description:
                      'Date and time at which the client session should expire, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    format: 'date-time',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user for whom you want to create a client session.',
                    minLength: 1,
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) for which you want to create a client session.',
                    type: 'string',
                  },
                  user_identity_ids: {
                    deprecated: true,
                    description:
                      'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    items: { type: 'string' },
                    maxItems: 1,
                    minItems: 1,
                    type: 'array',
                    'x-deprecated': 'Use `user_identity_id` instead.',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { publishable_key: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/create',
        tags: ['/client_sessions'],
        'x-fern-ignore': true,
        'x-response-key': 'client_session',
        'x-title': 'Create a Client Session',
      },
    },
    '/client_sessions/delete': {
      post: {
        description:
          'Deletes a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
        operationId: 'clientSessionsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['client_session_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/delete',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Client Session',
      },
    },
    '/client_sessions/get': {
      post: {
        description:
          'Returns a specified [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
        operationId: 'clientSessionsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session that you want to get.',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'User identifier key associated with the client session that you want to get.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/client_sessions/get',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'client_session',
        'x-response-key': 'client_session',
        'x-title': 'Get a Client Session',
      },
    },
    '/client_sessions/get_or_create': {
      post: {
        description:
          'Returns a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) with specific characteristics or creates a new client session with these characteristics if it does not yet exist.',
        operationId: 'clientSessionsGetOrCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_ids: {
                    description:
                      'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) that you want to associate with the client session (or that are already associated with the existing client session).',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  connected_account_ids: {
                    description:
                      'IDs of the [connected accounts](https://docs.seam.co/latest/api/connected_accounts) that you want to associate with the client session (or that are already associated with the existing client session).',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  expires_at: {
                    description:
                      'Date and time at which the client session should expire (or at which the existing client session expires), in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    format: 'date-time',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user that you want to associate with the client session (or that is already associated with the existing client session).',
                    minLength: 1,
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session (or that are already associated with the existing client session).',
                    type: 'string',
                  },
                  user_identity_ids: {
                    deprecated: true,
                    description:
                      'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    items: { type: 'string' },
                    maxItems: 1,
                    minItems: 1,
                    type: 'array',
                    'x-deprecated': 'Use `user_identity_id`.',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { publishable_key: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/get_or_create',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'get_or_create',
        'x-fern-sdk-return-value': 'client_session',
        'x-response-key': 'client_session',
        'x-title': 'Get or Create a Client Session',
      },
    },
    '/client_sessions/grant_access': {
      patch: {
        description:
          'Grants a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) access to one or more resources, such as [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews), [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity), and so on.',
        operationId: 'clientSessionsGrantAccessPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session to which you want to grant access to resources.',
                    type: 'string',
                  },
                  connect_webview_ids: {
                    description:
                      'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) that you want to associate with the client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  connected_account_ids: {
                    description:
                      'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) that you want to associate with the client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user that you want to associate with the client session.',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    type: 'string',
                  },
                  user_identity_ids: {
                    deprecated: true,
                    description:
                      'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    items: { type: 'string' },
                    maxItems: 1,
                    minItems: 1,
                    type: 'array',
                    'x-deprecated': 'Use `user_identity_id`.',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/grant_access',
        tags: ['/client_sessions'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Grant Access to a Client Session',
      },
      post: {
        description:
          'Grants a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens) access to one or more resources, such as [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews), [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity), and so on.',
        operationId: 'clientSessionsGrantAccessPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session to which you want to grant access to resources.',
                    type: 'string',
                  },
                  connect_webview_ids: {
                    description:
                      'IDs of the [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) that you want to associate with the client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  connected_account_ids: {
                    description:
                      'IDs of the [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) that you want to associate with the client session.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user that you want to associate with the client session.',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    type: 'string',
                  },
                  user_identity_ids: {
                    deprecated: true,
                    description:
                      'IDs of the [user identities](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) that you want to associate with the client session.',
                    items: { type: 'string' },
                    maxItems: 1,
                    minItems: 1,
                    type: 'array',
                    'x-deprecated': 'Use `user_identity_id`.',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/grant_access',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'grant_access',
        'x-response-key': null,
        'x-title': 'Grant Access to a Client Session',
      },
    },
    '/client_sessions/list': {
      post: {
        description:
          'Returns a list of all [client sessions](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).',
        operationId: 'clientSessionsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session that you want to retrieve.',
                    type: 'string',
                  },
                  connect_webview_id: {
                    description:
                      'ID of the [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) for which you want to retrieve client sessions.',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user by which you want to filter client sessions.',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the [user identity](https://docs.seam.co/latest/capability-guides/mobile-access/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) for which you want to retrieve client sessions.',
                    type: 'string',
                  },
                  without_user_identifier_key: {
                    description:
                      'Indicates whether to retrieve only client sessions without associated user identifier keys.',
                    type: 'boolean',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_sessions: {
                      items: { $ref: '#/components/schemas/client_session' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_sessions', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/list',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'client_sessions',
        'x-response-key': 'client_sessions',
        'x-title': 'List Client Sessions',
      },
    },
    '/client_sessions/revoke': {
      post: {
        description:
          'Revokes a [client session](https://docs.seam.co/latest/core-concepts/authentication/client-session-tokens).\n\nNote that [deleting a client session](https://docs.seam.co/latest/api/client_sessions/delete) is a separate action.',
        operationId: 'clientSessionsRevokePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  client_session_id: {
                    description:
                      'ID of the client session that you want to revoke.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['client_session_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/client_sessions/revoke',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': ['client_sessions'],
        'x-fern-sdk-method-name': 'revoke',
        'x-response-key': null,
        'x-title': 'Revoke a Client Session',
      },
    },
    '/connect_webviews/create': {
      post: {
        description:
          'Creates a new [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews).\n\nTo enable a user to connect their devices or systems to Seam, they must sign in to their device or system account. To enable a user to sign in, you create a `connect_webview`. After creating the Connect Webview, you receive a URL that you can use to display the visual component of this Connect Webview for your user. You can open an iframe or new window to display the Connect Webview.\n\nYou should make a new `connect_webview` for each unique login request. Each `connect_webview` tracks the user that signed in with it. You receive an error if you reuse a Connect Webview for the same user twice or if you use the same Connect Webview for multiple users.\n\nSee also: [Connect Webview Process](https://docs.seam.co/latest/core-concepts/connect-webviews/connect-webview-process).',
        operationId: 'connectWebviewsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  accepted_capabilities: {
                    description:
                      'List of accepted device capabilities that restrict the types of devices that can be connected through the Connect Webview. If not provided, defaults will be determined based on the accepted providers.',
                    items: {
                      description:
                        'High-level device capabilities that the Connect Webview can accept.',
                      enum: [
                        'lock',
                        'thermostat',
                        'noise_sensor',
                        'access_control',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  accepted_providers: {
                    description:
                      'Accepted device provider keys as an alternative to `provider_category`. Use this parameter to specify accepted providers explicitly. See [Customize the Brands to Display in Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-brands-to-display-in-your-connect-webviews). To list all provider keys, use [`/devices/list_device_providers`](https://docs.seam.co/latest/api/devices/list_device_providers) with no filters.',
                    items: {
                      enum: [
                        'dormakaba_community',
                        'legic_connect',
                        'akuvox',
                        'august',
                        'avigilon_alta',
                        'brivo',
                        'butterflymx',
                        'schlage',
                        'smartthings',
                        'yale',
                        'genie',
                        'doorking',
                        'salto',
                        'salto_ks',
                        'lockly',
                        'ttlock',
                        'linear',
                        'noiseaware',
                        'nuki',
                        'seam_relay_admin',
                        'igloo',
                        'kwikset',
                        'minut',
                        'my_2n',
                        'controlbyweb',
                        'nest',
                        'igloohome',
                        'ecobee',
                        'hubitat',
                        'four_suites',
                        'dormakaba_oracode',
                        'pti',
                        'wyze',
                        'seam_passport',
                        'visionline',
                        'assa_abloy_credential_service',
                        'seam_bridge',
                        'tedee',
                        'honeywell_resideo',
                        'latch',
                        'akiles',
                        'assa_abloy_vostio',
                        'assa_abloy_vostio_credential_service',
                        'tado',
                        'salto_space',
                        'sensi',
                        'kwikset2',
                        'yale_access',
                        'hid_cm',
                        'google_nest',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  automatically_manage_new_devices: {
                    default: true,
                    description:
                      'Indicates whether newly-added devices should appear as [managed devices](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices). See also: [Customize the Behavior Settings of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-behavior-settings-of-your-connect-webviews).',
                    type: 'boolean',
                  },
                  custom_metadata: {
                    additionalProperties: {
                      nullable: true,
                      oneOf: [
                        { maxLength: 500, type: 'string' },
                        { type: 'boolean' },
                      ],
                    },
                    description:
                      'Custom metadata that you want to associate with the Connect Webview. Supports up to 50 JSON key:value pairs. [Adding custom metadata to a Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews/attaching-custom-data-to-the-connect-webview) enables you to store custom information, like customer details or internal IDs from your application. The custom metadata is then transferred to any [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts) that were connected using the Connect Webview, making it easy to find and filter these resources in your [workspace](https://docs.seam.co/latest/core-concepts/workspaces). You can also [filter Connect Webviews by custom metadata](https://docs.seam.co/latest/core-concepts/connect-webviews/filtering-connect-webviews-by-custom-metadata).',
                    type: 'object',
                  },
                  custom_redirect_failure_url: {
                    description:
                      'Alternative URL that you want to redirect the user to on an error. If you do not set this parameter, the Connect Webview falls back to the `custom_redirect_url`.',
                    type: 'string',
                  },
                  custom_redirect_url: {
                    description:
                      'URL that you want to redirect the user to after the provider login is complete.',
                    type: 'string',
                  },
                  customer_id: { format: 'uuid', type: 'string' },
                  device_selection_mode: {
                    enum: ['none', 'single', 'multiple'],
                    type: 'string',
                    'x-undocumented': 'Not supported.',
                  },
                  provider_category: {
                    description:
                      'Specifies the category of providers that you want to include. To list all providers within a category, use [`/devices/list_device_providers`](https://docs.seam.co/latest/api/devices/list_device_providers) with the desired `provider_category` filter.',
                    enum: [
                      'stable',
                      'consumer_smartlocks',
                      'thermostats',
                      'noise_sensors',
                      'access_control_systems',
                      'internal_beta',
                    ],
                    type: 'string',
                  },
                  wait_for_device_creation: {
                    default: false,
                    description:
                      'Indicates whether Seam should finish syncing all devices in a newly-connected account before completing the associated Connect Webview. See also: [Customize the Behavior Settings of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-behavior-settings-of-your-connect-webviews).',
                    type: 'boolean',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connect_webview: {
                      $ref: '#/components/schemas/connect_webview',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['connect_webview', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/connect_webviews/create',
        tags: ['/connect_webviews'],
        'x-fern-sdk-group-name': ['connect_webviews'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'connect_webview',
        'x-response-key': 'connect_webview',
        'x-title': 'Create a Connect Webview',
      },
    },
    '/connect_webviews/delete': {
      post: {
        description:
          'Deletes a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews).\n\nYou do not need to delete a Connect Webview once a user completes it. Instead, you can simply ignore completed Connect Webviews.',
        operationId: 'connectWebviewsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['connect_webview_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/connect_webviews/delete',
        tags: ['/connect_webviews'],
        'x-fern-sdk-group-name': ['connect_webviews'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Connect Webview',
      },
    },
    '/connect_webviews/get': {
      post: {
        description:
          "Returns a specified [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews).\n\nUnless you're using a `custom_redirect_url`, you should poll a newly-created `connect_webview` to find out if the user has signed in or to get details about what devices they've connected.",
        operationId: 'connectWebviewsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['connect_webview_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connect_webview: {
                      $ref: '#/components/schemas/connect_webview',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['connect_webview', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/connect_webviews/get',
        tags: ['/connect_webviews'],
        'x-fern-sdk-group-name': ['connect_webviews'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'connect_webview',
        'x-response-key': 'connect_webview',
        'x-title': 'Get a Connect Webview',
      },
    },
    '/connect_webviews/list': {
      post: {
        description:
          'Returns a list of all [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews).',
        operationId: 'connectWebviewsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Custom metadata pairs by which you want to [filter Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/filtering-connect-webviews-by-custom-metadata). Returns Connect Webviews with `custom_metadata` that contains all of the provided key:value pairs.',
                    type: 'object',
                  },
                  customer_ids: { items: { type: 'string' }, type: 'array' },
                  limit: {
                    default: 500,
                    description:
                      'Maximum number of records to return per page.',
                    format: 'float',
                    type: 'number',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user by which you want to filter Connect Webviews.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connect_webviews: {
                      items: { $ref: '#/components/schemas/connect_webview' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    pagination: { $ref: '#/components/schemas/pagination' },
                  },
                  required: ['connect_webviews', 'pagination', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/connect_webviews/list',
        tags: ['/connect_webviews'],
        'x-fern-sdk-group-name': ['connect_webviews'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'connect_webviews',
        'x-response-key': 'connect_webviews',
        'x-title': 'List Connect Webviews',
      },
    },
    '/connected_accounts/delete': {
      post: {
        description:
          'Deletes a specified [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).\n\nDeleting a connected account triggers a `connected_account.deleted` event and removes the connected account and all data associated with the connected account from Seam, including devices, events, access codes, and so on. For every deleted resource, Seam sends a corresponding deleted event, but the resource is not deleted from the provider.\n\nFor example, if you delete a connected account with a device that has an access code, Seam sends a `connected_account.deleted` event, a `device.deleted` event, and an `access_code.deleted` event, but Seam does not remove the access code from the device.',
        operationId: 'connectedAccountsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connected_account_id: {
                    description:
                      'ID of the connected account that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['connected_account_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/connected_accounts/delete',
        tags: ['/connected_accounts'],
        'x-fern-sdk-group-name': ['connected_accounts'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Connected Account',
      },
    },
    '/connected_accounts/get': {
      post: {
        description:
          'Returns a specified [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
        operationId: 'connectedAccountsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    properties: {
                      connected_account_id: {
                        description:
                          'ID of the connected account that you want to get.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['connected_account_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      email: {
                        description:
                          'Email address associated with the connected account that you want to get.',
                        format: 'email',
                        type: 'string',
                      },
                    },
                    required: ['email'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connected_account: {
                      $ref: '#/components/schemas/connected_account',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['connected_account', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/connected_accounts/get',
        tags: ['/connected_accounts'],
        'x-fern-sdk-group-name': ['connected_accounts'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'connected_account',
        'x-response-key': 'connected_account',
        'x-title': 'Get a Connected Account',
      },
    },
    '/connected_accounts/list': {
      post: {
        description:
          'Returns a list of all [connected accounts](https://docs.seam.co/latest/core-concepts/connected-accounts).',
        operationId: 'connectedAccountsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Custom metadata pairs by which you want to filter connected accounts. Returns connected accounts with `custom_metadata` that contains all of the provided key:value pairs.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  limit: {
                    default: 11_000,
                    description:
                      'Maximum number of records to return per page.',
                    exclusiveMinimum: true,
                    minimum: 0,
                    type: 'integer',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'Your user ID for the user by which you want to filter connected accounts.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connected_accounts: {
                      items: { $ref: '#/components/schemas/connected_account' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    pagination: { $ref: '#/components/schemas/pagination' },
                  },
                  required: ['connected_accounts', 'pagination', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/connected_accounts/list',
        tags: ['/connected_accounts'],
        'x-fern-sdk-group-name': ['connected_accounts'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'connected_accounts',
        'x-response-key': 'connected_accounts',
        'x-title': 'List Connected Accounts',
      },
    },
    '/connected_accounts/sync': {
      post: {
        description:
          'Request a [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts) sync attempt for the specified `connected_account_id`.',
        operationId: 'connectedAccountsSyncPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connected_account_id: {
                    description:
                      'ID of the connected account that you want to sync.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['connected_account_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/connected_accounts/sync',
        tags: ['/connected_accounts'],
        'x-fern-sdk-group-name': ['connected_accounts'],
        'x-fern-sdk-method-name': 'sync',
        'x-response-key': null,
        'x-title': 'Sync a Connected Account',
      },
    },
    '/connected_accounts/update': {
      post: {
        description:
          'Updates a [connected account](https://docs.seam.co/latest/core-concepts/connected-accounts).',
        operationId: 'connectedAccountsUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  automatically_manage_new_devices: {
                    description:
                      'Indicates whether newly-added devices should appear as [managed devices](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).',
                    type: 'boolean',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  custom_metadata: {
                    additionalProperties: {
                      nullable: true,
                      oneOf: [
                        { maxLength: 500, type: 'string' },
                        { type: 'boolean' },
                      ],
                    },
                    description:
                      'Custom metadata that you want to associate with the connected account. Supports up to 50 JSON key:value pairs. [Adding custom metadata to a connected account](https://docs.seam.co/latest/core-concepts/connected-accounts/adding-custom-metadata-to-a-connected-account) enables you to store custom information, like customer details or internal IDs from your application. Then, you can [filter connected accounts by the desired metadata](https://docs.seam.co/latest/core-concepts/connected-accounts/filtering-connected-accounts-by-custom-metadata).',
                    type: 'object',
                  },
                },
                required: ['connected_account_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    connected_account: {
                      $ref: '#/components/schemas/connected_account',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['connected_account', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/connected_accounts/update',
        tags: ['/connected_accounts'],
        'x-fern-sdk-group-name': ['connected_accounts'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Connected Account',
      },
    },
    '/devices/delete': {
      post: {
        description:
          'Deletes a specified [device](https://docs.seam.co/latest/core-concepts/devices).',
        operationId: 'devicesDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'ID of the device that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/devices/delete',
        tags: ['/devices'],
        'x-deprecated':
          'Deleting a device is no longer supported and will be removed.',
        'x-fern-sdk-group-name': ['devices'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Device',
        'x-undocumented':
          'Deleting a device is no longer supported and will be removed.',
      },
    },
    '/devices/get': {
      post: {
        description:
          'Returns a specified [device](https://docs.seam.co/latest/core-concepts/devices).\n\nYou must specify either `device_id` or `name`.',
        operationId: 'devicesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'ID of the device that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the device that you want to get.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    device: { $ref: '#/components/schemas/device' },
                    ok: { type: 'boolean' },
                  },
                  required: ['device', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/devices/get',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'device',
        'x-response-key': 'device',
        'x-title': 'Get a Device',
      },
    },
    '/devices/list': {
      post: {
        description:
          'Returns a list of all [devices](https://docs.seam.co/latest/core-concepts/devices).',
        operationId: 'devicesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_ids: {
                    description:
                      'Array of IDs of the connected accounts for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned devices. Returns devices created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Set of key:value [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) pairs for which you want to list devices.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'Array of device IDs for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_type: {
                    description:
                      'Device type for which you want to list devices.',
                    oneOf: [
                      {
                        description: 'Device type for smartlocks.\n          ',
                        enum: [
                          'akuvox_lock',
                          'august_lock',
                          'brivo_access_point',
                          'butterflymx_panel',
                          'avigilon_alta_entry',
                          'doorking_lock',
                          'genie_door',
                          'igloo_lock',
                          'linear_lock',
                          'lockly_lock',
                          'kwikset_lock',
                          'nuki_lock',
                          'salto_lock',
                          'schlage_lock',
                          'seam_relay',
                          'smartthings_lock',
                          'wyze_lock',
                          'yale_lock',
                          'two_n_intercom',
                          'controlbyweb_device',
                          'ttlock_lock',
                          'igloohome_lock',
                          'hubitat_lock',
                          'four_suites_door',
                          'dormakaba_oracode_door',
                          'tedee_lock',
                          'akiles_lock',
                        ],
                        type: 'string',
                      },
                      {
                        description:
                          'Device type for noise sensors.\n          ',
                        enum: ['noiseaware_activity_zone', 'minut_sensor'],
                        type: 'string',
                      },
                      {
                        description: 'Device type for thermostats.\n          ',
                        enum: [
                          'ecobee_thermostat',
                          'nest_thermostat',
                          'honeywell_resideo_thermostat',
                          'tado_thermostat',
                          'sensi_thermostat',
                          'smartthings_thermostat',
                        ],
                        type: 'string',
                      },
                      {
                        description: 'Device type for phones.\n          ',
                        enum: ['ios_phone', 'android_phone'],
                        type: 'string',
                      },
                    ],
                  },
                  device_types: {
                    description:
                      'Array of device types for which you want to list devices.',
                    items: {
                      oneOf: [
                        {
                          description:
                            'Device type for smartlocks.\n          ',
                          enum: [
                            'akuvox_lock',
                            'august_lock',
                            'brivo_access_point',
                            'butterflymx_panel',
                            'avigilon_alta_entry',
                            'doorking_lock',
                            'genie_door',
                            'igloo_lock',
                            'linear_lock',
                            'lockly_lock',
                            'kwikset_lock',
                            'nuki_lock',
                            'salto_lock',
                            'schlage_lock',
                            'seam_relay',
                            'smartthings_lock',
                            'wyze_lock',
                            'yale_lock',
                            'two_n_intercom',
                            'controlbyweb_device',
                            'ttlock_lock',
                            'igloohome_lock',
                            'hubitat_lock',
                            'four_suites_door',
                            'dormakaba_oracode_door',
                            'tedee_lock',
                            'akiles_lock',
                          ],
                          type: 'string',
                        },
                        {
                          description:
                            'Device type for noise sensors.\n          ',
                          enum: ['noiseaware_activity_zone', 'minut_sensor'],
                          type: 'string',
                        },
                        {
                          description:
                            'Device type for thermostats.\n          ',
                          enum: [
                            'ecobee_thermostat',
                            'nest_thermostat',
                            'honeywell_resideo_thermostat',
                            'tado_thermostat',
                            'sensi_thermostat',
                            'smartthings_thermostat',
                          ],
                          type: 'string',
                        },
                        {
                          description: 'Device type for phones.\n          ',
                          enum: ['ios_phone', 'android_phone'],
                          type: 'string',
                        },
                      ],
                    },
                    type: 'array',
                  },
                  exclude_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  include_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of devices to return.',
                    format: 'float',
                    type: 'number',
                  },
                  manufacturer: {
                    description:
                      'Manufacturer for which you want to list devices.',
                    enum: [
                      'akuvox',
                      'august',
                      'avigilon_alta',
                      'brivo',
                      'butterflymx',
                      'doorking',
                      'four_suites',
                      'genie',
                      'igloo',
                      'keywe',
                      'kwikset',
                      'linear',
                      'lockly',
                      'nuki',
                      'philia',
                      'salto',
                      'samsung',
                      'schlage',
                      'seam',
                      'unknown',
                      'wyze',
                      'yale',
                      'two_n',
                      'ttlock',
                      'igloohome',
                      'hubitat',
                      'controlbyweb',
                      'dormakaba_oracode',
                      'tedee',
                      'akiles',
                      'ecobee',
                      'honeywell_resideo',
                      'kwikset2',
                      'minut',
                      'nest',
                      'noiseaware',
                      'tado',
                      'sensi',
                      'smartthings',
                    ],
                    type: 'string',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  unstable_location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  user_identifier_key: {
                    description:
                      'Your own internal user ID for the user for which you want to list devices.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    devices: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    pagination: { $ref: '#/components/schemas/pagination' },
                  },
                  required: ['devices', 'pagination', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session_with_customer: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/devices/list',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Devices',
      },
    },
    '/devices/list_device_providers': {
      post: {
        description:
          'Returns a list of all device providers.\n\nThe information that this endpoint returns for each provider includes a set of [capability flags](https://docs.seam.co/latest/capability-guides/device-and-system-capabilities#capability-flags), such as `device_provider.can_remotely_unlock`. If at least one supported device from a provider has a specific capability, the corresponding capability flag is `true`.\n\nWhen you create a [Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews), you can customize the providers—that is, the brands—that it displays. In the `/connect_webviews/create` request, include the desired set of device provider keys in the `accepted_providers` parameter. See also [Customize the Brands to Display in Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-brands-to-display-in-your-connect-webviews).',
        operationId: 'devicesListDeviceProvidersPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  provider_category: {
                    description:
                      'Category for which you want to list providers.',
                    enum: [
                      'stable',
                      'consumer_smartlocks',
                      'thermostats',
                      'noise_sensors',
                      'access_control_systems',
                    ],
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    device_providers: {
                      items: { $ref: '#/components/schemas/device_provider' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['device_providers', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/devices/list_device_providers',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices'],
        'x-fern-sdk-method-name': 'list_device_providers',
        'x-fern-sdk-return-value': 'device_providers',
        'x-response-key': 'device_providers',
        'x-title': 'List Device Providers',
      },
    },
    '/devices/simulate/connect': {
      post: {
        description:
          'Simulates connecting a device to Seam. Only applicable for [sandbox devices](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Testing Your App Against Device Disconnection and Removal](https://docs.seam.co/latest/core-concepts/devices/testing-your-app-against-device-disconnection-and-removal).',
        operationId: 'devicesSimulateConnectPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that you want to simulate connecting to Seam.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/devices/simulate/connect',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'simulate'],
        'x-fern-sdk-method-name': 'connect',
        'x-response-key': null,
        'x-title': 'Simulate Device Connection',
      },
    },
    '/devices/simulate/disconnect': {
      post: {
        description:
          'Simulates disconnecting a device from Seam. Only applicable for [sandbox devices](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Testing Your App Against Device Disconnection and Removal](https://docs.seam.co/latest/core-concepts/devices/testing-your-app-against-device-disconnection-and-removal).',
        operationId: 'devicesSimulateDisconnectPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that you want to simulate disconnecting from Seam.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/devices/simulate/disconnect',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'simulate'],
        'x-fern-sdk-method-name': 'disconnect',
        'x-response-key': null,
        'x-title': 'Simulate Device Disconnection',
      },
    },
    '/devices/simulate/remove': {
      post: {
        description:
          'Simulates removing a device from Seam. Only applicable for [sandbox devices](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Testing Your App Against Device Disconnection and Removal](https://docs.seam.co/latest/core-concepts/devices/testing-your-app-against-device-disconnection-and-removal).',
        operationId: 'devicesSimulateRemovePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that you want to simulate removing from Seam.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/devices/simulate/remove',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'simulate'],
        'x-fern-sdk-method-name': 'remove',
        'x-response-key': null,
        'x-title': 'Simulate Device Removal',
      },
    },
    '/devices/unmanaged/get': {
      post: {
        description:
          'Returns a specified [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).\n\nAn unmanaged device has a limited set of visible properties and a subset of supported events. You cannot control an unmanaged device. Any [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) on an unmanaged device are unmanaged. To control an unmanaged device with Seam, [convert it to a managed device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices#convert-an-unmanaged-device-to-managed).\n\nYou must specify either `device_id` or `name`.',
        operationId: 'devicesUnmanagedGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the unmanaged device that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description:
                      'Name of the unmanaged device that you want to get.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    device: { $ref: '#/components/schemas/unmanaged_device' },
                    ok: { type: 'boolean' },
                  },
                  required: ['device', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/devices/unmanaged/get',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'unmanaged'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'device',
        'x-response-key': 'device',
        'x-title': 'Get an Unmanaged Device',
      },
    },
    '/devices/unmanaged/list': {
      post: {
        description:
          'Returns a list of all [unmanaged devices](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).\n\nAn unmanaged device has a limited set of visible properties and a subset of supported events. You cannot control an unmanaged device. Any [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) on an unmanaged device are unmanaged. To control an unmanaged device with Seam, [convert it to a managed device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices#convert-an-unmanaged-device-to-managed).',
        operationId: 'devicesUnmanagedListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_ids: {
                    description:
                      'Array of IDs of the connected accounts for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned devices. Returns devices created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Set of key:value [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) pairs for which you want to list devices.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'Array of device IDs for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_type: {
                    description:
                      'Device type for which you want to list devices.',
                    oneOf: [
                      {
                        description: 'Device type for smartlocks.\n          ',
                        enum: [
                          'akuvox_lock',
                          'august_lock',
                          'brivo_access_point',
                          'butterflymx_panel',
                          'avigilon_alta_entry',
                          'doorking_lock',
                          'genie_door',
                          'igloo_lock',
                          'linear_lock',
                          'lockly_lock',
                          'kwikset_lock',
                          'nuki_lock',
                          'salto_lock',
                          'schlage_lock',
                          'seam_relay',
                          'smartthings_lock',
                          'wyze_lock',
                          'yale_lock',
                          'two_n_intercom',
                          'controlbyweb_device',
                          'ttlock_lock',
                          'igloohome_lock',
                          'hubitat_lock',
                          'four_suites_door',
                          'dormakaba_oracode_door',
                          'tedee_lock',
                          'akiles_lock',
                        ],
                        type: 'string',
                      },
                      {
                        description:
                          'Device type for noise sensors.\n          ',
                        enum: ['noiseaware_activity_zone', 'minut_sensor'],
                        type: 'string',
                      },
                      {
                        description: 'Device type for thermostats.\n          ',
                        enum: [
                          'ecobee_thermostat',
                          'nest_thermostat',
                          'honeywell_resideo_thermostat',
                          'tado_thermostat',
                          'sensi_thermostat',
                          'smartthings_thermostat',
                        ],
                        type: 'string',
                      },
                      {
                        description: 'Device type for phones.\n          ',
                        enum: ['ios_phone', 'android_phone'],
                        type: 'string',
                      },
                    ],
                  },
                  device_types: {
                    description:
                      'Array of device types for which you want to list devices.',
                    items: {
                      oneOf: [
                        {
                          description:
                            'Device type for smartlocks.\n          ',
                          enum: [
                            'akuvox_lock',
                            'august_lock',
                            'brivo_access_point',
                            'butterflymx_panel',
                            'avigilon_alta_entry',
                            'doorking_lock',
                            'genie_door',
                            'igloo_lock',
                            'linear_lock',
                            'lockly_lock',
                            'kwikset_lock',
                            'nuki_lock',
                            'salto_lock',
                            'schlage_lock',
                            'seam_relay',
                            'smartthings_lock',
                            'wyze_lock',
                            'yale_lock',
                            'two_n_intercom',
                            'controlbyweb_device',
                            'ttlock_lock',
                            'igloohome_lock',
                            'hubitat_lock',
                            'four_suites_door',
                            'dormakaba_oracode_door',
                            'tedee_lock',
                            'akiles_lock',
                          ],
                          type: 'string',
                        },
                        {
                          description:
                            'Device type for noise sensors.\n          ',
                          enum: ['noiseaware_activity_zone', 'minut_sensor'],
                          type: 'string',
                        },
                        {
                          description:
                            'Device type for thermostats.\n          ',
                          enum: [
                            'ecobee_thermostat',
                            'nest_thermostat',
                            'honeywell_resideo_thermostat',
                            'tado_thermostat',
                            'sensi_thermostat',
                            'smartthings_thermostat',
                          ],
                          type: 'string',
                        },
                        {
                          description: 'Device type for phones.\n          ',
                          enum: ['ios_phone', 'android_phone'],
                          type: 'string',
                        },
                      ],
                    },
                    type: 'array',
                  },
                  exclude_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  include_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of devices to return.',
                    format: 'float',
                    type: 'number',
                  },
                  manufacturer: {
                    description:
                      'Manufacturer for which you want to list devices.',
                    enum: [
                      'akuvox',
                      'august',
                      'avigilon_alta',
                      'brivo',
                      'butterflymx',
                      'doorking',
                      'four_suites',
                      'genie',
                      'igloo',
                      'keywe',
                      'kwikset',
                      'linear',
                      'lockly',
                      'nuki',
                      'philia',
                      'salto',
                      'samsung',
                      'schlage',
                      'seam',
                      'unknown',
                      'wyze',
                      'yale',
                      'two_n',
                      'ttlock',
                      'igloohome',
                      'hubitat',
                      'controlbyweb',
                      'dormakaba_oracode',
                      'tedee',
                      'akiles',
                      'ecobee',
                      'honeywell_resideo',
                      'kwikset2',
                      'minut',
                      'nest',
                      'noiseaware',
                      'tado',
                      'sensi',
                      'smartthings',
                    ],
                    type: 'string',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  unstable_location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  user_identifier_key: {
                    description:
                      'Your own internal user ID for the user for which you want to list devices.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    devices: {
                      items: { $ref: '#/components/schemas/unmanaged_device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['devices', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/devices/unmanaged/list',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'unmanaged'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Unmanaged Devices',
      },
    },
    '/devices/unmanaged/update': {
      patch: {
        description:
          'Updates a specified [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices). To convert an unmanaged device to managed, set `is_managed` to `true`.\n\nAn unmanaged device has a limited set of visible properties and a subset of supported events. You cannot control an unmanaged device. Any [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) on an unmanaged device are unmanaged. To control an unmanaged device with Seam, [convert it to a managed device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices#convert-an-unmanaged-device-to-managed).',
        operationId: 'devicesUnmanagedUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the unmanaged device that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  is_managed: {
                    description:
                      'Indicates whether the device is managed. Set this parameter to `true` to convert an unmanaged device to managed.',
                    enum: [true],
                    type: 'boolean',
                  },
                },
                required: ['device_id', 'is_managed'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/devices/unmanaged/update',
        tags: ['/devices'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update an Unmanaged Device',
      },
      post: {
        description:
          'Updates a specified [unmanaged device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices). To convert an unmanaged device to managed, set `is_managed` to `true`.\n\nAn unmanaged device has a limited set of visible properties and a subset of supported events. You cannot control an unmanaged device. Any [access codes](https://docs.seam.co/latest/capability-guides/smart-locks/access-codes/migrating-existing-access-codes) on an unmanaged device are unmanaged. To control an unmanaged device with Seam, [convert it to a managed device](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices#convert-an-unmanaged-device-to-managed).',
        operationId: 'devicesUnmanagedUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the unmanaged device that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  is_managed: {
                    description:
                      'Indicates whether the device is managed. Set this parameter to `true` to convert an unmanaged device to managed.',
                    enum: [true],
                    type: 'boolean',
                  },
                },
                required: ['device_id', 'is_managed'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/devices/unmanaged/update',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices', 'unmanaged'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update an Unmanaged Device',
      },
    },
    '/devices/update': {
      patch: {
        description:
          "Updates a specified [device](https://docs.seam.co/latest/core-concepts/devices).\n\nYou can add or change [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) for a device, change the device's name, or [convert a managed device to unmanaged](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).",
        operationId: 'devicesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  custom_metadata: {
                    additionalProperties: {
                      nullable: true,
                      oneOf: [
                        { maxLength: 500, type: 'string' },
                        { type: 'boolean' },
                      ],
                    },
                    description:
                      'Custom metadata that you want to associate with the device. Supports up to 50 JSON key:value pairs. [Adding custom metadata to a device](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) enables you to store custom information, like customer details or internal IDs from your application. Then, you can [filter devices by the desired metadata](https://docs.seam.co/latest/core-concepts/devices/filtering-devices-by-custom-metadata).',
                    type: 'object',
                  },
                  device_id: {
                    description: 'ID of the device that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  is_managed: {
                    default: true,
                    description:
                      'Indicates whether the device is managed. To unmanage a device, set `is_managed` to `false`.',
                    type: 'boolean',
                  },
                  name: {
                    description: 'Name for the device.',
                    nullable: true,
                    type: 'string',
                  },
                  properties: {
                    properties: {
                      name: {
                        description: 'Name for the device.',
                        nullable: true,
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/devices/update',
        tags: ['/devices'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Device',
      },
      post: {
        description:
          "Updates a specified [device](https://docs.seam.co/latest/core-concepts/devices).\n\nYou can add or change [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) for a device, change the device's name, or [convert a managed device to unmanaged](https://docs.seam.co/latest/core-concepts/devices/managed-and-unmanaged-devices).",
        operationId: 'devicesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  custom_metadata: {
                    additionalProperties: {
                      nullable: true,
                      oneOf: [
                        { maxLength: 500, type: 'string' },
                        { type: 'boolean' },
                      ],
                    },
                    description:
                      'Custom metadata that you want to associate with the device. Supports up to 50 JSON key:value pairs. [Adding custom metadata to a device](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) enables you to store custom information, like customer details or internal IDs from your application. Then, you can [filter devices by the desired metadata](https://docs.seam.co/latest/core-concepts/devices/filtering-devices-by-custom-metadata).',
                    type: 'object',
                  },
                  device_id: {
                    description: 'ID of the device that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  is_managed: {
                    default: true,
                    description:
                      'Indicates whether the device is managed. To unmanage a device, set `is_managed` to `false`.',
                    type: 'boolean',
                  },
                  name: {
                    description: 'Name for the device.',
                    nullable: true,
                    type: 'string',
                  },
                  properties: {
                    properties: {
                      name: {
                        description: 'Name for the device.',
                        nullable: true,
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/devices/update',
        tags: ['/devices'],
        'x-fern-sdk-group-name': ['devices'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Device',
      },
    },
    '/events/get': {
      post: {
        description:
          'Returns a specified event. This endpoint returns the same event that would be sent to a [webhook](https://docs.seam.co/latest/developer-tools/webhooks), but it enables you to retrieve an event that already took place.',
        operationId: 'eventsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'Unique identifier for the device that triggered the event that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  event_id: {
                    description:
                      'Unique identifier for the event that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  event_type: {
                    description: 'Type of the event that you want to get.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    event: { $ref: '#/components/schemas/event' },
                    message: { type: 'string' },
                    ok: { type: 'boolean' },
                  },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/events/get',
        tags: ['/events'],
        'x-fern-sdk-group-name': ['events'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'event',
        'x-response-key': 'event',
        'x-title': 'Get an Event',
      },
    },
    '/events/list': {
      post: {
        description:
          'Returns a list of all events. This endpoint returns the same events that would be sent to a [webhook](https://docs.seam.co/latest/developer-tools/webhooks), but it enables you to filter or see events that already took place.',
        operationId: 'eventsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_code_id: {
                    description:
                      'ID of the access code for which you want to list events.',
                    format: 'uuid',
                    type: 'string',
                  },
                  access_code_ids: {
                    description:
                      'IDs of the access codes for which you want to list events.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system for which you want to list events.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_system_ids: {
                    description:
                      'IDs of the access systems for which you want to list events.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  between: {
                    description:
                      'Lower and upper timestamps to define an exclusive interval containing the events that you want to list. You must include `since` or `between`.',
                    items: {
                      oneOf: [
                        { type: 'string' },
                        { format: 'date-time', type: 'string' },
                      ],
                    },
                    maxItems: 2,
                    minItems: 2,
                    type: 'array',
                  },
                  connect_webview_id: {
                    description:
                      'IDs of the connected accounts for which you want to list events.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list events.',
                    format: 'uuid',
                    type: 'string',
                  },
                  customer_ids: {
                    description:
                      'IDs of the customers for which you want to list events.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to list events.',
                    format: 'uuid',
                    type: 'string',
                  },
                  device_ids: {
                    description:
                      'IDs of the devices for which you want to list events.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  event_ids: {
                    description: 'IDs of the events that you want to list.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  event_type: {
                    description: 'Type of the events that you want to list.',
                    enum: [
                      'access_code.created',
                      'access_code.changed',
                      'access_code.scheduled_on_device',
                      'access_code.set_on_device',
                      'access_code.removed_from_device',
                      'access_code.delay_in_setting_on_device',
                      'access_code.failed_to_set_on_device',
                      'access_code.deleted',
                      'access_code.delay_in_removing_from_device',
                      'access_code.failed_to_remove_from_device',
                      'access_code.modified_external_to_seam',
                      'access_code.deleted_external_to_seam',
                      'access_code.backup_access_code_pulled',
                      'access_code.unmanaged.converted_to_managed',
                      'access_code.unmanaged.failed_to_convert_to_managed',
                      'access_code.unmanaged.created',
                      'access_code.unmanaged.removed',
                      'access_grant.created',
                      'access_grant.deleted',
                      'access_grant.access_granted_to_all_doors',
                      'access_grant.access_granted_to_door',
                      'access_grant.access_to_door_lost',
                      'access_method.issued',
                      'access_method.revoked',
                      'access_method.card_encoding_required',
                      'access_method.deleted',
                      'acs_system.connected',
                      'acs_system.added',
                      'acs_system.disconnected',
                      'acs_credential.deleted',
                      'acs_credential.issued',
                      'acs_credential.reissued',
                      'acs_credential.invalidated',
                      'acs_user.created',
                      'acs_user.deleted',
                      'acs_encoder.added',
                      'acs_encoder.removed',
                      'acs_access_group.deleted',
                      'acs_entrance.added',
                      'acs_entrance.removed',
                      'client_session.deleted',
                      'connected_account.connected',
                      'connected_account.created',
                      'connected_account.successful_login',
                      'connected_account.disconnected',
                      'connected_account.completed_first_sync',
                      'connected_account.deleted',
                      'connected_account.completed_first_sync_after_reconnection',
                      'action_attempt.lock_door.succeeded',
                      'action_attempt.lock_door.failed',
                      'action_attempt.unlock_door.succeeded',
                      'action_attempt.unlock_door.failed',
                      'connect_webview.login_succeeded',
                      'connect_webview.login_failed',
                      'device.connected',
                      'device.added',
                      'device.converted_to_unmanaged',
                      'device.unmanaged.converted_to_managed',
                      'device.unmanaged.connected',
                      'device.disconnected',
                      'device.unmanaged.disconnected',
                      'device.tampered',
                      'device.low_battery',
                      'device.battery_status_changed',
                      'device.removed',
                      'device.deleted',
                      'device.third_party_integration_detected',
                      'device.third_party_integration_no_longer_detected',
                      'device.salto.privacy_mode_activated',
                      'device.salto.privacy_mode_deactivated',
                      'device.connection_became_flaky',
                      'device.connection_stabilized',
                      'device.error.subscription_required',
                      'device.error.subscription_required.resolved',
                      'device.accessory_keypad_connected',
                      'device.accessory_keypad_disconnected',
                      'noise_sensor.noise_threshold_triggered',
                      'lock.locked',
                      'lock.unlocked',
                      'lock.access_denied',
                      'thermostat.climate_preset_activated',
                      'thermostat.manually_adjusted',
                      'thermostat.temperature_threshold_exceeded',
                      'thermostat.temperature_threshold_no_longer_exceeded',
                      'thermostat.temperature_reached_set_point',
                      'thermostat.temperature_changed',
                      'device.name_changed',
                      'enrollment_automation.deleted',
                      'phone.deactivated',
                    ],
                    type: 'string',
                  },
                  event_types: {
                    description: 'Types of the events that you want to list.',
                    items: {
                      enum: [
                        'access_code.created',
                        'access_code.changed',
                        'access_code.scheduled_on_device',
                        'access_code.set_on_device',
                        'access_code.removed_from_device',
                        'access_code.delay_in_setting_on_device',
                        'access_code.failed_to_set_on_device',
                        'access_code.deleted',
                        'access_code.delay_in_removing_from_device',
                        'access_code.failed_to_remove_from_device',
                        'access_code.modified_external_to_seam',
                        'access_code.deleted_external_to_seam',
                        'access_code.backup_access_code_pulled',
                        'access_code.unmanaged.converted_to_managed',
                        'access_code.unmanaged.failed_to_convert_to_managed',
                        'access_code.unmanaged.created',
                        'access_code.unmanaged.removed',
                        'access_grant.created',
                        'access_grant.deleted',
                        'access_grant.access_granted_to_all_doors',
                        'access_grant.access_granted_to_door',
                        'access_grant.access_to_door_lost',
                        'access_method.issued',
                        'access_method.revoked',
                        'access_method.card_encoding_required',
                        'access_method.deleted',
                        'acs_system.connected',
                        'acs_system.added',
                        'acs_system.disconnected',
                        'acs_credential.deleted',
                        'acs_credential.issued',
                        'acs_credential.reissued',
                        'acs_credential.invalidated',
                        'acs_user.created',
                        'acs_user.deleted',
                        'acs_encoder.added',
                        'acs_encoder.removed',
                        'acs_access_group.deleted',
                        'acs_entrance.added',
                        'acs_entrance.removed',
                        'client_session.deleted',
                        'connected_account.connected',
                        'connected_account.created',
                        'connected_account.successful_login',
                        'connected_account.disconnected',
                        'connected_account.completed_first_sync',
                        'connected_account.deleted',
                        'connected_account.completed_first_sync_after_reconnection',
                        'action_attempt.lock_door.succeeded',
                        'action_attempt.lock_door.failed',
                        'action_attempt.unlock_door.succeeded',
                        'action_attempt.unlock_door.failed',
                        'connect_webview.login_succeeded',
                        'connect_webview.login_failed',
                        'device.connected',
                        'device.added',
                        'device.converted_to_unmanaged',
                        'device.unmanaged.converted_to_managed',
                        'device.unmanaged.connected',
                        'device.disconnected',
                        'device.unmanaged.disconnected',
                        'device.tampered',
                        'device.low_battery',
                        'device.battery_status_changed',
                        'device.removed',
                        'device.deleted',
                        'device.third_party_integration_detected',
                        'device.third_party_integration_no_longer_detected',
                        'device.salto.privacy_mode_activated',
                        'device.salto.privacy_mode_deactivated',
                        'device.connection_became_flaky',
                        'device.connection_stabilized',
                        'device.error.subscription_required',
                        'device.error.subscription_required.resolved',
                        'device.accessory_keypad_connected',
                        'device.accessory_keypad_disconnected',
                        'noise_sensor.noise_threshold_triggered',
                        'lock.locked',
                        'lock.unlocked',
                        'lock.access_denied',
                        'thermostat.climate_preset_activated',
                        'thermostat.manually_adjusted',
                        'thermostat.temperature_threshold_exceeded',
                        'thermostat.temperature_threshold_no_longer_exceeded',
                        'thermostat.temperature_reached_set_point',
                        'thermostat.temperature_changed',
                        'device.name_changed',
                        'enrollment_automation.deleted',
                        'phone.deactivated',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of events to return.',
                    format: 'float',
                    type: 'number',
                  },
                  since: {
                    description:
                      'Timestamp to indicate the beginning generation time for the events that you want to list. You must include `since` or `between`.',
                    type: 'string',
                  },
                  unstable_offset: {
                    description: 'Offset for the events that you want to list.',
                    format: 'float',
                    type: 'number',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    events: {
                      items: { $ref: '#/components/schemas/event' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['events', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/events/list',
        tags: ['/events'],
        'x-fern-sdk-group-name': ['events'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'events',
        'x-response-key': 'events',
        'x-title': 'List Events',
      },
    },
    '/locks/get': {
      post: {
        description:
          'Returns a specified [lock](https://docs.seam.co/latest/capability-guides/smart-locks). **Use `/devices/get` instead.**',
        operationId: 'locksGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'ID of the lock that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the lock that you want to get.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    device: { $ref: '#/components/schemas/device' },
                    lock: { $ref: '#/components/schemas/device' },
                    ok: { type: 'boolean' },
                  },
                  required: ['lock', 'device', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/locks/get',
        tags: ['/locks'],
        'x-deprecated': 'Use `/devices/get` instead.',
        'x-fern-sdk-group-name': ['locks'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'device',
        'x-response-key': 'device',
        'x-title': 'Get a Lock',
      },
    },
    '/locks/list': {
      post: {
        description:
          'Returns a list of all [locks](https://docs.seam.co/latest/capability-guides/smart-locks).',
        operationId: 'locksListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_ids: {
                    description:
                      'Array of IDs of the connected accounts for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned devices. Returns devices created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Set of key:value [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) pairs for which you want to list devices.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'Array of device IDs for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_type: {
                    description:
                      'Device type of the locks that you want to list.',
                    enum: [
                      'akuvox_lock',
                      'august_lock',
                      'brivo_access_point',
                      'butterflymx_panel',
                      'avigilon_alta_entry',
                      'doorking_lock',
                      'genie_door',
                      'igloo_lock',
                      'linear_lock',
                      'lockly_lock',
                      'kwikset_lock',
                      'nuki_lock',
                      'salto_lock',
                      'schlage_lock',
                      'seam_relay',
                      'smartthings_lock',
                      'wyze_lock',
                      'yale_lock',
                      'two_n_intercom',
                      'controlbyweb_device',
                      'ttlock_lock',
                      'igloohome_lock',
                      'hubitat_lock',
                      'four_suites_door',
                      'dormakaba_oracode_door',
                      'tedee_lock',
                      'akiles_lock',
                    ],
                    type: 'string',
                  },
                  device_types: {
                    description:
                      'Device types of the locks that you want to list.',
                    items: {
                      description: 'Device type for smartlocks.\n          ',
                      enum: [
                        'akuvox_lock',
                        'august_lock',
                        'brivo_access_point',
                        'butterflymx_panel',
                        'avigilon_alta_entry',
                        'doorking_lock',
                        'genie_door',
                        'igloo_lock',
                        'linear_lock',
                        'lockly_lock',
                        'kwikset_lock',
                        'nuki_lock',
                        'salto_lock',
                        'schlage_lock',
                        'seam_relay',
                        'smartthings_lock',
                        'wyze_lock',
                        'yale_lock',
                        'two_n_intercom',
                        'controlbyweb_device',
                        'ttlock_lock',
                        'igloohome_lock',
                        'hubitat_lock',
                        'four_suites_door',
                        'dormakaba_oracode_door',
                        'tedee_lock',
                        'akiles_lock',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  exclude_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  include_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of devices to return.',
                    format: 'float',
                    type: 'number',
                  },
                  manufacturer: {
                    description:
                      'Manufacturer of the locks that you want to list.',
                    enum: [
                      'akuvox',
                      'august',
                      'brivo',
                      'butterflymx',
                      'avigilon_alta',
                      'doorking',
                      'genie',
                      'igloo',
                      'linear',
                      'lockly',
                      'kwikset',
                      'nuki',
                      'salto',
                      'schlage',
                      'seam',
                      'wyze',
                      'yale',
                      'two_n',
                      'controlbyweb',
                      'ttlock',
                      'igloohome',
                      'hubitat',
                      'four_suites',
                      'dormakaba_oracode',
                      'tedee',
                      'akiles',
                      'kwikset2',
                      'smartthings',
                    ],
                    type: 'string',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  unstable_location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  user_identifier_key: {
                    description:
                      'Your own internal user ID for the user for which you want to list devices.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    devices: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    locks: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['locks', 'devices', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/locks/list',
        tags: ['/locks'],
        'x-fern-sdk-group-name': ['locks'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Locks',
      },
    },
    '/locks/lock_door': {
      post: {
        description:
          'Locks a [lock](https://docs.seam.co/latest/capability-guides/smart-locks). See also [Locking and Unlocking Smart Locks](https://docs.seam.co/latest/capability-guides/smart-locks/lock-and-unlock).',
        operationId: 'locksLockDoorPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'ID of the lock that you want to lock.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/locks/lock_door',
        tags: ['/locks'],
        'x-action-attempt-type': 'LOCK_DOOR',
        'x-fern-sdk-group-name': ['locks'],
        'x-fern-sdk-method-name': 'lock_door',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Lock a Lock',
      },
    },
    '/locks/simulate/keypad_code_entry': {
      post: {
        description:
          'Simulates the entry of a code on a keypad. You can only perform this action for [August](https://docs.seam.co/latest/device-and-system-integration-guides/august-locks) devices within [sandbox workspaces](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'locksSimulateKeypadCodeEntryPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  code: {
                    description:
                      'Code that you want to simulate entering on a keypad.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the device for which you want to simulate a keypad code entry.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id', 'code'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/locks/simulate/keypad_code_entry',
        tags: ['/locks'],
        'x-action-attempt-type': 'SIMULATE_KEYPAD_CODE_ENTRY',
        'x-fern-sdk-group-name': ['locks', 'simulate'],
        'x-fern-sdk-method-name': 'keypad_code_entry',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/locks/simulate/manual_lock_via_keypad': {
      post: {
        description:
          'Simulates a manual lock action using a keypad. You can only perform this action for [August](https://docs.seam.co/latest/device-and-system-integration-guides/august-locks) devices within [sandbox workspaces](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'locksSimulateManualLockViaKeypadPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to simulate a manual lock action using a keypad.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/locks/simulate/manual_lock_via_keypad',
        tags: ['/locks'],
        'x-action-attempt-type': 'SIMULATE_MANUAL_LOCK_VIA_KEYPAD',
        'x-fern-sdk-group-name': ['locks', 'simulate'],
        'x-fern-sdk-method-name': 'manual_lock_via_keypad',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/locks/unlock_door': {
      post: {
        description:
          'Unlocks a [lock](https://docs.seam.co/latest/capability-guides/smart-locks). See also [Locking and Unlocking Smart Locks](https://docs.seam.co/latest/capability-guides/smart-locks/lock-and-unlock).',
        operationId: 'locksUnlockDoorPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'ID of the lock that you want to unlock.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/locks/unlock_door',
        tags: ['/locks'],
        'x-action-attempt-type': 'UNLOCK_DOOR',
        'x-fern-sdk-group-name': ['locks'],
        'x-fern-sdk-method-name': 'unlock_door',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Unlock a Lock',
      },
    },
    '/networks/get': {
      post: {
        operationId: 'networksGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: { network_id: { format: 'uuid', type: 'string' } },
                required: ['network_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    network: {
                      properties: {
                        created_at: { format: 'date-time', type: 'string' },
                        display_name: { type: 'string' },
                        network_id: { format: 'uuid', type: 'string' },
                        workspace_id: { format: 'uuid', type: 'string' },
                      },
                      required: [
                        'network_id',
                        'workspace_id',
                        'display_name',
                        'created_at',
                      ],
                      type: 'object',
                      'x-route-path': '/networks',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['network', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/networks/get',
        tags: ['/networks'],
        'x-deprecated': 'Will be removed.',
        'x-fern-sdk-group-name': ['networks'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'network',
        'x-response-key': 'network',
        'x-undocumented': 'Deprecated.',
      },
    },
    '/networks/list': {
      post: {
        operationId: 'networksListPost',
        requestBody: {
          content: {
            'application/json': { schema: { properties: {}, type: 'object' } },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    networks: {
                      items: {
                        properties: {
                          created_at: { format: 'date-time', type: 'string' },
                          display_name: { type: 'string' },
                          network_id: { format: 'uuid', type: 'string' },
                          workspace_id: { format: 'uuid', type: 'string' },
                        },
                        required: [
                          'network_id',
                          'workspace_id',
                          'display_name',
                          'created_at',
                        ],
                        type: 'object',
                        'x-route-path': '/networks',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['networks', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/networks/list',
        tags: ['/networks'],
        'x-deprecated': 'Will be removed.',
        'x-fern-sdk-group-name': ['networks'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'networks',
        'x-response-key': 'networks',
        'x-undocumented': 'Deprecated.',
      },
    },
    '/noise_sensors/list': {
      post: {
        description:
          'Returns a list of all [noise sensors](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_ids: {
                    description:
                      'Array of IDs of the connected accounts for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned devices. Returns devices created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Set of key:value [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) pairs for which you want to list devices.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'Array of device IDs for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_type: {
                    description:
                      'Device type of the noise sensors that you want to list.',
                    enum: ['noiseaware_activity_zone', 'minut_sensor'],
                    type: 'string',
                  },
                  device_types: {
                    description:
                      'Device types of the noise sensors that you want to list.',
                    items: {
                      description: 'Device type for noise sensors.\n          ',
                      enum: ['noiseaware_activity_zone', 'minut_sensor'],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  exclude_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  include_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of devices to return.',
                    format: 'float',
                    type: 'number',
                  },
                  manufacturer: {
                    description:
                      'Manufacturers of the noise sensors that you want to list.',
                    enum: ['minut', 'noiseaware'],
                    type: 'string',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  unstable_location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  user_identifier_key: {
                    description:
                      'Your own internal user ID for the user for which you want to list devices.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    devices: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    noise_sensors: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['noise_sensors', 'devices', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/noise_sensors/list',
        tags: ['/noise_sensors'],
        'x-fern-sdk-group-name': ['noise_sensors'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Noise Sensors',
      },
    },
    '/noise_sensors/noise_thresholds/create': {
      post: {
        description:
          'Creates a new [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors). Thresholds represent the limits of noise tolerated at a property, which can be customized for each hour of the day. Each device has its own default thresholds, but you can use the Seam API to modify them.',
        operationId: 'noiseSensorsNoiseThresholdsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to create a noise threshold.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_daily_at: {
                    description:
                      'Time at which the new noise threshold should become inactive daily.',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the new noise threshold.',
                    type: 'string',
                  },
                  noise_threshold_decibels: {
                    description:
                      'Noise level in decibels for the new noise threshold.',
                    format: 'float',
                    type: 'number',
                  },
                  noise_threshold_nrs: {
                    description:
                      'Noise level in Noiseaware Noise Risk Score (NRS) for the new noise threshold. This parameter is only relevant for [Noiseaware sensors](https://docs.seam.co/latest/device-and-system-integration-guides/noiseaware-sensors).',
                    format: 'float',
                    type: 'number',
                  },
                  starts_daily_at: {
                    description:
                      'Time at which the new noise threshold should become active daily.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id', 'starts_daily_at', 'ends_daily_at'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    noise_threshold: {
                      $ref: '#/components/schemas/noise_threshold',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'noise_threshold', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/create',
        tags: ['/noise_sensors'],
        'x-action-attempt-type': 'CREATE_NOISE_THRESHOLD',
        'x-fern-sdk-group-name': ['noise_sensors', 'noise_thresholds'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'noise_threshold',
        'x-response-key': 'noise_threshold',
        'x-title': 'Create a Noise Threshold',
      },
    },
    '/noise_sensors/noise_thresholds/delete': {
      post: {
        description:
          'Deletes a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) from a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that contains the noise threshold that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                  noise_threshold_id: {
                    description:
                      'ID of the noise threshold that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['noise_threshold_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/delete',
        tags: ['/noise_sensors'],
        'x-action-attempt-type': 'DELETE_NOISE_THRESHOLD',
        'x-fern-sdk-group-name': ['noise_sensors', 'noise_thresholds'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Noise Threshold',
      },
    },
    '/noise_sensors/noise_thresholds/get': {
      post: {
        description:
          'Returns a specified [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  noise_threshold_id: {
                    description:
                      'ID of the noise threshold that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['noise_threshold_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    noise_threshold: {
                      $ref: '#/components/schemas/noise_threshold',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['noise_threshold', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/get',
        tags: ['/noise_sensors'],
        'x-fern-sdk-group-name': ['noise_sensors', 'noise_thresholds'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'noise_threshold',
        'x-response-key': 'noise_threshold',
        'x-title': 'Get a Noise Threshold',
      },
    },
    '/noise_sensors/noise_thresholds/list': {
      post: {
        description:
          'Returns a list of all [noise thresholds](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to list noise thresholds.',
                    format: 'uuid',
                    type: 'string',
                  },
                  is_programmed: {
                    description:
                      'Enables you to limit the returned noise thresholds by whether they are programmed on the noise sensor. To list only noise thresholds that are programmed on the noise sensor, set this parameter to `true`. To list only noise thresholds that are not programmed on the noise sensor, se this parameter to `false`.',
                    type: 'boolean',
                    'x-undocumented':
                      'Not sure if this parameter is supported or what it does.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    noise_thresholds: {
                      items: { $ref: '#/components/schemas/noise_threshold' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['noise_thresholds', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/list',
        tags: ['/noise_sensors'],
        'x-fern-sdk-group-name': ['noise_sensors', 'noise_thresholds'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'noise_thresholds',
        'x-response-key': 'noise_thresholds',
        'x-title': 'List Noise Thresholds',
      },
    },
    '/noise_sensors/noise_thresholds/update': {
      patch: {
        description:
          'Updates a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that contains the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_daily_at: {
                    description:
                      'Time at which the noise threshold should become inactive daily.',
                    type: 'string',
                  },
                  name: {
                    description:
                      'Name of the noise threshold that you want to update.',
                    type: 'string',
                  },
                  noise_threshold_decibels: {
                    description:
                      'Noise level in decibels for the noise threshold.',
                    format: 'float',
                    type: 'number',
                  },
                  noise_threshold_id: {
                    description:
                      'ID of the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  noise_threshold_nrs: {
                    description:
                      'Noise level in Noiseaware Noise Risk Score (NRS) for the noise threshold. This parameter is only relevant for [Noiseaware sensors](https://docs.seam.co/latest/device-and-system-integration-guides/noiseaware-sensors).',
                    format: 'float',
                    type: 'number',
                  },
                  starts_daily_at: {
                    description:
                      'Time at which the noise threshold should become active daily.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['noise_threshold_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/update',
        tags: ['/noise_sensors'],
        'x-action-attempt-type': 'UPDATE_NOISE_THRESHOLD',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Noise Threshold',
      },
      post: {
        description:
          'Updates a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that contains the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_daily_at: {
                    description:
                      'Time at which the noise threshold should become inactive daily.',
                    type: 'string',
                  },
                  name: {
                    description:
                      'Name of the noise threshold that you want to update.',
                    type: 'string',
                  },
                  noise_threshold_decibels: {
                    description:
                      'Noise level in decibels for the noise threshold.',
                    format: 'float',
                    type: 'number',
                  },
                  noise_threshold_id: {
                    description:
                      'ID of the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  noise_threshold_nrs: {
                    description:
                      'Noise level in Noiseaware Noise Risk Score (NRS) for the noise threshold. This parameter is only relevant for [Noiseaware sensors](https://docs.seam.co/latest/device-and-system-integration-guides/noiseaware-sensors).',
                    format: 'float',
                    type: 'number',
                  },
                  starts_daily_at: {
                    description:
                      'Time at which the noise threshold should become active daily.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['noise_threshold_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/update',
        tags: ['/noise_sensors'],
        'x-action-attempt-type': 'UPDATE_NOISE_THRESHOLD',
        'x-fern-sdk-group-name': ['noise_sensors', 'noise_thresholds'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Noise Threshold',
      },
      put: {
        description:
          'Updates a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors).',
        operationId: 'noiseSensorsNoiseThresholdsUpdatePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device that contains the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  ends_daily_at: {
                    description:
                      'Time at which the noise threshold should become inactive daily.',
                    type: 'string',
                  },
                  name: {
                    description:
                      'Name of the noise threshold that you want to update.',
                    type: 'string',
                  },
                  noise_threshold_decibels: {
                    description:
                      'Noise level in decibels for the noise threshold.',
                    format: 'float',
                    type: 'number',
                  },
                  noise_threshold_id: {
                    description:
                      'ID of the noise threshold that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  noise_threshold_nrs: {
                    description:
                      'Noise level in Noiseaware Noise Risk Score (NRS) for the noise threshold. This parameter is only relevant for [Noiseaware sensors](https://docs.seam.co/latest/device-and-system-integration-guides/noiseaware-sensors).',
                    format: 'float',
                    type: 'number',
                  },
                  starts_daily_at: {
                    description:
                      'Time at which the noise threshold should become active daily.',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['noise_threshold_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/noise_thresholds/update',
        tags: ['/noise_sensors'],
        'x-action-attempt-type': 'UPDATE_NOISE_THRESHOLD',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Noise Threshold',
      },
    },
    '/noise_sensors/simulate/trigger_noise_threshold': {
      post: {
        description:
          'Simulates the triggering of a [noise threshold](https://docs.seam.co/latest/capability-guides/noise-sensors/configure-noise-threshold-settings) for a [noise sensor](https://docs.seam.co/latest/capability-guides/noise-sensors) in a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
        operationId: 'noiseSensorsSimulateTriggerNoiseThresholdPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the device for which you want to simulate the triggering of a noise threshold.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/noise_sensors/simulate/trigger_noise_threshold',
        tags: ['/noise_sensors'],
        'x-fern-sdk-group-name': ['noise_sensors', 'simulate'],
        'x-fern-sdk-method-name': 'trigger_noise_threshold',
        'x-response-key': null,
        'x-title': 'Simulate Triggering a Noise Threshold',
      },
    },
    '/phones/deactivate': {
      post: {
        description:
          'Deactivates a phone, which is useful, for example, if a user has lost their phone. For more information, see [App User Lost Phone Process](https://docs.seam.co/latest/capability-guides/mobile-access/managing-phones-for-a-user-identity#app-user-lost-phone-process).',
        operationId: 'phonesDeactivatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'Device ID of the phone that you want to deactivate.',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/phones/deactivate',
        tags: ['/phones'],
        'x-fern-sdk-group-name': ['phones'],
        'x-fern-sdk-method-name': 'deactivate',
        'x-response-key': null,
        'x-title': 'Deactivate a Phone',
      },
    },
    '/phones/get': {
      post: {
        description:
          'Returns a specified [phone](https://docs.seam.co/latest/capability-guides/mobile-access/managing-phones-for-a-user-identity).',
        operationId: 'phonesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description: 'Device ID of the phone that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    phone: { $ref: '#/components/schemas/phone' },
                  },
                  required: ['phone', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/phones/get',
        tags: ['/phones'],
        'x-fern-sdk-group-name': ['phones'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'phone',
        'x-response-key': 'phone',
        'x-title': 'Get a Phone',
      },
    },
    '/phones/list': {
      post: {
        description:
          'Returns a list of all [phones](https://docs.seam.co/latest/capability-guides/mobile-access/managing-phones-for-a-user-identity). To filter the list of returned phones by a specific owner user identity or credential, include the `owner_user_identity_id` or `acs_credential_id`, respectively, in the request body.',
        operationId: 'phonesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_id: {
                    description:
                      'ID of the [credential](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials) by which you want to filter the list of returned phones.',
                    format: 'uuid',
                    type: 'string',
                  },
                  owner_user_identity_id: {
                    description:
                      'ID of the user identity that represents the owner by which you want to filter the list of returned phones.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    phones: {
                      items: { $ref: '#/components/schemas/phone' },
                      type: 'array',
                    },
                  },
                  required: ['phones', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/phones/list',
        tags: ['/phones'],
        'x-fern-sdk-group-name': ['phones'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'phones',
        'x-response-key': 'phones',
        'x-title': 'List Phones',
      },
    },
    '/phones/simulate/create_sandbox_phone': {
      post: {
        description:
          'Creates a new simulated phone in a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Creating a Simulated Phone for a User Identity](https://docs.seam.co/latest/capability-guides/mobile-access/developing-in-a-sandbox-workspace#creating-a-simulated-phone-for-a-user-identity).',
        operationId: 'phonesSimulateCreateSandboxPhonePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  assa_abloy_metadata: {
                    default: {},
                    description:
                      'ASSA ABLOY metadata that you want to associate with the simulated phone.',
                    properties: {
                      application_version: {
                        default: '1.0.0',
                        description:
                          'Application version that you want to use for the simulated phone.',
                        type: 'string',
                      },
                      ble_capability: {
                        default: true,
                        description:
                          'Indicates whether the simulated phone should have Bluetooth low energy (BLE) capability.',
                        type: 'boolean',
                      },
                      hce_capability: {
                        default: false,
                        description:
                          'Indicates whether the simulated phone should have host card emulation (HCE) capability.',
                        type: 'boolean',
                      },
                      nfc_capability: {
                        default: false,
                        description:
                          'Indicates whether the simulated phone should have near-field communication (NFC) capability.',
                        type: 'boolean',
                      },
                      seos_applet_version: {
                        default: '1.0.0',
                        description:
                          'SEOS applet version that you want to use for the simulated phone.',
                        type: 'string',
                      },
                      seos_tsm_endpoint_id: {
                        default: 1,
                        description:
                          'ID of the SEOS trusted service manager (TSM) endpoint that you want to use for the simulated phone.',
                        format: 'float',
                        type: 'number',
                      },
                    },
                    type: 'object',
                  },
                  custom_sdk_installation_id: {
                    description:
                      'ID of the custom SDK installation that you want to use for the simulated phone.',
                    type: 'string',
                  },
                  phone_metadata: {
                    default: {},
                    description:
                      'Metadata that you want to associate with the simulated phone.',
                    properties: {
                      device_manufacturer: {
                        default: 'Samsung',
                        description:
                          'Manufacturer that you want to use for the simulated phone.',
                        type: 'string',
                      },
                      device_model: {
                        default: 'Samsung Galaxy S10',
                        description:
                          'Device model that you want to use for the simulated phone.',
                        type: 'string',
                      },
                      operating_system: {
                        default: 'android',
                        description:
                          'Mobile operating system that you want to use for the simulated phone.',
                        enum: ['android', 'ios'],
                        type: 'string',
                      },
                      os_version: {
                        default: '10',
                        description:
                          'Mobile operating system version that you want to use for the simulated phone.',
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to associate with the simulated phone.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    phone: { $ref: '#/components/schemas/phone' },
                  },
                  required: ['phone', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/phones/simulate/create_sandbox_phone',
        tags: ['/phones'],
        'x-fern-sdk-group-name': ['phones', 'simulate'],
        'x-fern-sdk-method-name': 'create_sandbox_phone',
        'x-fern-sdk-return-value': 'phone',
        'x-response-key': 'phone',
        'x-title': 'Create a Sandbox Phone',
      },
    },
    '/seam/bridge/v1/bridge_client_sessions/create': {
      post: {
        description:
          'Creates a new [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session.',
        operationId: 'seamBridgeV1BridgeClientSessionsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  bridge_client_machine_identifier_key: {
                    description:
                      'Identifier key of the client machine for the Seam Bridge client that you want to create.',
                    type: 'string',
                  },
                  bridge_client_name: {
                    description:
                      'Name of the Seam Bridge client that you want to create.',
                    type: 'string',
                  },
                  bridge_client_time_zone: {
                    description:
                      'Time zone for the Seam Bridge client that you want to create.',
                    type: 'string',
                  },
                },
                required: [
                  'bridge_client_name',
                  'bridge_client_time_zone',
                  'bridge_client_machine_identifier_key',
                ],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_client_session: {
                      $ref: '#/components/schemas/bridge_client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ certified_client: [] }],
        summary: '/seam/bridge/v1/bridge_client_sessions/create',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_client_sessions',
        ],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'bridge_client_session',
        'x-response-key': 'bridge_client_session',
        'x-title': 'Create a Bridge Client Session',
        'x-undocumented': 'Seam Bridge client only.',
      },
    },
    '/seam/bridge/v1/bridge_client_sessions/get': {
      get: {
        description:
          'Returns the [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session associated with the client session token used for authentication.',
        operationId: 'seamBridgeV1BridgeClientSessionsGetGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_client_session: {
                      $ref: '#/components/schemas/bridge_client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary: '/seam/bridge/v1/bridge_client_sessions/get',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': 'bridge_client_session',
        'x-title': 'Get a Seam Bridge Client Session',
        'x-undocumented': 'Seam Bridge Client only.',
      },
      post: {
        description:
          'Returns the [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session associated with the client session token used for authentication.',
        operationId: 'seamBridgeV1BridgeClientSessionsGetPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_client_session: {
                      $ref: '#/components/schemas/bridge_client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary: '/seam/bridge/v1/bridge_client_sessions/get',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_client_sessions',
        ],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'bridge_client_session',
        'x-response-key': 'bridge_client_session',
        'x-title': 'Get a Seam Bridge Client Session',
        'x-undocumented': 'Seam Bridge Client only.',
      },
    },
    '/seam/bridge/v1/bridge_client_sessions/refresh_telemetry_token': {
      post: {
        description:
          'Returns the [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session associated with the client session token used for authentication and refreshed telemetry token.',
        operationId:
          'seamBridgeV1BridgeClientSessionsRefreshTelemetryTokenPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_client_session: {
                      $ref: '#/components/schemas/bridge_client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary:
          '/seam/bridge/v1/bridge_client_sessions/refresh_telemetry_token',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_client_sessions',
        ],
        'x-fern-sdk-method-name': 'refresh_telemetry_token',
        'x-fern-sdk-return-value': 'bridge_client_session',
        'x-response-key': 'bridge_client_session',
        'x-title':
          'Refresh the Telemetry Token for a Seam Bridge Client Session',
        'x-undocumented': 'Seam Bridge Client only.',
      },
    },
    '/seam/bridge/v1/bridge_client_sessions/regenerate_pairing_code': {
      post: {
        description:
          'Generate a new pairing code and return the updated [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client session.',
        operationId:
          'seamBridgeV1BridgeClientSessionsRegeneratePairingCodePost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_client_session: {
                      $ref: '#/components/schemas/bridge_client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary:
          '/seam/bridge/v1/bridge_client_sessions/regenerate_pairing_code',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_client_sessions',
        ],
        'x-fern-sdk-method-name': 'regenerate_pairing_code',
        'x-fern-sdk-return-value': 'bridge_client_session',
        'x-response-key': 'bridge_client_session',
        'x-title': 'Regenerate a Seam Bridge Client Session Pairing Code',
        'x-undocumented': 'Seam Bridge Client only.',
      },
    },
    '/seam/bridge/v1/bridge_client_sessions/report_status': {
      post: {
        description:
          'Report the status of a [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge) client.',
        operationId: 'seamBridgeV1BridgeClientSessionsReportStatusPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  is_tailscale_connected: {
                    description: 'Indicates whether Tailscale is connected.',
                    nullable: true,
                    type: 'boolean',
                  },
                  tailscale_ip_v4: {
                    description: 'Tailscale IPv4 address.',
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['is_tailscale_connected', 'tailscale_ip_v4'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary: '/seam/bridge/v1/bridge_client_sessions/report_status',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_client_sessions',
        ],
        'x-fern-sdk-method-name': 'report_status',
        'x-response-key': null,
        'x-title': 'Report the Status of a Seam Bridge Client',
        'x-undocumented': 'Seam Bridge Client only.',
      },
    },
    '/seam/bridge/v1/bridge_connected_systems/list': {
      get: {
        description:
          'Returns the [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge)-connected systems associated with the client session token used for authentication.',
        operationId: 'seamBridgeV1BridgeConnectedSystemsListGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_connected_systems: {
                      items: {
                        $ref: '#/components/schemas/bridge_connected_systems',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_connected_systems', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary: '/seam/bridge/v1/bridge_connected_systems/list',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': 'bridge_connected_systems',
        'x-title': 'List Bridge-Connected Systems',
        'x-undocumented': 'Seam Bridge Client only.',
      },
      post: {
        description:
          'Returns the [Seam Bridge](https://docs.seam.co/latest/capability-guides/seam-bridge)-connected systems associated with the client session token used for authentication.',
        operationId: 'seamBridgeV1BridgeConnectedSystemsListPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    bridge_connected_systems: {
                      items: {
                        $ref: '#/components/schemas/bridge_connected_systems',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['bridge_connected_systems', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ bridge_client_session: [] }],
        summary: '/seam/bridge/v1/bridge_connected_systems/list',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'bridge',
          'v1',
          'bridge_connected_systems',
        ],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'bridge_connected_systems',
        'x-response-key': 'bridge_connected_systems',
        'x-title': 'List Bridge-Connected Systems',
        'x-undocumented': 'Seam Bridge Client only.',
      },
    },
    '/seam/instant_key/v1/client_sessions/exchange_short_code': {
      post: {
        description:
          'Exchanges a short code for a client session token. Mobile apps use this endpoint to retrieve a client session token securely using a short code obtained from an Instant Key URL.',
        operationId: 'seamInstantKeyV1ClientSessionsExchangeShortCodePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  short_code: {
                    description:
                      'Short code that you want to exchange for a client session token.',
                    type: 'string',
                  },
                },
                required: ['short_code'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    client_session: {
                      $ref: '#/components/schemas/client_session',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['client_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ certified_client: [] }],
        summary: '/seam/instant_key/v1/client_sessions/exchange_short_code',
        tags: ['/client_sessions'],
        'x-fern-sdk-group-name': [
          'seam',
          'instant_key',
          'v1',
          'client_sessions',
        ],
        'x-fern-sdk-method-name': 'exchange_short_code',
        'x-fern-sdk-return-value': 'client_session',
        'x-response-key': 'client_session',
        'x-title': 'Exchange Instant Key Short Code',
        'x-undocumented': 'Seam Instant Key only.',
      },
    },
    '/seam/mobile_sdk/v1/acs/credentials/list': {
      post: {
        description:
          'Returns a list of all [credentials](https://docs.seam.co/latest/capability-guides/access-systems/managing-credentials).',
        operationId: 'seamMobileSdkV1AcsCredentialsListPost',
        requestBody: {
          content: {
            'application/json': { schema: { properties: {}, type: 'object' } },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_credentials: {
                      items: { $ref: '#/components/schemas/acs_credential' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_credentials', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ client_session: [] }],
        summary: '/seam/mobile_sdk/v1/acs/credentials/list',
        tags: ['/acs'],
        'x-fern-sdk-group-name': [
          'seam',
          'mobile_sdk',
          'v1',
          'acs',
          'credentials',
        ],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'acs_credentials',
        'x-response-key': 'acs_credentials',
        'x-title': 'List Credentials',
        'x-undocumented': 'Mobile SDK only.',
      },
    },
    '/seam/mobile_sdk/v1/phone_sessions/get_or_create': {
      post: {
        description: 'Gets or creates a session for a mobile SDK phone.',
        operationId: 'seamMobileSdkV1PhoneSessionsGetOrCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  custom_sdk_installation_id: {
                    description:
                      'ID of the custom SDK installation that you want to use for the new session.',
                    type: 'string',
                  },
                  phone_device_metadata: {
                    description:
                      'Phone device metadata that you want to use for the new session.',
                    properties: {
                      manufacturer: { type: 'string' },
                      model: { type: 'string' },
                      os_version: { type: 'string' },
                    },
                    type: 'object',
                  },
                  phone_os: {
                    description:
                      'Phone operating system that you want to use for the new session.',
                    enum: ['ios', 'android'],
                    type: 'string',
                  },
                },
                required: ['custom_sdk_installation_id', 'phone_os'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    phone_session: {
                      $ref: '#/components/schemas/phone_session',
                    },
                  },
                  required: ['phone_session', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ client_session: [] }],
        summary: '/seam/mobile_sdk/v1/phone_sessions/get_or_create',
        tags: [],
        'x-fern-sdk-group-name': ['seam', 'mobile_sdk', 'v1', 'phone_sessions'],
        'x-fern-sdk-method-name': 'get_or_create',
        'x-fern-sdk-return-value': 'phone_session',
        'x-response-key': 'phone_session',
        'x-title': 'Get or Create a Phone Session',
        'x-undocumented': 'Mobile SDK only.',
      },
    },
    '/seam/partner/v1/building_blocks/spaces/auto_map': {
      post: {
        description:
          'Auto-maps partner resources that have been pushed to Seam.',
        operationId: 'seamPartnerV1BuildingBlocksSpacesAutoMapPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  collection_key: {
                    description: 'Collection key.',
                    type: 'string',
                  },
                },
                required: ['collection_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    spaces: {
                      items: {
                        properties: {
                          acs_entrances: {
                            items: {
                              properties: {
                                acs_entrance_id: { type: 'string' },
                                name: { type: 'string' },
                              },
                              required: ['acs_entrance_id', 'name'],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          devices: {
                            items: {
                              properties: {
                                device_id: { type: 'string' },
                                device_type: {
                                  enum: ['lock', 'thermostat', 'sensor'],
                                  type: 'string',
                                },
                                name: { type: 'string' },
                              },
                              required: ['device_id', 'device_type', 'name'],
                              type: 'object',
                            },
                            type: 'array',
                          },
                          name: { type: 'string' },
                          needs_review: { type: 'boolean' },
                          partner_resource_key: { type: 'string' },
                        },
                        required: [
                          'name',
                          'partner_resource_key',
                          'devices',
                          'acs_entrances',
                        ],
                        type: 'object',
                      },
                      type: 'array',
                    },
                  },
                  required: ['spaces', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ client_session_with_customer: [] }],
        summary: '/seam/partner/v1/building_blocks/spaces/auto_map',
        tags: [],
        'x-fern-sdk-group-name': [
          'seam',
          'partner',
          'v1',
          'building_blocks',
          'spaces',
        ],
        'x-fern-sdk-method-name': 'auto_map',
        'x-fern-sdk-return-value': 'spaces',
        'x-response-key': 'spaces',
        'x-title': 'Do Auto-Mapping for Partner Resources that Map to Spaces',
        'x-undocumented': 'Partner building blocks/UI only.',
      },
    },
    '/seam/partner/v1/resources/list': {
      post: {
        description: 'Lists partner resources that have been pushed to Seam.',
        operationId: 'seamPartnerV1ResourcesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  resource_type_alias: {
                    description:
                      'Resource type alias by which you want to filter partner resources.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    partner_resources: {
                      items: { $ref: '#/components/schemas/partner_resource' },
                      type: 'array',
                    },
                  },
                  required: ['partner_resources', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [{ client_session_with_customer: [] }],
        summary: '/seam/partner/v1/resources/list',
        tags: [],
        'x-fern-sdk-group-name': ['seam', 'partner', 'v1', 'resources'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'partner_resources',
        'x-response-key': 'partner_resources',
        'x-title': 'List Partner Resources at Seam',
        'x-undocumented': 'Partner building blocks/UI only.',
      },
    },
    '/spaces/add_acs_entrances': {
      post: {
        description:
          'Adds [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) to a specific space.',
        operationId: 'spacesAddAcsEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the space.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space to which you want to add entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/add_acs_entrances',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'add_acs_entrances',
        'x-response-key': null,
        'x-title': 'Add Entrances to a Space',
      },
      put: {
        description:
          'Adds [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) to a specific space.',
        operationId: 'spacesAddAcsEntrancesPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the space.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space to which you want to add entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/add_acs_entrances',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add Entrances to a Space',
      },
    },
    '/spaces/add_devices': {
      post: {
        description: 'Adds devices to a specific space.',
        operationId: 'spacesAddDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the space.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space to which you want to add devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/add_devices',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'add_devices',
        'x-response-key': null,
        'x-title': 'Add Devices to a Space',
      },
      put: {
        description: 'Adds devices to a specific space.',
        operationId: 'spacesAddDevicesPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the space.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space to which you want to add devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/add_devices',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add Devices to a Space',
      },
    },
    '/spaces/create': {
      post: {
        description: 'Creates a new space.',
        operationId: 'spacesCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the new space.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the new space.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  name: {
                    description: 'Name of the space that you want to create.',
                    type: 'string',
                  },
                },
                required: ['name'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    space: { $ref: '#/components/schemas/space' },
                  },
                  required: ['space', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/create',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'space',
        'x-response-key': 'space',
        'x-title': 'Create a Space',
      },
    },
    '/spaces/delete': {
      post: {
        description: 'Deletes a space.',
        operationId: 'spacesDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  space_id: {
                    description: 'ID of the space that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/delete',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Space',
      },
    },
    '/spaces/get': {
      post: {
        description: 'Gets a space.',
        operationId: 'spacesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  space_id: {
                    description: 'ID of the space that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    space: { $ref: '#/components/schemas/space' },
                  },
                  required: ['space', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/get',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'space',
        'x-response-key': 'space',
        'x-title': 'Get a Space',
      },
    },
    '/spaces/list': {
      get: {
        description: 'Returns a list of all spaces.',
        operationId: 'spacesListGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    spaces: {
                      items: { $ref: '#/components/schemas/space' },
                      type: 'array',
                    },
                  },
                  required: ['spaces', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/list',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-ignore': true,
        'x-response-key': 'spaces',
        'x-title': 'List Spaces',
      },
      post: {
        description: 'Returns a list of all spaces.',
        operationId: 'spacesListPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    spaces: {
                      items: { $ref: '#/components/schemas/space' },
                      type: 'array',
                    },
                  },
                  required: ['spaces', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/list',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'spaces',
        'x-response-key': 'spaces',
        'x-title': 'List Spaces',
      },
    },
    '/spaces/remove_acs_entrances': {
      post: {
        description:
          'Removes [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) from a specific space.',
        operationId: 'spacesRemoveAcsEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to remove from the space.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space from which you want to remove entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/remove_acs_entrances',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'remove_acs_entrances',
        'x-response-key': null,
        'x-title': 'Remove Entrances from a Space',
      },
    },
    '/spaces/remove_devices': {
      post: {
        description: 'Removes devices from a specific space.',
        operationId: 'spacesRemoveDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to remove from the space.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  space_id: {
                    description:
                      'ID of the space from which you want to remove devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/remove_devices',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'remove_devices',
        'x-response-key': null,
        'x-title': 'Remove Devices from a Space',
      },
    },
    '/spaces/update': {
      patch: {
        description: 'Updates an existing space.',
        operationId: 'spacesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  name: { description: 'Name of the space.', type: 'string' },
                  space_id: {
                    description: 'ID of the space that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    space: { $ref: '#/components/schemas/space' },
                  },
                  required: ['space', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/update',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-ignore': true,
        'x-response-key': 'space',
        'x-title': 'Update a Space',
      },
      post: {
        description: 'Updates an existing space.',
        operationId: 'spacesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  name: { description: 'Name of the space.', type: 'string' },
                  space_id: {
                    description: 'ID of the space that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['space_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    space: { $ref: '#/components/schemas/space' },
                  },
                  required: ['space', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/spaces/update',
        tags: [],
        'x-draft': 'Early access.',
        'x-fern-sdk-group-name': ['spaces'],
        'x-fern-sdk-method-name': 'update',
        'x-fern-sdk-return-value': 'space',
        'x-response-key': 'space',
        'x-title': 'Update a Space',
      },
    },
    '/thermostats/activate_climate_preset': {
      post: {
        description:
          'Activates a specified [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsActivateClimatePresetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Climate preset key of the climate preset that you want to activate.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to activate a climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/activate_climate_preset',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'ACTIVATE_CLIMATE_PRESET',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'activate_climate_preset',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Activate a Climate Preset',
      },
    },
    '/thermostats/cool': {
      post: {
        description:
          'Sets a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) to [cool mode](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings).',
        operationId: 'thermostatsCoolPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  cooling_set_point_celsius: {
                    description:
                      '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  cooling_set_point_fahrenheit: {
                    description:
                      '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to set to cool mode.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/cool',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_HVAC_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'cool',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set to Cool Mode',
      },
    },
    '/thermostats/create_climate_preset': {
      post: {
        description:
          'Creates a [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsCreateClimatePresetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    type: 'string',
                  },
                  cooling_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  cooling_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want create a climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                  fan_mode_setting: {
                    description:
                      'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                    enum: ['auto', 'on', 'circulate'],
                    type: 'string',
                  },
                  heating_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  heating_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  hvac_mode_setting: {
                    description:
                      'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                    enum: ['off', 'heat', 'cool', 'heat_cool'],
                    type: 'string',
                  },
                  manual_override_allowed: {
                    default: true,
                    deprecated: true,
                    description:
                      "Indicates whether a person at the thermostat or using the API can change the thermostat's settings.",
                    type: 'boolean',
                    'x-deprecated':
                      "Use 'thermostat_schedule.is_override_allowed'",
                  },
                  name: {
                    default: null,
                    description:
                      'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/create_climate_preset',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'create_climate_preset',
        'x-response-key': null,
        'x-title': 'Create a Climate Preset',
      },
    },
    '/thermostats/daily_programs/create': {
      post: {
        description:
          'Creates a new thermostat daily program. A daily program consists of a set of periods, where each period includes a start time and the key of a configured climate preset. Once you have defined a daily program, you can assign it to one or more days within a weekly program.',
        operationId: 'thermostatsDailyProgramsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to create a daily program.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the thermostat daily program.',
                    type: 'string',
                  },
                  periods: {
                    description: 'Array of thermostat daily program periods.',
                    items: {
                      description:
                        'Period for a thermostat daily program. Consists of a starts at time and the key that identifies the configured climate preset to apply at the starting time.',
                      properties: {
                        climate_preset_key: {
                          description:
                            'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to activate at the `starts_at_time`.',
                          type: 'string',
                        },
                        starts_at_time: {
                          description:
                            'Time at which the thermostat daily program period starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                          pattern: '^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$',
                          type: 'string',
                        },
                      },
                      required: ['starts_at_time', 'climate_preset_key'],
                      type: 'object',
                    },
                    type: 'array',
                  },
                },
                required: ['device_id', 'name', 'periods'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    thermostat_daily_program: {
                      $ref: '#/components/schemas/thermostat_daily_program',
                    },
                  },
                  required: ['thermostat_daily_program', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/daily_programs/create',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'daily_programs'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'thermostat_daily_program',
        'x-response-key': 'thermostat_daily_program',
        'x-title': 'Create a Thermostat Daily Program',
      },
    },
    '/thermostats/daily_programs/delete': {
      post: {
        description: 'Deletes a thermostat daily program.',
        operationId: 'thermostatsDailyProgramsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  thermostat_daily_program_id: {
                    description:
                      'ID of the thermostat daily program that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_daily_program_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/daily_programs/delete',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'daily_programs'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Thermostat Daily Program',
      },
    },
    '/thermostats/daily_programs/update': {
      patch: {
        description:
          'Updates a specified thermostat daily program. The periods that you specify overwrite any existing periods for the daily program.',
        operationId: 'thermostatsDailyProgramsUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  name: {
                    description:
                      'Name of the thermostat daily program that you want to update.',
                    type: 'string',
                  },
                  periods: {
                    description:
                      'Array of thermostat daily program periods. The periods that you specify overwrite any existing periods for the daily program.',
                    items: {
                      description:
                        'Period for a thermostat daily program. Consists of a starts at time and the key that identifies the configured climate preset to apply at the starting time.',
                      properties: {
                        climate_preset_key: {
                          description:
                            'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to activate at the `starts_at_time`.',
                          type: 'string',
                        },
                        starts_at_time: {
                          description:
                            'Time at which the thermostat daily program period starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                          pattern: '^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$',
                          type: 'string',
                        },
                      },
                      required: ['starts_at_time', 'climate_preset_key'],
                      type: 'object',
                    },
                    type: 'array',
                  },
                  thermostat_daily_program_id: {
                    description:
                      'ID of the thermostat daily program that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_daily_program_id', 'name', 'periods'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/daily_programs/update',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'PUSH_THERMOSTAT_PROGRAMS',
        'x-fern-ignore': true,
        'x-response-key': 'action_attempt',
        'x-title': 'Update a Thermostat Daily Program',
      },
      post: {
        description:
          'Updates a specified thermostat daily program. The periods that you specify overwrite any existing periods for the daily program.',
        operationId: 'thermostatsDailyProgramsUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  name: {
                    description:
                      'Name of the thermostat daily program that you want to update.',
                    type: 'string',
                  },
                  periods: {
                    description:
                      'Array of thermostat daily program periods. The periods that you specify overwrite any existing periods for the daily program.',
                    items: {
                      description:
                        'Period for a thermostat daily program. Consists of a starts at time and the key that identifies the configured climate preset to apply at the starting time.',
                      properties: {
                        climate_preset_key: {
                          description:
                            'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to activate at the `starts_at_time`.',
                          type: 'string',
                        },
                        starts_at_time: {
                          description:
                            'Time at which the thermostat daily program period starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                          pattern: '^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$',
                          type: 'string',
                        },
                      },
                      required: ['starts_at_time', 'climate_preset_key'],
                      type: 'object',
                    },
                    type: 'array',
                  },
                  thermostat_daily_program_id: {
                    description:
                      'ID of the thermostat daily program that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_daily_program_id', 'name', 'periods'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/daily_programs/update',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'PUSH_THERMOSTAT_PROGRAMS',
        'x-fern-sdk-group-name': ['thermostats', 'daily_programs'],
        'x-fern-sdk-method-name': 'update',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Update a Thermostat Daily Program',
      },
    },
    '/thermostats/delete_climate_preset': {
      post: {
        description:
          'Deletes a specified [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsDeleteClimatePresetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Climate preset key of the climate preset that you want to delete.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to delete a climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/delete_climate_preset',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'delete_climate_preset',
        'x-response-key': null,
        'x-title': 'Delete a Climate Preset',
      },
    },
    '/thermostats/get': {
      post: {
        description:
          'Returns a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats). **Deprecated:** Will be removed. Use `/devices/get` instead.',
        operationId: 'thermostatsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description:
                      'Name of the thermostat device that you want to retrieve.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    thermostat: { $ref: '#/components/schemas/device' },
                  },
                  required: ['thermostat', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/get',
        tags: ['/thermostats'],
        'x-deprecated': 'Use `/devices/get` instead.',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'thermostat',
        'x-response-key': 'thermostat',
        'x-title': 'Get a Thermostat',
        'x-undocumented': 'Will be removed.',
      },
    },
    '/thermostats/heat': {
      post: {
        description:
          'Sets a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) to [heat mode](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings).',
        operationId: 'thermostatsHeatPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to set to heat mode.',
                    format: 'uuid',
                    type: 'string',
                  },
                  heating_set_point_celsius: {
                    description:
                      '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  heating_set_point_fahrenheit: {
                    description:
                      '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/heat',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_HVAC_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'heat',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set to Heat Mode',
      },
    },
    '/thermostats/heat_cool': {
      post: {
        description:
          'Sets a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) to [heat-cool ("auto") mode](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings).',
        operationId: 'thermostatsHeatCoolPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  cooling_set_point_celsius: {
                    description:
                      '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  cooling_set_point_fahrenheit: {
                    description:
                      '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to set to heat-cool mode.',
                    format: 'uuid',
                    type: 'string',
                  },
                  heating_set_point_celsius: {
                    description:
                      '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  heating_set_point_fahrenheit: {
                    description:
                      '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                    format: 'float',
                    type: 'number',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/heat_cool',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_HVAC_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'heat_cool',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set to Heat-Cool (Auto) Mode',
      },
    },
    '/thermostats/list': {
      post: {
        description:
          'Returns a list of all [thermostats](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_webview_id: {
                    description:
                      'ID of the Connect Webview for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_id: {
                    description:
                      'ID of the connected account for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  connected_account_ids: {
                    description:
                      'Array of IDs of the connected accounts for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  created_before: {
                    description:
                      'Timestamp by which to limit returned devices. Returns devices created before this timestamp.',
                    format: 'date-time',
                    type: 'string',
                  },
                  custom_metadata_has: {
                    additionalProperties: {
                      oneOf: [{ type: 'string' }, { type: 'boolean' }],
                    },
                    description:
                      'Set of key:value [custom metadata](https://docs.seam.co/latest/core-concepts/devices/adding-custom-metadata-to-a-device) pairs for which you want to list devices.',
                    type: 'object',
                  },
                  customer_ids: {
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'Array of device IDs for which you want to list devices.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_type: {
                    description:
                      'Device type by which you want to filter thermostat devices.',
                    enum: [
                      'ecobee_thermostat',
                      'nest_thermostat',
                      'honeywell_resideo_thermostat',
                      'tado_thermostat',
                      'sensi_thermostat',
                      'smartthings_thermostat',
                    ],
                    type: 'string',
                  },
                  device_types: {
                    description:
                      'Array of device types by which you want to filter thermostat devices.',
                    items: {
                      description: 'Device type for thermostats.\n          ',
                      enum: [
                        'ecobee_thermostat',
                        'nest_thermostat',
                        'honeywell_resideo_thermostat',
                        'tado_thermostat',
                        'sensi_thermostat',
                        'smartthings_thermostat',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                  },
                  exclude_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  include_if: {
                    items: {
                      enum: [
                        'can_remotely_unlock',
                        'can_remotely_lock',
                        'can_program_offline_access_codes',
                        'can_program_online_access_codes',
                        'can_hvac_heat',
                        'can_hvac_cool',
                        'can_hvac_heat_cool',
                        'can_turn_off_hvac',
                        'can_simulate_removal',
                        'can_simulate_connection',
                        'can_simulate_disconnection',
                      ],
                      type: 'string',
                    },
                    type: 'array',
                    'x-undocumented': 'Only used internally.',
                  },
                  limit: {
                    default: 500,
                    description:
                      'Numerical limit on the number of devices to return.',
                    format: 'float',
                    type: 'number',
                  },
                  manufacturer: {
                    description:
                      'Manufacturer by which you want to filter thermostat devices.',
                    enum: [
                      'ecobee',
                      'honeywell_resideo',
                      'nest',
                      'tado',
                      'sensi',
                      'smartthings',
                    ],
                    type: 'string',
                  },
                  page_cursor: {
                    description:
                      "Identifies the specific page of results to return, obtained from the previous page's `next_page_cursor`.",
                    nullable: true,
                    type: 'string',
                  },
                  space_id: {
                    description:
                      'ID of the space for which you want to list devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                  unstable_location_id: {
                    deprecated: true,
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  user_identifier_key: {
                    description:
                      'Your own internal user ID for the user for which you want to list devices.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    devices: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                    thermostats: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                  },
                  required: ['thermostats', 'devices', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
        ],
        summary: '/thermostats/list',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Thermostats',
      },
    },
    '/thermostats/off': {
      post: {
        description:
          'Sets a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) to ["off" mode](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings).',
        operationId: 'thermostatsOffPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to set to off mode.',
                    format: 'uuid',
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/off',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_HVAC_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'off',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set to Off Mode',
      },
    },
    '/thermostats/schedules/create': {
      post: {
        description:
          'Creates a new [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSchedulesCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to use for the new thermostat schedule.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to create a schedule.',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the new thermostat schedule ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  is_override_allowed: {
                    description:
                      "Indicates whether a person at the thermostat or using the API can change the thermostat's settings while the new schedule is active. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    type: 'boolean',
                  },
                  max_override_period_minutes: {
                    description:
                      "Number of minutes for which a person at the thermostat or using the API can change the thermostat's settings after the activation of the scheduled climate preset. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    exclusiveMinimum: true,
                    minimum: 0,
                    nullable: true,
                    type: 'integer',
                  },
                  name: {
                    description: 'Name of the thermostat schedule.',
                    type: 'string',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the new thermostat schedule starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                },
                required: [
                  'device_id',
                  'climate_preset_key',
                  'starts_at',
                  'ends_at',
                ],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    thermostat_schedule: {
                      $ref: '#/components/schemas/thermostat_schedule',
                    },
                  },
                  required: ['thermostat_schedule', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/schedules/create',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'schedules'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'thermostat_schedule',
        'x-response-key': 'thermostat_schedule',
        'x-title': 'Create a Thermostat Schedule',
      },
    },
    '/thermostats/schedules/delete': {
      post: {
        description:
          'Deletes a [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSchedulesDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  thermostat_schedule_id: {
                    description:
                      'ID of the thermostat schedule that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_schedule_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/schedules/delete',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'schedules'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Thermostat Schedule',
      },
    },
    '/thermostats/schedules/get': {
      post: {
        description:
          'Returns a specified [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
        operationId: 'thermostatsSchedulesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  thermostat_schedule_id: {
                    description:
                      'ID of the thermostat schedule that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_schedule_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    thermostat_schedule: {
                      $ref: '#/components/schemas/thermostat_schedule',
                    },
                  },
                  required: ['thermostat_schedule', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/schedules/get',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'schedules'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'thermostat_schedule',
        'x-response-key': 'thermostat_schedule',
        'x-title': 'Get a Thermostat Schedule',
      },
    },
    '/thermostats/schedules/list': {
      post: {
        description:
          'Returns a list of all [thermostat schedules](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSchedulesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to list schedules.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identifier_key: {
                    description:
                      'User identifier key by which to filter the list of returned thermostat schedules.',
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    thermostat_schedules: {
                      items: {
                        $ref: '#/components/schemas/thermostat_schedule',
                      },
                      type: 'array',
                    },
                  },
                  required: ['thermostat_schedules', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/thermostats/schedules/list',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'schedules'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'thermostat_schedules',
        'x-response-key': 'thermostat_schedules',
        'x-title': 'List Thermostat Schedules',
      },
    },
    '/thermostats/schedules/update': {
      patch: {
        description:
          'Updates a specified [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
        operationId: 'thermostatsSchedulesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to use for the thermostat schedule.',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the thermostat schedule ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  is_override_allowed: {
                    description:
                      "Indicates whether a person at the thermostat or using the API can change the thermostat's settings while the schedule is active. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    type: 'boolean',
                  },
                  max_override_period_minutes: {
                    description:
                      "Number of minutes for which a person at the thermostat or using the API can change the thermostat's settings after the activation of the scheduled climate preset. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    exclusiveMinimum: true,
                    minimum: 0,
                    nullable: true,
                    type: 'integer',
                  },
                  name: {
                    description: 'Name of the thermostat schedule.',
                    type: 'string',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the thermostat schedule starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  thermostat_schedule_id: {
                    description:
                      'ID of the thermostat schedule that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_schedule_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/schedules/update',
        tags: ['/thermostats'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Thermostat Schedule',
      },
      post: {
        description:
          'Updates a specified [thermostat schedule](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules).',
        operationId: 'thermostatsSchedulesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Key of the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) to use for the thermostat schedule.',
                    type: 'string',
                  },
                  ends_at: {
                    description:
                      'Date and time at which the thermostat schedule ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  is_override_allowed: {
                    description:
                      "Indicates whether a person at the thermostat or using the API can change the thermostat's settings while the schedule is active. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    type: 'boolean',
                  },
                  max_override_period_minutes: {
                    description:
                      "Number of minutes for which a person at the thermostat or using the API can change the thermostat's settings after the activation of the scheduled climate preset. See also [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    exclusiveMinimum: true,
                    minimum: 0,
                    nullable: true,
                    type: 'integer',
                  },
                  name: {
                    description: 'Name of the thermostat schedule.',
                    type: 'string',
                  },
                  starts_at: {
                    description:
                      'Date and time at which the thermostat schedule starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                    type: 'string',
                  },
                  thermostat_schedule_id: {
                    description:
                      'ID of the thermostat schedule that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['thermostat_schedule_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/schedules/update',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'schedules'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Thermostat Schedule',
      },
    },
    '/thermostats/set_fallback_climate_preset': {
      post: {
        description:
          'Sets a specified [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) as the ["fallback"](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets/setting-the-fallback-climate-preset) preset for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSetFallbackClimatePresetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Climate preset key of the climate preset that you want to set as the fallback climate preset.',
                    type: 'string',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to set the fallback climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/set_fallback_climate_preset',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'set_fallback_climate_preset',
        'x-response-key': null,
        'x-title': 'Set the Fallback Climate Preset',
      },
    },
    '/thermostats/set_fan_mode': {
      post: {
        description:
          'Sets the [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSetFanModePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to set the fan mode.',
                    format: 'uuid',
                    type: 'string',
                  },
                  fan_mode: {
                    deprecated: true,
                    enum: ['auto', 'on', 'circulate'],
                    type: 'string',
                    'x-deprecated': 'Use `fan_mode_setting` instead.',
                  },
                  fan_mode_setting: {
                    description:
                      '[Fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings) that you want to set for the thermostat.',
                    enum: ['auto', 'on', 'circulate'],
                    type: 'string',
                  },
                  sync: {
                    default: false,
                    type: 'boolean',
                    'x-undocumented': 'Only used internally.',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/set_fan_mode',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_FAN_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'set_fan_mode',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set the Fan Mode Setting',
      },
    },
    '/thermostats/set_hvac_mode': {
      post: {
        description:
          'Sets the [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsSetHvacModePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                discriminator: { propertyName: 'hvac_mode_setting' },
                oneOf: [
                  {
                    properties: {
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to set the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      hvac_mode_setting: { enum: ['off'], type: 'string' },
                    },
                    required: ['hvac_mode_setting', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      cooling_set_point_celsius: {
                        description:
                          '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      cooling_set_point_fahrenheit: {
                        description:
                          '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to set the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      hvac_mode_setting: { enum: ['cool'], type: 'string' },
                    },
                    required: ['hvac_mode_setting', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to set the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      heating_set_point_celsius: {
                        description:
                          '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      heating_set_point_fahrenheit: {
                        description:
                          '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      hvac_mode_setting: { enum: ['heat'], type: 'string' },
                    },
                    required: ['hvac_mode_setting', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      cooling_set_point_celsius: {
                        description:
                          '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      cooling_set_point_fahrenheit: {
                        description:
                          '[Cooling set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `cooling_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to set the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      heating_set_point_celsius: {
                        description:
                          '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      heating_set_point_fahrenheit: {
                        description:
                          '[Heating set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to set for the thermostat. You must set one of the `heating_set_point` parameters.',
                        format: 'float',
                        type: 'number',
                      },
                      hvac_mode_setting: {
                        enum: ['heat_cool'],
                        type: 'string',
                      },
                    },
                    required: ['hvac_mode_setting', 'device_id'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/set_hvac_mode',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'SET_HVAC_MODE',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'set_hvac_mode',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Set the HVAC Mode',
      },
    },
    '/thermostats/set_temperature_threshold': {
      patch: {
        description:
          'Sets a [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) for a specified thermostat. Seam emits a `thermostat.temperature_threshold_exceeded` event and adds a warning on a thermostat if it reports a temperature outside the threshold range.',
        operationId: 'thermostatsSetTemperatureThresholdPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to set a temperature threshold.',
                    format: 'uuid',
                    type: 'string',
                  },
                  lower_limit_celsius: {
                    default: null,
                    description:
                      'Lower temperature limit in in °C. Seam alerts you if the reported temperature is lower than this value. You can specify either `lower_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  lower_limit_fahrenheit: {
                    default: null,
                    description:
                      'Lower temperature limit in in °F. Seam alerts you if the reported temperature is lower than this value. You can specify either `lower_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  upper_limit_celsius: {
                    default: null,
                    description:
                      'Upper temperature limit in in °C. Seam alerts you if the reported temperature is higher than this value. You can specify either `upper_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  upper_limit_fahrenheit: {
                    default: null,
                    description:
                      'Upper temperature limit in in °C. Seam alerts you if the reported temperature is higher than this value. You can specify either `upper_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/thermostats/set_temperature_threshold',
        tags: ['/thermostats'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Set a Temperature Threshold',
      },
      post: {
        description:
          'Sets a [temperature threshold](https://docs.seam.co/latest/capability-guides/thermostats/setting-and-monitoring-temperature-thresholds) for a specified thermostat. Seam emits a `thermostat.temperature_threshold_exceeded` event and adds a warning on a thermostat if it reports a temperature outside the threshold range.',
        operationId: 'thermostatsSetTemperatureThresholdPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to set a temperature threshold.',
                    format: 'uuid',
                    type: 'string',
                  },
                  lower_limit_celsius: {
                    default: null,
                    description:
                      'Lower temperature limit in in °C. Seam alerts you if the reported temperature is lower than this value. You can specify either `lower_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  lower_limit_fahrenheit: {
                    default: null,
                    description:
                      'Lower temperature limit in in °F. Seam alerts you if the reported temperature is lower than this value. You can specify either `lower_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  upper_limit_celsius: {
                    default: null,
                    description:
                      'Upper temperature limit in in °C. Seam alerts you if the reported temperature is higher than this value. You can specify either `upper_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                  upper_limit_fahrenheit: {
                    default: null,
                    description:
                      'Upper temperature limit in in °C. Seam alerts you if the reported temperature is higher than this value. You can specify either `upper_limit` but not both.',
                    format: 'float',
                    nullable: true,
                    type: 'number',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/thermostats/set_temperature_threshold',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'set_temperature_threshold',
        'x-response-key': null,
        'x-title': 'Set a Temperature Threshold',
      },
    },
    '/thermostats/simulate/hvac_mode_adjusted': {
      post: {
        description:
          'Simulates having adjusted the [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) for a [thermostat](https://docs.seam.co/latest/capability-guides/thermostats). Only applicable for [sandbox devices](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Testing Your Thermostat App with Simulate Endpoints](https://docs.seam.co/latest/capability-guides/thermostats/testing-your-thermostat-app-with-simulate-endpoints).',
        operationId: 'thermostatsSimulateHvacModeAdjustedPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                discriminator: { propertyName: 'hvac_mode' },
                oneOf: [
                  {
                    properties: {
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to simulate having adjusted the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      hvac_mode: {
                        description: 'HVAC mode that you want to simulate.',
                        enum: ['off'],
                        type: 'string',
                      },
                    },
                    required: ['hvac_mode', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      cooling_set_point_celsius: {
                        description:
                          'Cooling [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to simulate. You must set `cooling_set_point_celsius` or `cooling_set_point_fahrenheit`.',
                        format: 'float',
                        type: 'number',
                      },
                      cooling_set_point_fahrenheit: {
                        description:
                          'Cooling [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to simulate. You must set `cooling_set_point_fahrenheit` or `cooling_set_point_celsius`.',
                        format: 'float',
                        type: 'number',
                      },
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to simulate having adjusted the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      hvac_mode: {
                        description: 'HVAC mode that you want to simulate.',
                        enum: ['cool'],
                        type: 'string',
                      },
                    },
                    required: ['hvac_mode', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to simulate having adjusted the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      heating_set_point_celsius: {
                        description:
                          'Heating [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to simulate. You must set `heating_set_point_celsius` or `heating_set_point_fahrenheit`.',
                        format: 'float',
                        type: 'number',
                      },
                      heating_set_point_fahrenheit: {
                        description:
                          'Heating [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to simulate. You must set `heating_set_point_fahrenheit` or `heating_set_point_celsius`.',
                        format: 'float',
                        type: 'number',
                      },
                      hvac_mode: {
                        description: 'HVAC mode that you want to simulate.',
                        enum: ['heat'],
                        type: 'string',
                      },
                    },
                    required: ['hvac_mode', 'device_id'],
                    type: 'object',
                  },
                  {
                    properties: {
                      cooling_set_point_celsius: {
                        description:
                          'Cooling [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to simulate. You must set `cooling_set_point_celsius` or `cooling_set_point_fahrenheit`.',
                        format: 'float',
                        type: 'number',
                      },
                      cooling_set_point_fahrenheit: {
                        description:
                          'Cooling [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to simulate. You must set `cooling_set_point_fahrenheit` or `cooling_set_point_celsius`.',
                        format: 'float',
                        type: 'number',
                      },
                      device_id: {
                        description:
                          'ID of the thermostat device for which you want to simulate having adjusted the HVAC mode.',
                        format: 'uuid',
                        type: 'string',
                      },
                      heating_set_point_celsius: {
                        description:
                          'Heating [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °C that you want to simulate. You must set `heating_set_point_celsius` or `heating_set_point_fahrenheit`.',
                        format: 'float',
                        type: 'number',
                      },
                      heating_set_point_fahrenheit: {
                        description:
                          'Heating [set point](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points) in °F that you want to simulate. You must set `heating_set_point_fahrenheit` or `heating_set_point_celsius`.',
                        format: 'float',
                        type: 'number',
                      },
                      hvac_mode: {
                        description: 'HVAC mode that you want to simulate.',
                        enum: ['heat_cool'],
                        type: 'string',
                      },
                    },
                    required: ['hvac_mode', 'device_id'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/thermostats/simulate/hvac_mode_adjusted',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'simulate'],
        'x-fern-sdk-method-name': 'hvac_mode_adjusted',
        'x-response-key': null,
        'x-title': 'HVAC Mode Adjusted',
      },
    },
    '/thermostats/simulate/temperature_reached': {
      post: {
        description:
          'Simulates a [thermostat](https://docs.seam.co/latest/capability-guides/thermostats) reaching a specified temperature. Only applicable for [sandbox devices](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces). See also [Testing Your Thermostat App with Simulate Endpoints](https://docs.seam.co/latest/capability-guides/thermostats/testing-your-thermostat-app-with-simulate-endpoints).',
        operationId: 'thermostatsSimulateTemperatureReachedPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device that you want to simulate reaching a specified temperature.',
                    format: 'uuid',
                    type: 'string',
                  },
                  temperature_celsius: {
                    description:
                      'Temperature in °C that you want simulate the thermostat reaching. You must set `temperature_celsius` or `temperature_fahrenheit`.',
                    format: 'float',
                    type: 'number',
                  },
                  temperature_fahrenheit: {
                    description:
                      'Temperature in °F that you want simulate the thermostat reaching. You must set `temperature_fahrenheit` or `temperature_celsius`.',
                    format: 'float',
                    type: 'number',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/thermostats/simulate/temperature_reached',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats', 'simulate'],
        'x-fern-sdk-method-name': 'temperature_reached',
        'x-response-key': null,
        'x-title': 'Temperature Reached',
      },
    },
    '/thermostats/update_climate_preset': {
      patch: {
        description:
          'Updates a specified [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsUpdateClimatePresetPatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    type: 'string',
                  },
                  cooling_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  cooling_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to update a climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                  fan_mode_setting: {
                    description:
                      'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                    enum: ['auto', 'on', 'circulate'],
                    type: 'string',
                  },
                  heating_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  heating_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  hvac_mode_setting: {
                    description:
                      'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                    enum: ['off', 'heat', 'cool', 'heat_cool'],
                    type: 'string',
                  },
                  manual_override_allowed: {
                    deprecated: true,
                    description:
                      "Indicates whether a person at the thermostat can change the thermostat's settings. See [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    type: 'boolean',
                    'x-deprecated':
                      "Use 'thermostat_schedule.is_override_allowed'",
                  },
                  name: {
                    default: null,
                    description:
                      'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session: [] },
        ],
        summary: '/thermostats/update_climate_preset',
        tags: ['/thermostats'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Climate Preset',
      },
      post: {
        description:
          'Updates a specified [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets) for a specified [thermostat](https://docs.seam.co/latest/capability-guides/thermostats).',
        operationId: 'thermostatsUpdateClimatePresetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  climate_preset_key: {
                    description:
                      'Unique key to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    type: 'string',
                  },
                  cooling_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should cool (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  cooling_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should cool (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to update a climate preset.',
                    format: 'uuid',
                    type: 'string',
                  },
                  fan_mode_setting: {
                    description:
                      'Desired [fan mode setting](https://docs.seam.co/latest/capability-guides/thermostats/configure-current-climate-settings#fan-mode-settings), such as `on`, `auto`, or `circulate`.',
                    enum: ['auto', 'on', 'circulate'],
                    type: 'string',
                  },
                  heating_set_point_celsius: {
                    description:
                      'Temperature to which the thermostat should heat (in °C). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  heating_set_point_fahrenheit: {
                    description:
                      'Temperature to which the thermostat should heat (in °F). See also [Set Points](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/set-points).',
                    format: 'float',
                    type: 'number',
                  },
                  hvac_mode_setting: {
                    description:
                      'Desired [HVAC mode](https://docs.seam.co/latest/capability-guides/thermostats/understanding-thermostat-concepts/hvac-mode) setting, such as `heat`, `cool`, `heat_cool`, or `off`.',
                    enum: ['off', 'heat', 'cool', 'heat_cool'],
                    type: 'string',
                  },
                  manual_override_allowed: {
                    deprecated: true,
                    description:
                      "Indicates whether a person at the thermostat can change the thermostat's settings. See [Specifying Manual Override Permissions](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-thermostat-schedules#specifying-manual-override-permissions).",
                    type: 'boolean',
                    'x-deprecated':
                      "Use 'thermostat_schedule.is_override_allowed'",
                  },
                  name: {
                    default: null,
                    description:
                      'User-friendly name to identify the [climate preset](https://docs.seam.co/latest/capability-guides/thermostats/creating-and-managing-climate-presets).',
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['device_id', 'climate_preset_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session: [] },
        ],
        summary: '/thermostats/update_climate_preset',
        tags: ['/thermostats'],
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'update_climate_preset',
        'x-response-key': null,
        'x-title': 'Update a Climate Preset',
      },
    },
    '/thermostats/update_weekly_program': {
      post: {
        description:
          'Updates the thermostat weekly program for a thermostat device. To configure a weekly program, specify the ID of the daily program that you want to use for each day of the week. When you update a weekly program, the set of programs that you specify overwrites any previous weekly program for the thermostat.',
        operationId: 'thermostatsUpdateWeeklyProgramPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the thermostat device for which you want to update the weekly program.',
                    format: 'uuid',
                    type: 'string',
                  },
                  friday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Fridays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  monday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Mondays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  saturday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Saturdays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  sunday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Sundays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  thursday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Thursdays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  tuesday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Tuesdays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                  wednesday_program_id: {
                    description:
                      'ID of the thermostat daily program to run on Wednesdays.',
                    format: 'uuid',
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/thermostats/update_weekly_program',
        tags: ['/thermostats'],
        'x-action-attempt-type': 'PUSH_THERMOSTAT_PROGRAMS',
        'x-fern-sdk-group-name': ['thermostats'],
        'x-fern-sdk-method-name': 'update_weekly_program',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Update the Thermostat Weekly Program',
      },
    },
    '/unstable_access_grants/create': {
      post: {
        description: 'Creates a new access grant.',
        operationId: 'unstableAccessGrantsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                allOf: [
                  {
                    oneOf: [
                      {
                        properties: {
                          user_identity_id: {
                            description:
                              'ID of user identity for whom you want to grant access.',
                            format: 'uuid',
                            type: 'string',
                          },
                        },
                        required: ['user_identity_id'],
                        type: 'object',
                      },
                      {
                        properties: {
                          user_identity: {
                            description:
                              'User identity. When used, creates a new user identity with the specified details and grants them access.',
                            properties: {
                              email_address: {
                                description:
                                  'Unique email address for the user identity.',
                                format: 'email',
                                nullable: true,
                                type: 'string',
                              },
                              full_name: {
                                minLength: 1,
                                nullable: true,
                                type: 'string',
                              },
                              phone_number: {
                                description:
                                  'Unique phone number for the user identity in [E.164 format](https://www.itu.int/rec/T-REC-E.164/en) (for example, +15555550100).',
                                nullable: true,
                                type: 'string',
                              },
                            },
                            type: 'object',
                          },
                        },
                        required: ['user_identity'],
                        type: 'object',
                      },
                    ],
                  },
                  {
                    properties: {
                      acs_entrance_ids: {
                        default: [],
                        description:
                          'IDs of the [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) to which you want to grant access.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      device_ids: {
                        default: [],
                        description:
                          'IDs of the devices to which you want to grant access.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      ends_at: {
                        description:
                          'Date and time at which the validity of the new grant ends, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format. Must be a time in the future and after `starts_at`.',
                        format: 'date-time',
                        type: 'string',
                      },
                      location: {
                        description:
                          'Location. When used, creates a new location with the specified entrances and devices, and gives the user access to this location.',
                        properties: {
                          acs_entrance_ids: {
                            default: [],
                            deprecated: true,
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                            'x-deprecated':
                              'Use `acs_entrance_ids` at the top level.',
                          },
                          device_ids: {
                            default: [],
                            deprecated: true,
                            items: { format: 'uuid', type: 'string' },
                            type: 'array',
                            'x-deprecated':
                              'Use `device_ids` at the top level.',
                          },
                          name: {
                            description: 'Name of the location.',
                            type: 'string',
                          },
                        },
                        type: 'object',
                      },
                      location_ids: {
                        deprecated: true,
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                        'x-deprecated': 'Use `space_ids`.',
                      },
                      requested_access_methods: {
                        items: {
                          properties: {
                            mode: {
                              description: 'Access method mode.',
                              enum: ['code', 'card', 'mobile_key'],
                              type: 'string',
                            },
                          },
                          required: ['mode'],
                          type: 'object',
                        },
                        type: 'array',
                      },
                      space_ids: {
                        description:
                          'IDs of the existing spaces to which you want to grant access.',
                        items: { format: 'uuid', type: 'string' },
                        type: 'array',
                      },
                      starts_at: {
                        description:
                          'Date and time at which the validity of the new grant starts, in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.',
                        format: 'date-time',
                        type: 'string',
                      },
                    },
                    required: ['requested_access_methods'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grant: { $ref: '#/components/schemas/access_grant' },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grant', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/unstable_access_grants/create',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_grants'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'access_grant',
        'x-response-key': 'access_grant',
        'x-title': 'Create an Access Grant',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_grants/delete': {
      post: {
        description: 'Deletes an access grant.',
        operationId: 'unstableAccessGrantsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description: 'ID of access grant that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/unstable_access_grants/delete',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_grants'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Access Grant',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_grants/get': {
      post: {
        description: 'Gets an access grant.',
        operationId: 'unstableAccessGrantsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description: 'ID of access grant that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grant: { $ref: '#/components/schemas/access_grant' },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grant', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/unstable_access_grants/get',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_grants'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_grant',
        'x-response-key': 'access_grant',
        'x-title': 'Get an Access Grant',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_grants/list': {
      post: {
        description: 'Returns a list of all access grants.',
        operationId: 'unstableAccessGrantsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_id: {
                    description:
                      'ID of the entrance by which you want to filter the list of access grants.',
                    format: 'uuid',
                    type: 'string',
                  },
                  acs_system_id: {
                    description:
                      'ID of the access system by which you want to filter the list of access grants.',
                    format: 'uuid',
                    type: 'string',
                  },
                  location_id: {
                    deprecated: true,
                    format: 'uuid',
                    type: 'string',
                    'x-deprecated': 'Use `space_id`.',
                  },
                  space_id: {
                    description:
                      'ID of the space by which you want to filter the list of access grants.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity by which you want to filter the list of access grants.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_grants: {
                      items: { $ref: '#/components/schemas/access_grant' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_grants', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
          { client_session_with_customer: [] },
        ],
        summary: '/unstable_access_grants/list',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_grants'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_grants',
        'x-response-key': 'access_grants',
        'x-title': 'List Access Grants',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_methods/delete': {
      post: {
        description: 'Deletes an access method.',
        operationId: 'unstableAccessMethodsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method_id: {
                    description:
                      'ID of the access method that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_method_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_access_methods/delete',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_methods'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Access Method',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_methods/get': {
      post: {
        description: 'Gets an access method.',
        operationId: 'unstableAccessMethodsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_method_id: {
                    description:
                      'ID of the access method that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_method_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_method: {
                      $ref: '#/components/schemas/access_method',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_method', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_access_methods/get',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_methods'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'access_method',
        'x-response-key': 'access_method',
        'x-title': 'Get an Access Method',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_access_methods/list': {
      post: {
        description:
          'Lists all access methods, usually filtered by access grant.',
        operationId: 'unstableAccessMethodsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  access_grant_id: {
                    description:
                      'ID of the access grant by which to filter the list of access methods.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['access_grant_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    access_methods: {
                      items: { $ref: '#/components/schemas/access_method' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['access_methods', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_access_methods/list',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_access_methods'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'access_methods',
        'x-response-key': 'access_methods',
        'x-title': 'List Access Methods',
        'x-undocumented': 'Unreleased.',
      },
    },
    '/unstable_locations/add_acs_entrances': {
      post: {
        description:
          'Adds [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) to a specific location.',
        operationId: 'unstableLocationsAddAcsEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the location.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location to which you want to add entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/add_acs_entrances',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'add_acs_entrances',
        'x-response-key': null,
        'x-title': 'Add Entrances to a Location',
        'x-undocumented': 'Experimental locations.',
      },
      put: {
        description:
          'Adds [entrances](https://docs.seam.co/latest/capability-guides/access-systems/retrieving-entrance-details) to a specific location.',
        operationId: 'unstableLocationsAddAcsEntrancesPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the location.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location to which you want to add entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/add_acs_entrances',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add Entrances to a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/add_devices': {
      post: {
        description: 'Adds devices to a specific location.',
        operationId: 'unstableLocationsAddDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the location.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location to which you want to add devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/add_devices',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'add_devices',
        'x-response-key': null,
        'x-title': 'Add Devices to a Location',
        'x-undocumented': 'Experimental locations.',
      },
      put: {
        description: 'Adds devices to a specific location.',
        operationId: 'unstableLocationsAddDevicesPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the location.',
                    items: { format: 'uuid', type: 'string' },
                    minItems: 1,
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location to which you want to add devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/add_devices',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add Devices to a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/create': {
      post: {
        description: 'Creates a new location.',
        operationId: 'unstableLocationsCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to add to the new location.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  device_ids: {
                    description:
                      'IDs of the devices that you want to add to the new location.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  geolocation: {
                    description: 'Geolocation of the new location.',
                    properties: {
                      latitude: { format: 'float', type: 'number' },
                      longitude: { format: 'float', type: 'number' },
                    },
                    required: ['latitude', 'longitude'],
                    type: 'object',
                  },
                  name: {
                    description: 'Name of the new location.',
                    type: 'string',
                  },
                  time_zone: {
                    description: 'Time zone of the new location.',
                    type: 'string',
                  },
                },
                required: ['name'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    location: { $ref: '#/components/schemas/location' },
                    ok: { type: 'boolean' },
                  },
                  required: ['location', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/create',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'location',
        'x-response-key': 'location',
        'x-title': 'Create a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/delete': {
      post: {
        description: 'Deletes a location.',
        operationId: 'unstableLocationsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  location_id: {
                    description: 'ID of the location that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/delete',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/get': {
      post: {
        description: 'Gets a location.',
        operationId: 'unstableLocationsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  location_id: {
                    description: 'ID of the location that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    location: { $ref: '#/components/schemas/location' },
                    ok: { type: 'boolean' },
                  },
                  required: ['location', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/get',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'location',
        'x-response-key': 'location',
        'x-title': 'Get a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/list': {
      get: {
        description: 'Returns a list of all locations.',
        operationId: 'unstableLocationsListGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    locations: {
                      items: { $ref: '#/components/schemas/location' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['locations', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/list',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': 'locations',
        'x-title': 'List Locations',
        'x-undocumented': 'Experimental locations.',
      },
      post: {
        description: 'Returns a list of all locations.',
        operationId: 'unstableLocationsListPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    locations: {
                      items: { $ref: '#/components/schemas/location' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['locations', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/list',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'locations',
        'x-response-key': 'locations',
        'x-title': 'List Locations',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/remove_acs_entrances': {
      post: {
        description: 'Removes entrances from a specific location.',
        operationId: 'unstableLocationsRemoveAcsEntrancesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_entrance_ids: {
                    description:
                      'IDs of the entrances that you want to remove from the location.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location from which you want to remove entrances.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'acs_entrance_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/remove_acs_entrances',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'remove_acs_entrances',
        'x-response-key': null,
        'x-title': 'Remove Entrances from a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/remove_devices': {
      post: {
        description: 'Removes devices from a specific location.',
        operationId: 'unstableLocationsRemoveDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_ids: {
                    description:
                      'IDs of the devices that you want to remove from the location.',
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  location_id: {
                    description:
                      'ID of the location from which you want to remove devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['location_id', 'device_ids'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/remove_devices',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'remove_devices',
        'x-response-key': null,
        'x-title': 'Remove Devices from a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_locations/update': {
      patch: {
        description: 'Updates a location.',
        operationId: 'unstableLocationsUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  geolocation: {
                    description: 'Geolocation of the location.',
                    properties: {
                      latitude: { format: 'float', type: 'number' },
                      longitude: { format: 'float', type: 'number' },
                    },
                    required: ['latitude', 'longitude'],
                    type: 'object',
                  },
                  location_id: {
                    description: 'ID of the location that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the location.',
                    type: 'string',
                  },
                  time_zone: {
                    description: 'Time zone of the the location.',
                    type: 'string',
                  },
                },
                required: ['location_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    location: { $ref: '#/components/schemas/location' },
                    ok: { type: 'boolean' },
                  },
                  required: ['location', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/update',
        tags: [],
        'x-fern-ignore': true,
        'x-response-key': 'location',
        'x-title': 'Update a Location',
        'x-undocumented': 'Experimental locations.',
      },
      post: {
        description: 'Updates a location.',
        operationId: 'unstableLocationsUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  geolocation: {
                    description: 'Geolocation of the location.',
                    properties: {
                      latitude: { format: 'float', type: 'number' },
                      longitude: { format: 'float', type: 'number' },
                    },
                    required: ['latitude', 'longitude'],
                    type: 'object',
                  },
                  location_id: {
                    description: 'ID of the location that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  name: {
                    description: 'Name of the location.',
                    type: 'string',
                  },
                  time_zone: {
                    description: 'Time zone of the the location.',
                    type: 'string',
                  },
                },
                required: ['location_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    location: { $ref: '#/components/schemas/location' },
                    ok: { type: 'boolean' },
                  },
                  required: ['location', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_locations/update',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_locations'],
        'x-fern-sdk-method-name': 'update',
        'x-fern-sdk-return-value': 'location',
        'x-response-key': 'location',
        'x-title': 'Update a Location',
        'x-undocumented': 'Experimental locations.',
      },
    },
    '/unstable_partner/building_blocks/connect_accounts': {
      post: {
        description:
          'Creates a new building block magic link to connect accounts.',
        operationId: 'unstablePartnerBuildingBlocksConnectAccountsPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  customer_key: {
                    description:
                      'Customer key for which you want to connect accounts.',
                    type: 'string',
                  },
                },
                required: ['customer_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    magic_link: { $ref: '#/components/schemas/magic_link' },
                    ok: { type: 'boolean' },
                  },
                  required: ['magic_link', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_partner/building_blocks/connect_accounts',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_partner', 'building_blocks'],
        'x-fern-sdk-method-name': 'connect_accounts',
        'x-fern-sdk-return-value': 'magic_link',
        'x-response-key': 'magic_link',
        'x-title': 'Generate a Connect Accounts Building Block Magic Link',
        'x-undocumented': 'Experimental partner building blocks.',
      },
    },
    '/unstable_partner/building_blocks/generate_magic_link': {
      post: {
        description: 'Creates a new building block magic link.',
        operationId: 'unstablePartnerBuildingBlocksGenerateMagicLinkPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  building_block_type: {
                    description:
                      'Type of building block for which you want to create a magic link.',
                    enum: [
                      'connect_accounts',
                      'organize_spaces',
                      'console',
                      'manage_devices',
                    ],
                    type: 'string',
                  },
                  customer_key: {
                    description:
                      'Customer key for which you want to create a new building block magic link.',
                    type: 'string',
                  },
                  spaces: {
                    description:
                      'Optional list of spaces that you want to include in the new building block magic link.',
                    items: {
                      description:
                        'Represents a partner resource that enables you to send your space resources to Seam.',
                      properties: {
                        custom_metadata: {
                          additionalProperties: { type: 'string' },
                          description:
                            'Custom metadata associated with the space resource.',
                          type: 'object',
                        },
                        description: {
                          description: 'Description of the space resource.',
                          type: 'string',
                        },
                        name: {
                          description: 'Name of the space resource.',
                          type: 'string',
                        },
                        space_key: {
                          description: 'Key of the space for the resource.',
                          type: 'string',
                        },
                      },
                      required: ['space_key', 'name'],
                      type: 'object',
                      'x-route-path': '/unstable_partner/resources',
                      'x-undocumented': 'Unreleased.',
                    },
                    type: 'array',
                  },
                },
                required: ['building_block_type', 'customer_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    magic_link: { $ref: '#/components/schemas/magic_link' },
                    ok: { type: 'boolean' },
                  },
                  required: ['magic_link', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_partner/building_blocks/generate_magic_link',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_partner', 'building_blocks'],
        'x-fern-sdk-method-name': 'generate_magic_link',
        'x-fern-sdk-return-value': 'magic_link',
        'x-response-key': 'magic_link',
        'x-title': 'Generate a Building Block Magic Link',
        'x-undocumented': 'Experimental partner building blocks.',
      },
    },
    '/unstable_partner/building_blocks/manage_devices': {
      post: {
        description:
          'Creates a new building block magic link to manage devices.',
        operationId: 'unstablePartnerBuildingBlocksManageDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  customer_key: {
                    description:
                      'Customer key for which you want to manage devices.',
                    type: 'string',
                  },
                },
                required: ['customer_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    magic_link: { $ref: '#/components/schemas/magic_link' },
                    ok: { type: 'boolean' },
                  },
                  required: ['magic_link', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_partner/building_blocks/manage_devices',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_partner', 'building_blocks'],
        'x-fern-sdk-method-name': 'manage_devices',
        'x-fern-sdk-return-value': 'magic_link',
        'x-response-key': 'magic_link',
        'x-title': 'Generate a Manage Devices Building Block Magic Link',
        'x-undocumented': 'Experimental partner building blocks.',
      },
    },
    '/unstable_partner/building_blocks/organize_spaces': {
      post: {
        description:
          'Creates a new building block magic link to organize spaces.',
        operationId: 'unstablePartnerBuildingBlocksOrganizeSpacesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  customer_key: {
                    description:
                      'Customer key for which you want to organize spaces.',
                    type: 'string',
                  },
                  spaces: {
                    description:
                      'Optional list of spaces that you want to include in the new building block magic link.',
                    items: {
                      description:
                        'Represents a partner resource that enables you to send your space resources to Seam.',
                      properties: {
                        custom_metadata: {
                          additionalProperties: { type: 'string' },
                          description:
                            'Custom metadata associated with the space resource.',
                          type: 'object',
                        },
                        description: {
                          description: 'Description of the space resource.',
                          type: 'string',
                        },
                        name: {
                          description: 'Name of the space resource.',
                          type: 'string',
                        },
                        space_key: {
                          description: 'Key of the space for the resource.',
                          type: 'string',
                        },
                      },
                      required: ['space_key', 'name'],
                      type: 'object',
                      'x-route-path': '/unstable_partner/resources',
                      'x-undocumented': 'Unreleased.',
                    },
                    type: 'array',
                  },
                },
                required: ['customer_key'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    magic_link: { $ref: '#/components/schemas/magic_link' },
                    ok: { type: 'boolean' },
                  },
                  required: ['magic_link', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_partner/building_blocks/organize_spaces',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_partner', 'building_blocks'],
        'x-fern-sdk-method-name': 'organize_spaces',
        'x-fern-sdk-return-value': 'magic_link',
        'x-response-key': 'magic_link',
        'x-title': 'Generate an Organize Spaces Building Block Magic Link',
        'x-undocumented': 'Experimental partner building blocks.',
      },
    },
    '/unstable_partner/resources/push': {
      post: {
        description: 'Sends Seam some of your resources.',
        operationId: 'unstablePartnerResourcesPushPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    items: {
                      description:
                        'Represents a partner resource that enables you to send your user identity and access grant resources to Seam.',
                      properties: {
                        custom_metadata: {
                          additionalProperties: { type: 'string' },
                          description:
                            'Custom metadata associated with the partner resource.',
                          type: 'object',
                        },
                        customer_key: {
                          description:
                            'Customer key associated with the resource that you want to push to Seam.',
                          type: 'string',
                        },
                        description: {
                          description: 'Description of the partner resource.',
                          type: 'string',
                        },
                        email_address: {
                          description:
                            'Email address associated with the user identity partner resource.',
                          type: 'string',
                        },
                        ends_at: {
                          description:
                            'Ending date and time associated with the access grant partner resource.',
                          type: 'string',
                        },
                        location_keys: {
                          description:
                            'Location keys associated with the access grant partner resource.',
                          items: { type: 'string' },
                          type: 'array',
                        },
                        name: {
                          description: 'Name of the partner resource.',
                          type: 'string',
                        },
                        partner_resource_key: {
                          description:
                            'Key of the resource that you want to push to Seam.',
                          type: 'string',
                        },
                        partner_resource_type: {
                          description:
                            'Type of the resource that you want to push to Seam.',
                          type: 'string',
                        },
                        phone_number: {
                          description:
                            'Phone number associated with the user identity partner resource.',
                          type: 'string',
                        },
                        starts_at: {
                          description:
                            'Starting date and time associated with the access grant partner resource.',
                          type: 'string',
                        },
                        user_identity_key: {
                          description:
                            'User identity key associated with the access grant partner resource.',
                          type: 'string',
                        },
                      },
                      type: 'object',
                      'x-route-path': '/unstable_partner/resources',
                      'x-undocumented': 'Unreleased.',
                    },
                    type: 'array',
                  },
                  {
                    description:
                      'Represents a partner resource that enables you to send your user identity and access grant resources to Seam.',
                    properties: {
                      custom_metadata: {
                        additionalProperties: { type: 'string' },
                        description:
                          'Custom metadata associated with the partner resource.',
                        type: 'object',
                      },
                      customer_key: {
                        description:
                          'Customer key associated with the resource that you want to push to Seam.',
                        type: 'string',
                      },
                      description: {
                        description: 'Description of the partner resource.',
                        type: 'string',
                      },
                      email_address: {
                        description:
                          'Email address associated with the user identity partner resource.',
                        type: 'string',
                      },
                      ends_at: {
                        description:
                          'Ending date and time associated with the access grant partner resource.',
                        type: 'string',
                      },
                      location_keys: {
                        description:
                          'Location keys associated with the access grant partner resource.',
                        items: { type: 'string' },
                        type: 'array',
                      },
                      name: {
                        description: 'Name of the partner resource.',
                        type: 'string',
                      },
                      partner_resource_key: {
                        description:
                          'Key of the resource that you want to push to Seam.',
                        type: 'string',
                      },
                      partner_resource_type: {
                        description:
                          'Type of the resource that you want to push to Seam.',
                        type: 'string',
                      },
                      phone_number: {
                        description:
                          'Phone number associated with the user identity partner resource.',
                        type: 'string',
                      },
                      starts_at: {
                        description:
                          'Starting date and time associated with the access grant partner resource.',
                        type: 'string',
                      },
                      user_identity_key: {
                        description:
                          'User identity key associated with the access grant partner resource.',
                        type: 'string',
                      },
                    },
                    type: 'object',
                    'x-route-path': '/unstable_partner/resources',
                    'x-undocumented': 'Unreleased.',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/unstable_partner/resources/push',
        tags: [],
        'x-fern-sdk-group-name': ['unstable_partner', 'resources'],
        'x-fern-sdk-method-name': 'push',
        'x-response-key': null,
        'x-title': 'Push Partner Resources at Seam',
        'x-undocumented': 'Experimental partner resources.',
      },
    },
    '/user_identities/add_acs_user': {
      post: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesAddAcsUserPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'acs_user_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/add_acs_user',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'add_acs_user',
        'x-response-key': null,
        'x-title': 'Add an ACS User to a User Identity',
      },
      put: {
        description:
          'Adds a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) to a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesAddAcsUserPut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to add to the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity to which you want to add an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'acs_user_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/add_acs_user',
        tags: ['/user_identities'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Add an ACS User to a User Identity',
      },
    },
    '/user_identities/create': {
      post: {
        description:
          'Creates a new [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_system_ids: {
                    description:
                      "List of access system IDs to associate with the new user identity through access system users. If there's no user with the same email address or phone number in the specified access systems, a new access system user is created. If there is an existing user with the same email or phone number in the specified access systems, the user is linked to the user identity.",
                    items: { format: 'uuid', type: 'string' },
                    type: 'array',
                  },
                  email_address: {
                    description:
                      'Unique email address for the new user identity.',
                    format: 'email',
                    nullable: true,
                    type: 'string',
                  },
                  full_name: {
                    description:
                      'Full name of the user associated with the new user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                  phone_number: {
                    description:
                      'Unique phone number for the new user identity in E.164 format (for example, +15555550100).',
                    nullable: true,
                    type: 'string',
                  },
                  user_identity_key: {
                    description: 'Unique key for the new user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    user_identity: {
                      $ref: '#/components/schemas/user_identity',
                    },
                  },
                  required: ['user_identity', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/create',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'user_identity',
        'x-response-key': 'user_identity',
        'x-title': 'Create a User Identity',
      },
    },
    '/user_identities/delete': {
      post: {
        description:
          'Deletes a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity). This deletes the user identity and all associated resources, including any [credentials](https://docs.seam.co/latest/api/access-control-systems/credentials), [acs users](https://docs.seam.co/latest/api/access-control-systems/users) and [client sessions](https://docs.seam.co/latest/api/client_sessions).',
        operationId: 'userIdentitiesDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/delete',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a User Identity',
      },
    },
    '/user_identities/enrollment_automations/delete': {
      post: {
        description:
          'Deletes a specified [enrollment automation](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system). You must delete all enrollment automations associated with a [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) before [deleting the user identity](https://docs.seam.co/latest/api/user_identities/delete).',
        operationId: 'userIdentitiesEnrollmentAutomationsDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  enrollment_automation_id: {
                    description:
                      'ID of the enrollment automation that you want to delete.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['enrollment_automation_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/enrollment_automations/delete',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities', 'enrollment_automations'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete an Enrollment Automation',
      },
    },
    '/user_identities/enrollment_automations/get': {
      post: {
        description:
          'Returns a specified [enrollment automation](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system).',
        operationId: 'userIdentitiesEnrollmentAutomationsGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  enrollment_automation_id: {
                    description:
                      'ID of the enrollment automation that you want to get.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['enrollment_automation_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    enrollment_automation: {
                      $ref: '#/components/schemas/enrollment_automation',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['enrollment_automation', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/enrollment_automations/get',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities', 'enrollment_automations'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'enrollment_automation',
        'x-response-key': 'enrollment_automation',
        'x-title': 'Get an Enrollment Automation',
      },
    },
    '/user_identities/enrollment_automations/launch': {
      post: {
        description:
          'Sets up a new [enrollment automation](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system) for a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) with a specified [credential manager](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system).',
        operationId: 'userIdentitiesEnrollmentAutomationsLaunchPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_credential_pool_id: {
                    description:
                      'ID of the credential pool from which to obtain credentials for the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  create_credential_manager_user: {
                    description:
                      'Indicates whether to create an associated credential manager user. If you set `create_credential_manager_user` to `true`, you cannot specify a `credential_manager_acs_user_id`.',
                    type: 'boolean',
                  },
                  credential_manager_acs_system_id: {
                    description:
                      'ID of the desired access system that serves as the credential manager for the enrollment automation.',
                    format: 'uuid',
                    type: 'string',
                  },
                  credential_manager_acs_user_id: {
                    description:
                      'ID of the associated access system user within the credential manager. If you specify a `credential_manager_acs_user_id`, you cannot set `create_credential_manager_user` to `true`.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to launch an enrollment automation.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: [
                  'user_identity_id',
                  'credential_manager_acs_system_id',
                ],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    enrollment_automation: {
                      $ref: '#/components/schemas/enrollment_automation',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['enrollment_automation', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/enrollment_automations/launch',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities', 'enrollment_automations'],
        'x-fern-sdk-method-name': 'launch',
        'x-fern-sdk-return-value': 'enrollment_automation',
        'x-response-key': 'enrollment_automation',
        'x-title': 'Launch an Enrollment Automation',
      },
    },
    '/user_identities/enrollment_automations/list': {
      post: {
        description:
          'Returns a list of all [enrollment automations](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/issuing-mobile-credentials-from-an-access-control-system) for a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesEnrollmentAutomationsListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve enrollment automations.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    enrollment_automations: {
                      items: {
                        $ref: '#/components/schemas/enrollment_automation',
                      },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['enrollment_automations', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/enrollment_automations/list',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities', 'enrollment_automations'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'enrollment_automations',
        'x-response-key': 'enrollment_automations',
        'x-title': 'List Enrollment Automations',
      },
    },
    '/user_identities/generate_instant_key': {
      post: {
        description:
          'Generates a new [instant key](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/instant-keys) for a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesGenerateInstantKeyPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  max_use_count: {
                    default: 1,
                    description:
                      'Maximum number of times the instant key can be used. Default: 1.',
                    format: 'float',
                    type: 'number',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to generate an instant key.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    instant_key: { $ref: '#/components/schemas/instant_key' },
                    ok: { type: 'boolean' },
                  },
                  required: ['instant_key', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/generate_instant_key',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'generate_instant_key',
        'x-fern-sdk-return-value': 'instant_key',
        'x-response-key': 'instant_key',
        'x-title': 'Generate an Instant Key',
      },
    },
    '/user_identities/get': {
      post: {
        description:
          'Returns a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                oneOf: [
                  {
                    properties: {
                      user_identity_id: {
                        description:
                          'ID of the user identity that you want to get.',
                        format: 'uuid',
                        type: 'string',
                      },
                    },
                    required: ['user_identity_id'],
                    type: 'object',
                  },
                  {
                    properties: { user_identity_key: { type: 'string' } },
                    required: ['user_identity_key'],
                    type: 'object',
                  },
                ],
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    user_identity: {
                      $ref: '#/components/schemas/user_identity',
                    },
                  },
                  required: ['user_identity', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/get',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'user_identity',
        'x-response-key': 'user_identity',
        'x-title': 'Get a User Identity',
      },
    },
    '/user_identities/grant_access_to_device': {
      post: {
        description:
          'Grants a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) access to a specified [device](https://docs.seam.co/latest/core-concepts/devices/).',
        operationId: 'userIdentitiesGrantAccessToDevicePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the managed device to which you want to grant access to the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to grant access to a device.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/grant_access_to_device',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'grant_access_to_device',
        'x-response-key': null,
        'x-title': 'Grant a User Identity Access to a Device',
      },
      put: {
        description:
          'Grants a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity) access to a specified [device](https://docs.seam.co/latest/core-concepts/devices/).',
        operationId: 'userIdentitiesGrantAccessToDevicePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the managed device to which you want to grant access to the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to grant access to a device.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/grant_access_to_device',
        tags: ['/user_identities'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Grant a User Identity Access to a Device',
      },
    },
    '/user_identities/list': {
      post: {
        description:
          'Returns a list of all [user identities](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesListPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  credential_manager_acs_system_id: {
                    description:
                      '`acs_system_id` of the credential manager by which you want to filter the list of user identities.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    user_identities: {
                      items: { $ref: '#/components/schemas/user_identity' },
                      type: 'array',
                    },
                  },
                  required: ['user_identities', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/list',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'user_identities',
        'x-response-key': 'user_identities',
        'x-title': 'List User Identities',
      },
    },
    '/user_identities/list_accessible_devices': {
      post: {
        description:
          'Returns a list of all [devices](https://docs.seam.co/latest/core-concepts/devices) associated with a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesListAccessibleDevicesPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all accessible devices.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    accessible_devices: {
                      deprecated: true,
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                      'x-deprecated': 'Use devices.',
                    },
                    devices: {
                      items: { $ref: '#/components/schemas/device' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['devices', 'accessible_devices', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/list_accessible_devices',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'list_accessible_devices',
        'x-fern-sdk-return-value': 'devices',
        'x-response-key': 'devices',
        'x-title': 'List Accessible Devices for a User Identity',
      },
    },
    '/user_identities/list_acs_systems': {
      post: {
        description:
          'Returns a list of all [access systems](https://docs.seam.co/latest/capability-guides/access-systems) associated with a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesListAcsSystemsPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all access systems.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_systems: {
                      items: { $ref: '#/components/schemas/acs_system' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_systems', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { client_session: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/list_acs_systems',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'list_acs_systems',
        'x-fern-sdk-return-value': 'acs_systems',
        'x-response-key': 'acs_systems',
        'x-title': 'List ACS Systems Associated with a User Identity',
      },
    },
    '/user_identities/list_acs_users': {
      post: {
        description:
          'Returns a list of all [access system users](https://docs.seam.co/latest/capability-guides/access-systems/user-management) assigned to a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesListAcsUsersPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  user_identity_id: {
                    description:
                      'ID of the user identity for which you want to retrieve all access system users.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    acs_users: {
                      items: { $ref: '#/components/schemas/acs_user' },
                      type: 'array',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['acs_users', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/list_acs_users',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'list_acs_users',
        'x-fern-sdk-return-value': 'acs_users',
        'x-response-key': 'acs_users',
        'x-title': 'List ACS Users Associated with a User Identity',
      },
    },
    '/user_identities/remove_acs_user': {
      post: {
        description:
          'Removes a specified [access system user](https://docs.seam.co/latest/capability-guides/access-systems/user-management) from a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesRemoveAcsUserPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  acs_user_id: {
                    description:
                      'ID of the access system user that you want to remove from the user identity..',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity from which you want to remove an access system user.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'acs_user_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/remove_acs_user',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'remove_acs_user',
        'x-response-key': null,
        'x-title': 'Remove an ACS User from a User Identity',
      },
    },
    '/user_identities/revoke_access_to_device': {
      post: {
        description:
          'Revokes access to a specified [device](https://docs.seam.co/latest/core-concepts/devices/) from a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesRevokeAccessToDevicePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  device_id: {
                    description:
                      'ID of the managed device to which you want to revoke access from the user identity.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity from which you want to revoke access to a device.',
                    format: 'uuid',
                    type: 'string',
                  },
                },
                required: ['user_identity_id', 'device_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/user_identities/revoke_access_to_device',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'revoke_access_to_device',
        'x-response-key': null,
        'x-title': 'Revoke Access to a Device from a User Identity',
      },
    },
    '/user_identities/update': {
      patch: {
        description:
          'Updates a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  email_address: {
                    description: 'Unique email address for the user identity.',
                    format: 'email',
                    nullable: true,
                    type: 'string',
                  },
                  full_name: {
                    description:
                      'Full name of the user associated with the user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                  phone_number: {
                    description: 'Unique phone number for the user identity.',
                    nullable: true,
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_key: {
                    description: 'Unique key for the user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/update',
        tags: ['/user_identities'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a User Identity',
      },
      post: {
        description:
          'Updates a specified [user identity](https://docs.seam.co/latest/capability-guides/mobile-access-in-development/managing-mobile-app-user-accounts-with-user-identities#what-is-a-user-identity).',
        operationId: 'userIdentitiesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  email_address: {
                    description: 'Unique email address for the user identity.',
                    format: 'email',
                    nullable: true,
                    type: 'string',
                  },
                  full_name: {
                    description:
                      'Full name of the user associated with the user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                  phone_number: {
                    description: 'Unique phone number for the user identity.',
                    nullable: true,
                    type: 'string',
                  },
                  user_identity_id: {
                    description:
                      'ID of the user identity that you want to update.',
                    format: 'uuid',
                    type: 'string',
                  },
                  user_identity_key: {
                    description: 'Unique key for the user identity.',
                    minLength: 1,
                    nullable: true,
                    type: 'string',
                  },
                },
                required: ['user_identity_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
          { api_key: [] },
        ],
        summary: '/user_identities/update',
        tags: ['/user_identities'],
        'x-fern-sdk-group-name': ['user_identities'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a User Identity',
      },
    },
    '/webhooks/create': {
      post: {
        description:
          'Creates a new [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  event_types: {
                    default: ['*'],
                    description:
                      'Types of events that you want the new webhook to receive.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  url: {
                    description: 'URL for the new webhook.',
                    format: 'uri',
                    type: 'string',
                  },
                },
                required: ['url'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    webhook: { $ref: '#/components/schemas/webhook' },
                  },
                  required: ['webhook', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/create',
        tags: ['/webhooks'],
        'x-fern-sdk-group-name': ['webhooks'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'webhook',
        'x-response-key': 'webhook',
        'x-title': 'Create a Webhook',
      },
    },
    '/webhooks/delete': {
      post: {
        description:
          'Deletes a specified [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksDeletePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  webhook_id: {
                    description: 'ID of the webhook that you want to delete.',
                    type: 'string',
                  },
                },
                required: ['webhook_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/delete',
        tags: ['/webhooks'],
        'x-fern-sdk-group-name': ['webhooks'],
        'x-fern-sdk-method-name': 'delete',
        'x-response-key': null,
        'x-title': 'Delete a Webhook',
      },
    },
    '/webhooks/get': {
      post: {
        description:
          'Gets a specified [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksGetPost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  webhook_id: {
                    description: 'ID of the webhook that you want to get.',
                    type: 'string',
                  },
                },
                required: ['webhook_id'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    webhook: { $ref: '#/components/schemas/webhook' },
                  },
                  required: ['webhook', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/get',
        tags: ['/webhooks'],
        'x-fern-sdk-group-name': ['webhooks'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'webhook',
        'x-response-key': 'webhook',
        'x-title': 'Get a Webhook',
      },
    },
    '/webhooks/list': {
      get: {
        description:
          'Returns a list of all [webhooks](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksListGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    webhooks: {
                      items: { $ref: '#/components/schemas/webhook' },
                      type: 'array',
                    },
                  },
                  required: ['webhooks', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/list',
        tags: ['/webhooks'],
        'x-fern-ignore': true,
        'x-response-key': 'webhooks',
        'x-title': 'List Webhooks',
      },
      post: {
        description:
          'Returns a list of all [webhooks](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksListPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    webhooks: {
                      items: { $ref: '#/components/schemas/webhook' },
                      type: 'array',
                    },
                  },
                  required: ['webhooks', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/list',
        tags: ['/webhooks'],
        'x-fern-sdk-group-name': ['webhooks'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'webhooks',
        'x-response-key': 'webhooks',
        'x-title': 'List Webhooks',
      },
    },
    '/webhooks/update': {
      post: {
        description:
          'Updates a specified [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  event_types: {
                    description:
                      'Types of events that you want the webhook to receive.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  webhook_id: {
                    description: 'ID of the webhook that you want to update.',
                    type: 'string',
                  },
                },
                required: ['webhook_id', 'event_types'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/update',
        tags: ['/webhooks'],
        'x-fern-sdk-group-name': ['webhooks'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Update a Webhook',
      },
      put: {
        description:
          'Updates a specified [webhook](https://docs.seam.co/latest/developer-tools/webhooks).',
        operationId: 'webhooksUpdatePut',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  event_types: {
                    description:
                      'Types of events that you want the webhook to receive.',
                    items: { type: 'string' },
                    type: 'array',
                  },
                  webhook_id: {
                    description: 'ID of the webhook that you want to update.',
                    type: 'string',
                  },
                },
                required: ['webhook_id', 'event_types'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: { ok: { type: 'boolean' } },
                  required: ['ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/webhooks/update',
        tags: ['/webhooks'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Update a Webhook',
      },
    },
    '/workspaces/create': {
      post: {
        description:
          'Creates a new [workspace](https://docs.seam.co/latest/core-concepts/workspaces).',
        operationId: 'workspacesCreatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  company_name: {
                    description: 'Company name for the new workspace.',
                    type: 'string',
                  },
                  connect_partner_name: {
                    deprecated: true,
                    description: 'Connect partner name for the new workspace.',
                    nullable: true,
                    type: 'string',
                    'x-deprecated': 'Use `company_name` instead.',
                  },
                  connect_webview_customization: {
                    description:
                      '[Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) customizations for the new workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                    properties: {
                      logo_shape: {
                        description:
                          'Logo shape for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the new workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        enum: ['circle', 'square'],
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_color: {
                        description:
                          'Primary button color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the new workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_text_color: {
                        description:
                          'Primary button text color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the new workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      success_message: {
                        description:
                          'Success message for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the new workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                  is_sandbox: {
                    default: false,
                    description:
                      'Indicates whether the new workspace is a [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces).',
                    type: 'boolean',
                  },
                  name: {
                    description: 'Name of the new workspace.',
                    type: 'string',
                  },
                  webview_logo_shape: {
                    deprecated: true,
                    enum: ['circle', 'square'],
                    type: 'string',
                    'x-deprecated':
                      'Use `connect_webview_customization.webview_logo_shape` instead.',
                  },
                  webview_primary_button_color: {
                    deprecated: true,
                    type: 'string',
                    'x-deprecated':
                      'Use `connect_webview_customization.webview_primary_button_color` instead.',
                  },
                  webview_primary_button_text_color: {
                    deprecated: true,
                    type: 'string',
                    'x-deprecated':
                      'Use `connect_webview_customization.webview_primary_button_text_color` instead.',
                  },
                  webview_success_message: {
                    deprecated: true,
                    type: 'string',
                    'x-deprecated':
                      'Use `connect_webview_customization.webview_success_message` instead.',
                  },
                },
                required: ['name'],
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    workspace: { $ref: '#/components/schemas/workspace' },
                  },
                  required: ['workspace', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_without_workspace: [] },
          { console_session_with_workspace: [] },
          { console_session_without_workspace: [] },
        ],
        summary: '/workspaces/create',
        tags: ['/workspaces'],
        'x-fern-sdk-group-name': ['workspaces'],
        'x-fern-sdk-method-name': 'create',
        'x-fern-sdk-return-value': 'workspace',
        'x-response-key': 'workspace',
        'x-title': 'Create a Workspace',
      },
    },
    '/workspaces/get': {
      get: {
        description:
          'Returns the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesGetGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    workspace: { $ref: '#/components/schemas/workspace' },
                  },
                  required: ['workspace', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
        ],
        summary: '/workspaces/get',
        tags: ['/workspaces'],
        'x-fern-ignore': true,
        'x-response-key': 'workspace',
        'x-title': 'Get a Workspace',
      },
      post: {
        description:
          'Returns the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesGetPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    workspace: { $ref: '#/components/schemas/workspace' },
                  },
                  required: ['workspace', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { console_session_with_workspace: [] },
          { client_session: [] },
          { client_session_with_customer: [] },
          { pat_with_workspace: [] },
        ],
        summary: '/workspaces/get',
        tags: ['/workspaces'],
        'x-fern-sdk-group-name': ['workspaces'],
        'x-fern-sdk-method-name': 'get',
        'x-fern-sdk-return-value': 'workspace',
        'x-response-key': 'workspace',
        'x-title': 'Get a Workspace',
      },
    },
    '/workspaces/list': {
      get: {
        description:
          'Returns a list of [workspaces](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesListGet',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    workspaces: {
                      items: { $ref: '#/components/schemas/workspace' },
                      type: 'array',
                    },
                  },
                  required: ['workspaces', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { pat_without_workspace: [] },
          { api_key: [] },
          { client_session: [] },
          { console_session_with_workspace: [] },
          { console_session_without_workspace: [] },
        ],
        summary: '/workspaces/list',
        tags: ['/workspaces'],
        'x-fern-ignore': true,
        'x-response-key': 'workspaces',
        'x-title': 'List Workspaces',
      },
      post: {
        description:
          'Returns a list of [workspaces](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesListPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    ok: { type: 'boolean' },
                    workspaces: {
                      items: { $ref: '#/components/schemas/workspace' },
                      type: 'array',
                    },
                  },
                  required: ['workspaces', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { pat_with_workspace: [] },
          { pat_without_workspace: [] },
          { api_key: [] },
          { client_session: [] },
          { console_session_with_workspace: [] },
          { console_session_without_workspace: [] },
        ],
        summary: '/workspaces/list',
        tags: ['/workspaces'],
        'x-fern-sdk-group-name': ['workspaces'],
        'x-fern-sdk-method-name': 'list',
        'x-fern-sdk-return-value': 'workspaces',
        'x-response-key': 'workspaces',
        'x-title': 'List Workspaces',
      },
    },
    '/workspaces/reset_sandbox': {
      post: {
        description:
          'Resets the [sandbox workspace](https://docs.seam.co/latest/core-concepts/workspaces#sandbox-workspaces) associated with the authentication value. Note that this endpoint is only available for sandbox workspaces.',
        operationId: 'workspacesResetSandboxPost',
        responses: {
          200: {
            content: {
              'application/json': {
                schema: {
                  properties: {
                    action_attempt: {
                      $ref: '#/components/schemas/action_attempt',
                    },
                    ok: { type: 'boolean' },
                  },
                  required: ['action_attempt', 'ok'],
                  type: 'object',
                },
              },
            },
            description: 'OK',
          },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { pat_with_workspace: [] },
          { console_session_with_workspace: [] },
        ],
        summary: '/workspaces/reset_sandbox',
        tags: ['/workspaces'],
        'x-action-attempt-type': 'RESET_SANDBOX_WORKSPACE',
        'x-fern-sdk-group-name': ['workspaces'],
        'x-fern-sdk-method-name': 'reset_sandbox',
        'x-fern-sdk-return-value': 'action_attempt',
        'x-response-key': 'action_attempt',
        'x-title': 'Reset a Sandbox Workspace',
      },
    },
    '/workspaces/update': {
      patch: {
        description:
          'Updates the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesUpdatePatch',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_partner_name: {
                    description: 'Connect partner name for the workspace.',
                    type: 'string',
                  },
                  connect_webview_customization: {
                    description:
                      '[Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) customizations for the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                    properties: {
                      logo_shape: {
                        description:
                          'Logo shape for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        enum: ['circle', 'square'],
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_color: {
                        description:
                          'Primary button color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_text_color: {
                        description:
                          'Primary button text color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      success_message: {
                        description:
                          'Success message for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                  is_suspended: {
                    description:
                      'Indicates whether the workspace is suspended.',
                    type: 'boolean',
                  },
                  name: {
                    description: 'Name of the workspace.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: { description: 'OK' },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { console_session_with_workspace: [] },
          { pat_with_workspace: [] },
        ],
        summary: '/workspaces/update',
        tags: ['/workspaces'],
        'x-fern-ignore': true,
        'x-response-key': null,
        'x-title': 'Udpate a Workspace',
      },
      post: {
        description:
          'Updates the [workspace](https://docs.seam.co/latest/core-concepts/workspaces) associated with the authentication value.',
        operationId: 'workspacesUpdatePost',
        requestBody: {
          content: {
            'application/json': {
              schema: {
                properties: {
                  connect_partner_name: {
                    description: 'Connect partner name for the workspace.',
                    type: 'string',
                  },
                  connect_webview_customization: {
                    description:
                      '[Connect Webview](https://docs.seam.co/latest/core-concepts/connect-webviews) customizations for the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                    properties: {
                      logo_shape: {
                        description:
                          'Logo shape for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        enum: ['circle', 'square'],
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_color: {
                        description:
                          'Primary button color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      primary_button_text_color: {
                        description:
                          'Primary button text color for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                      success_message: {
                        description:
                          'Success message for [Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews) in the workspace. See also [Customize the Look and Feel of Your Connect Webviews](https://docs.seam.co/latest/core-concepts/connect-webviews/customizing-connect-webviews#customize-the-look-and-feel-of-your-connect-webviews).',
                        nullable: true,
                        type: 'string',
                      },
                    },
                    type: 'object',
                  },
                  is_suspended: {
                    description:
                      'Indicates whether the workspace is suspended.',
                    type: 'boolean',
                  },
                  name: {
                    description: 'Name of the workspace.',
                    type: 'string',
                  },
                },
                type: 'object',
              },
            },
          },
        },
        responses: {
          200: { description: 'OK' },
          400: { description: 'Bad Request' },
          401: { description: 'Unauthorized' },
        },
        security: [
          { api_key: [] },
          { console_session_with_workspace: [] },
          { pat_with_workspace: [] },
        ],
        summary: '/workspaces/update',
        tags: ['/workspaces'],
        'x-fern-sdk-group-name': ['workspaces'],
        'x-fern-sdk-method-name': 'update',
        'x-response-key': null,
        'x-title': 'Udpate a Workspace',
      },
    },
  },
  servers: [{ url: 'https://connect.getseam.com' }],
  tags: [
    { description: 'access_codes', name: '/access_codes' },
    { description: 'acs', name: '/acs' },
    { description: 'action_attempts', name: '/action_attempts' },
    { description: 'client_sessions', name: '/client_sessions' },
    { description: 'connected_accounts', name: '/connected_accounts' },
    { description: 'connect_webviews', name: '/connect_webviews' },
    { description: 'devices', name: '/devices' },
    { description: 'events', name: '/events' },
    { description: 'health', name: '/health' },
    { description: 'locks', name: '/locks' },
    { description: 'networks', name: '/networks' },
    { description: 'noise_sensors', name: '/noise_sensors' },
    { description: 'phones', name: '/phones' },
    { description: 'thermostats', name: '/thermostats' },
    { description: 'user_identities', name: '/user_identities' },
    { description: 'webhooks', name: '/webhooks' },
    { description: 'workspaces', name: '/workspaces' },
  ],
}
